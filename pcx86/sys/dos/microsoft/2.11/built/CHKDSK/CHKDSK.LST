Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-1
                                                            

                                TITLE   CHKDSK - MS-DOS Disk consistancy checke
				r 
                                 
                                ; CHKDSK        Version 2.30 
                                ; Verifies and repairs MS-DOS disk directory. 
                                 
                                 
                                ; To build CHKDSK you need three modules: 
                                ; CHKDSK CHKPROC CHKMES 
                                ; They should be linked the that order as well.
				 
                                 
                                 
                                ; REVISION HISTORY 
                                 
                                ;REV 1.1 
                                ;     05/21/82  Added rev number 
                                 
                                ;REV 1.5 
                                ;       Mod by NANCYP to report on extents 
                                ;       Mod by AARONR to report volume ID 
                                 
                                ;REV 2.0 
                                ;       Total rewrite for directories 
                                 
                                ;REV 2.1 
                                ;       Added ^C and INT 24H handlers 
                                 
                                ;REV 2.2 
                                ;       INTERNATIONAL support 
                                 
                                ;REV 2.3 
                                ;       Split into two modules to allow assembl
				y on a PC 
                                ;       CHKDSK and CHKPROC 
                                 
 = 0000                         FALSE   EQU     0 
 = FFFF                         TRUE    EQU     NOT FALSE 
                                 
 = 003A                         DRVCHAR EQU     ":" 
                                 
                                ;The following defines the ranges of DOS versio
				n numbers for which this CHKDSK 
                                ; is good 
                                 
 = 0136                         DOSVER_LOW EQU  0136H   ;1.54 in hex 
 = 020B                         DOSVER_HIGH EQU 020BH   ;2.11 in hex 
                                 
                                 
                             C          INCLUDE DOSSYM.ASM 
                             C  include DOSMAC.ASM 
                             C  ; 
                             C  ; Macro file for MSDOS. 
                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-2
                                                            

                             C   
                             C  SUBTTL BREAK a listing into pages and give new 
				subtitles 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-3
BREAK a listing into pages and give new subtitles           

                             C  PAGE 
                             C  BREAK MACRO subtitle 
                             C   SUBTTL subtitle 
                             C   PAGE 
                             C  ENDM 
                             C   
                             C  BREAK <I_NEED: declare a variable external, if 
				necessary, and allocate a size> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-4
I_NEED: declare a variable external, if necessary, and alloc

                             C   
                             C  ; 
                             C  ; declare a variable external and allocate a si
				ze 
                             C  ; 
                             C  I_NEED MACRO sym,len 
                             C   DATA SEGMENT BYTE PUBLIC 'DATA' 
                             C   IFIDN <len>,<WORD> 
                             C   EXTRN &sym:WORD 
                             C   ELSE 
                             C   IFIDN <len>,<DWORD> 
                             C   EXTRN &sym:DWORD 
                             C   ELSE 
                             C   EXTRN &sym:BYTE 
                             C   ENDIF 
                             C   ENDIF 
                             C   DATA ENDS 
                             C  ENDM 
                             C   
                             C  ; 
                             C  ; call a procedure that may be external. The ca
				ll will be short. 
                             C  ; 
                             C  invoke MACRO name 
                             C  .xcref 
                             C   IF2 
                             C   IFNDEF name 
                             C   EXTRN name:NEAR 
                             C   ENDIF 
                             C   ENDIF 
                             C  .cref 
                             C   CALL name 
                             C  ENDM 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-5
I_NEED: declare a variable external, if necessary, and alloc

                             C  PAGE 
                             C  ; 
                             C  ; jump to a label that may be external. The jum
				p will be near. 
                             C  ; 
                             C  transfer MACRO name 
                             C  .xcref 
                             C   IF2 
                             C   IFNDEF name 
                             C   EXTRN name:NEAR 
                             C   ENDIF 
                             C   ENDIF 
                             C  .cref 
                             C   JUMP name 
                             C  ENDM 
                             C   
                             C  ; 
                             C  ; get a short address in a word 
                             C  ; 
                             C  short_addr MACRO name 
                             C   IFDIF <name>,<?> 
                             C  .xcref 
                             C   IF2 
                             C   IFNDEF name 
                             C   EXTRN name:NEAR 
                             C   ENDIF 
                             C   ENDIF 
                             C  .cref 
                             C   DW OFFSET DOSGROUP:name 
                             C   ELSE 
                             C   DW ? 
                             C   ENDIF 
                             C  ENDM 
                             C   
                             C  ; 
                             C  ; get a long address in a dword 
                             C  ; 
                             C  long_addr MACRO name 
                             C  .xcref 
                             C   IF2 
                             C   IFNDEF name 
                             C   EXTRN name:NEAR 
                             C   ENDIF 
                             C  .cref 
                             C   DD name 
                             C  ENDM 
                             C   
                             C  ; 
                             C  ; declare a PROC near or far but PUBLIC nonethe
				less 
                             C  ; 
                             C  procedure MACRO name,distance 
                             C   PUBLIC name 
                             C  name PROC distance 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-6
I_NEED: declare a variable external, if necessary, and alloc

                             C  ENDM 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-7
I_NEED: declare a variable external, if necessary, and alloc

                             C  PAGE 
                             C  ; 
                             C  ; define a data item to be public and of an app
				ropriate size/type 
                             C  ; 
                             C  I_AM MACRO name,size 
                             C   PUBLIC name 
                             C   
                             C   IFIDN <size>,<WORD> 
                             C  name DW ? 
                             C   ELSE 
                             C   IFIDN <size>,<DWORD> 
                             C  name DD ? 
                             C   ELSE 
                             C   IFIDN <size>,<BYTE> 
                             C  name DB ? 
                             C   ELSE 
                             C  name DB size DUP (?) 
                             C   ENDIF 
                             C   ENDIF 
                             C   ENDIF 
                             C  ENDM 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-8
I_NEED: declare a variable external, if necessary, and alloc

                             C  PAGE 
                             C  ; 
                             C  ; call the macro chain 
                             C  ; 
                             C  do_ext macro 
                             C  endm 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-9
I_NEED: declare a variable external, if necessary, and alloc

                             C  PAGE 
                             C   
                             C  ; 
                             C  ; define an entry in a procedure 
                             C  ; 
                             C  entry macro name 
                             C   PUBLIC name 
                             C  name: 
                             C  endm 
                             C   
                             C  BREAK <ERROR - print a message and then jump to
				 a label> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-10
ERROR - print a message and then jump to a label            

                             C   
                             C  error macro code 
                             C   local a 
                             C  .xcref 
                             C   MOV AL,code 
                             C   transfer SYS_RET_ERR 
                             C  .cref 
                             C  ENDM 
                             C   
                             C  BREAK <JUMP - real jump that links up shortwise
				> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-11
JUMP - real jump that links up shortwise                    

                             C  ; 
                             C  ; given a label <lbl> either 2 byte jump to ano
				ther label <lbl>_J 
                             C  ; if it is near enough or 3 byte jump to <lbl> 
                             C  ; 
                             C   
                             C  jump macro lbl 
                             C   local a 
                             C  .xcref 
                             C   a: 
                             C   ifndef lbl&_J ;; is this the first invocation 
                             C   JMP lbl 
                             C   ELSE 
                             C   IF lbl&_J GE $ 
                             C   JMP lbl 
                             C   ELSE 
                             C   IF ($-lbl&_J) GT 126 ;; is the jump too far aw
				ay? 
                             C   JMP lbl 
                             C   ELSE ;; do the short one... 
                             C   JMP lbl&_J 
                             C   ENDIF 
                             C   ENDIF 
                             C   ENDIF 
                             C   lbl&_j = a 
                             C  .cref 
                             C  endm 
                             C   
                             C  BREAK <RETURN - return from a function> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-12
RETURN - return from a function                             

                             C   
                             C  return macro 
                             C   local a 
                             C  .xcref 
                             C  a: 
                             C   RET 
                             C  ret_l = a 
                             C  .cref 
                             C  endm 
                             C   
                             C  BREAK <CONDRET - conditional return> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-13
CONDRET - conditional return                                

                             C   
                             C  makelab macro l,cc,ncc 
                             C   local a 
                             C   j&ncc a ;; j<NCC> a: 
                             C   return ;; return 
                             C   a: ;; a: 
                             C   ret_&cc = ret_l ;; define ret_<CC> to be ret_l
				 
                             C  endm 
                             C   
                             C  condret macro cc,ncc 
                             C   local a,b 
                             C   ifdef ret_l ;; if ret_l is defined 
                             C   if (($ - ret_l) le 126) and ($ gt ret_l) 
                             C   ;; if ret_l is near enough then 
                             C   a: j&cc ret_l ;; a: j<CC> to ret_l 
                             C   ret_&cc = a ;; define ret_<CC> to be a: 
                             C   else 
                             C   makelab a,cc,ncc 
                             C   endif 
                             C   else 
                             C   ifdef ret_&cc ;; if ret_<CC> defined 
                             C   if (($ - ret_&cc) le 126) and ($ gt ret_&cc) 
                             C   ;; if ret_<CC> is near enough 
                             C   a: j&cc ret_&cc ;; a: j<CC> to ret_<CC> 
                             C   ret_&cc = a ;; define ret_<CC> to be a: 
                             C   else 
                             C   makelab a,cc,ncc 
                             C   endif 
                             C   else 
                             C   makelab a,cc,ncc 
                             C   endif 
                             C   endif 
                             C  endm 
                             C  ;condret macro cc,ncc 
                             C  ; local a,b 
                             C  ; ifdef ret_l ; if ret_l is defined 
                             C  ; if (($ - ret_l) le 126) and ($ gt ret_l) 
                             C  ; ; if ret_l is near enough then 
                             C  ; a: j&cc ret_l ; a: j<CC> to ret_l 
                             C  ; ret_&cc = a ; define ret_<CC> to be a: 
                             C  ; exitm 
                             C  ; endif 
                             C  ; endif 
                             C  ; ifdef ret_&cc ; if ret_<CC> defined 
                             C  ; if (($ - ret_&cc) le 126) and ($ gt ret_&cc) 
                             C  ; ; if ret_<CC> is near enough 
                             C  ; a: j&cc ret_&cc ; a: j<CC> to ret_<CC> 
                             C  ; ret_&cc = a ; define ret_<CC> to be a: 
                             C  ; exitm 
                             C  ; endif 
                             C  ; endif 
                             C  ; j&ncc a ; j<NCC> a: 
                             C  ; return ; return 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-14
CONDRET - conditional return                                

                             C  ; a: ; a: 
                             C  ; ret_&cc = ret_l ; define ret_<CC> to be ret_l
				 
                             C  ;endm 
                             C  ; 
                             C  BREAK <RETZ - return if zero, links up shortwis
				e if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-15
RETZ - return if zero, links up shortwise if necessary      

                             C   
                             C  retz macro 
                             C   condret z,nz 
                             C  endm 
                             C   
                             C  BREAK <RETNZ - return if not zero, links up sho
				rtwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-16
RETNZ - return if not zero, links up shortwise if necessary 

                             C   
                             C  retnz macro 
                             C   condret nz,z 
                             C  endm 
                             C   
                             C  BREAK <RETC - return if carry set, links up sho
				rtwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-17
RETC - return if carry set, links up shortwise if necessary 

                             C   
                             C  retc macro 
                             C   condret c,nc 
                             C  endm 
                             C   
                             C  BREAK <RETNC - return if not carry, links up sh
				ortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-18
RETNC - return if not carry, links up shortwise if necessary

                             C   
                             C  retnc macro 
                             C   condret nc,c 
                             C  endm 
                             C   
                             C  BREAK <CONTEXT - set the DOS context to a parti
				cular register> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-19
CONTEXT - set the DOS context to a particular register      

                             C   
                             C  context macro r 
                             C   PUSH SS 
                             C   POP r 
                             C   ASSUME r:DOSGROUP 
                             C  endm 
                             C   
                             C  IF2 
                             C  ;;    %OUT    DOSSYM in Pass 2 
                             C  ENDIF 
                             C   
                             C  ENDIF 
                             C   
                             C  IFNDEF IBM		;STDSW.ASM (and COMSW.ASM) may have
				 already set IBM 
                             C    ENDIF 
                             C  ENDIF 
                             C   
                             C  ENDIF 
                             C   
 = 0002                      C  DOS_MAJOR_VERSION   EQU	    (DOSVER / 100) 
 = 000B                      C  DOS_MINOR_VERSION   EQU     (DOSVER MOD 100) 
                             C   
                             C  BREAK <Control character definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-20
Control character definitions                               

                             C   
 = 007F                      C  c_DEL       EQU     7Fh         ;    ASCII rubo
				ut or delete previous char 
 = 0008                      C  c_BS        EQU     08h         ; ^H ASCII back
				space 
 = 000D                      C  c_CR        EQU     0Dh         ; ^M ASCII carr
				iage return 
 = 000A                      C  c_LF        EQU     0Ah         ; ^J ASCII line
				feed 
 = 0017                      C  c_ETB       EQU     17h         ; ^W ASCII end 
				of transmission 
 = 0015                      C  c_NAK       EQU     15h         ; ^U ASCII nega
				tive acknowledge 
 = 0003                      C  c_ETX       EQU     03h         ; ^C ASCII end 
				of text 
 = 0009                      C  c_HT        EQU     09h         ; ^I ASCII tab 
                             C   
                             C  BREAK <BPB Definition> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-21
BPB Definition                                              

                             C   
                             C   
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
                             C  ; Certain structures, constants and system  cal
				ls  below  are  private  to ; 
                             C  ; the DOS  and  are  extremely  version-depende
				nt.  They may change at any ; 
                             C  ; time at  the  implementors'  whim.   As  a  r
				esult,  they  must  not  be ; 
                             C  ; documented to  the  general  public.   If  an
				  extreme case arises, they ; 
                             C  ; must be documented with this warning.        
				                            ; 
                             C  ;                                              
				                            ; 
                             C  ; Those structures and constants that are subje
				ct to  the  above  will  be ; 
                             C  ; marked and bracketed with the flag:          
				                            ; 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C   
                             C  BREAK  <Bios Parameter Block> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-22
Bios Parameter Block                                        

                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
                             C   
                             C  ; Bios Parameter Block definition 
                             C  ; This structure is used to build a full DPB 
                             C   
                             C  BPBLOCK STRUC 
 0000  ????                  C  BPSECSZ DW      ?       ; Size in bytes of phys
				ical sector 
 0002  ??                    C  BPCLUS  DB      ?       ; Sectors/Alloc unit 
 0003  ????                  C  BPRES   DW      ?       ; Number of reserved se
				ctors 
 0005  ??                    C  BPFTCNT DB      ?       ; Number of FATs 
 0006  ????                  C  BPDRCNT DW      ?       ; Number of directory e
				ntries 
 0008  ????                  C  BPSCCNT DW      ?       ; Total number of secto
				rs 
 000A  ??                    C  BPMEDIA DB      ?       ; Media descriptor byte
				 
 000B  ????                  C  BPFTSEC DW      ?       ; Number of sectors tak
				en up by one FAT 
 000D                        C  BPBLOCK ENDS 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C   
                             C  BREAK <Disk I/O Buffer Header> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-23
Disk I/O Buffer Header                                      

                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
                             C   
                             C  ; Field definition for I/O buffer information 
                             C   
                             C  BUFFINFO        STRUC 
 0000  ????????              C  NEXTBUF         DD      ?       ; Pointer to ne
				xt buffer in list 
                             C  ; The next two items are often refed as a word 
 0004  ??                    C  BUFDRV          DB      ?       ; Logical drive
				 # assoc with buffer FF = free 
 0005  ??                    C  BUFDIRTY        DB      ?       ; Dirty flag 
 0006  ??                    C  BUFPRI          DB      ?       ; Buffer select
				ion priority (see EQUs below) 
 0007  ??                    C  VISIT           DB      ?       ; Visit flag fo
				r buffer pool scans 
 0008  ????                  C  BUFSECNO        DW      ?       ; Sector number
				 of buffer 
                             C  ; The next two items are often refed as a word 
 000A  ??                    C  BUFWRTCNT       DB      ?       ; For FAT secto
				rs, # times sector written out 
 000B  ??                    C  BUFWRTINC       DB      ?       ; "   "     "  
				 , # sectors between each write 
 000C  ????????              C  BUFDRVDP        DD      ?       ; Pointer to dr
				ive parameters 
 0010                        C  BUFFINFO        ENDS 
                             C   
 = 0010                      C  BUFINSIZ        EQU     SIZE BUFFINFO 
                             C                                  ; Size of struc
				ture in bytes 
                             C   
 = 0000                      C  FREEPRI EQU     0 
 = 0002                      C  LBRPRI  EQU     2               ; Last byte of 
				buffer read 
 = 0004                      C  LBWPRI  EQU     4               ; Last byte wri
				tten 
 = 0006                      C  RPRI    EQU     6               ; Read but not 
				last byte 
 = 0008                      C  WPRI    EQU     8               ; Written but n
				ot last byte 
 = 000F                      C  DIRPRI  EQU     15              ; Directory Sec
				tor 
 = 001E                      C  FATPRI  EQU     30              ; FAT sector 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-24
Disk I/O Buffer Header                                      

                             C  BREAK <User stack inside of system call> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-25
User stack inside of system call                            

                             C  ; Location of user registers relative user stac
				k pointer 
                             C   
                             C  user_environ    STRUC 
 0000  ????                  C  user_AX     DW      ? 
 0002  ????                  C  user_BX     DW      ? 
 0004  ????                  C  user_CX     DW      ? 
 0006  ????                  C  user_DX     DW      ? 
 0008  ????                  C  user_SI     DW      ? 
 000A  ????                  C  user_DI     DW      ? 
 000C  ????                  C  user_BP     DW      ? 
 000E  ????                  C  user_DS     DW      ? 
 0010  ????                  C  user_ES     DW      ? 
 0012  ????                  C  user_IP     DW      ? 
 0014  ????                  C  user_CS     DW      ? 
 0016  ????                  C  user_F      DW      ? 
 0018                        C  user_environ    ENDS 
                             C   
                             C  BREAK <interrupt definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-26
interrupt definitions                                       

                             C   
 = 0020                      C  INTTAB          EQU     20H 
 = 0080                      C  INTBASE         EQU     4 * inttab 
 = 00C0                      C  ENTRYPOINT      EQU     INTBASE+40H 
                             C   
                             C          ENDIF 
                             C   
                             C  ; 
                             C  ; interrupt assignments 
                             C  ; 
                             C          IF      NOT ALTVECT 
 =                           C  int_abort           EQU     INTTAB          ; a
				bort process 
 = 0021                      C  int_command         EQU     int_abort+1     ; c
				all MSDOS 
 = 0022                      C  int_terminate       EQU     int_abort+2     ; i
				nt to terminate address 
 = 0023                      C  int_ctrl_c          EQU     int_abort+3     ; ^
				c trapper 
 = 0024                      C  int_fatal_abort     EQU     int_abort+4     ; h
				ard disk error 
 = 0025                      C  int_disk_read       EQU     int_abort+5     ; l
				ogical sector disk read 
 = 0026                      C  int_disk_write      EQU     int_abort+6     ; l
				ogical sector disk write 
 = 0027                      C  int_keep_process    EQU     int_abort+7     ; t
				erminate program and stay 
                             C                                              ; r
				esident 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 = 0028                      C  int_spooler         EQU     int_abort+8     ; s
				pooler call 
 = 0029                      C  int_fastcon         EQU     int_abort+9     ; f
				ast CON interrupt 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C          ENDIF 
                             C   
 = 0080                      C  addr_int_abort          EQU    4 * int_abort 
 = 0084                      C  addr_int_command        EQU    4 * int_command 
 = 0088                      C  addr_int_terminate      EQU    4 * int_terminat
				e 
 = 008C                      C  addr_int_ctrl_c         EQU    4 * int_ctrl_c 
 = 0090                      C  addr_int_fatal_abort    EQU    4 * int_fatal_ab
				ort 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-27
interrupt definitions                                       

 = 0094                      C  addr_int_disk_read      EQU    4 * int_disk_rea
				d 
 = 0098                      C  addr_int_disk_write     EQU    4 * int_disk_wri
				te 
 = 009C                      C  addr_int_keep_process   EQU    4 * int_keep_pro
				cess 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 = 00A0                      C  addr_int_spooler        EQU    4 * int_spooler 
 = 00A4                      C  addr_int_fastcon        EQU    4 * int_fastcon 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C   
                             C  BREAK <Disk map> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-28
Disk map                                                    

                             C  ;  MSDOS partitions the disk into 4 sections: 
                             C  ; 
                             C  ;  phys sector 0:   +-------------------+ 
                             C  ;       |           | boot/reserved     | 
                             C  ;       |           +-------------------+ 
                             C  ;       |           |  File allocation  | 
                             C  ;       v           |      table(s)     | 
                             C  ;                   |  (multiple copies | 
                             C  ;                   |     are kept)     | 
                             C  ;                   +-------------------+ 
                             C  ;                   |     Directory     | 
                             C  ;                   +-------------------+ 
                             C  ;                   |     File space    | 
                             C  ;                   +-------------------+ 
                             C  ;                   |   Unaddressable   | 
                             C  ;                   |  (to end of disk) | 
                             C  ;                   +-------------------+ 
                             C  ; 
                             C  ; All partition boundaries are sector boundarie
				s.  The size of the FAT is 
                             C  ; adjusted to maximize the file space addressab
				le. 
                             C   
                             C  BREAK <Directory entry> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-29
Directory entry                                             

                             C   
                             C  ; 
                             C  ;       +---------------------------+ 
                             C  ;       |  (12 BYTE) filename/ext   |       0  
				     0 
                             C  ;       +---------------------------+ 
                             C  ;       |     (BYTE) attributes     |       11 
				     B 
                             C  ;       +---------------------------+ 
                             C  ;       |    (10 BYTE) reserved     |       12 
				     C 
                             C  ;       +---------------------------+ 
                             C  ;       | (WORD) time of last write |       22 
				     16 
                             C  ;       +---------------------------+ 
                             C  ;       | (WORD) date of last write |       24 
				     18 
                             C  ;       +---------------------------+ 
                             C  ;       |   (WORD) First cluster    |       26 
				     1A 
                             C  ;       +---------------------------+ 
                             C  ;       |     (DWORD) file size     |       28 
				     1C 
                             C  ;       +---------------------------+ 
                             C  ; 
                             C  ;   First byte of filename  = E5 -> free direct
				ory entry 
                             C  ;                           = 00 -> end of allo
				cated directory 
                             C  ;   Time:   Bits 0-4=seconds/2, bits 5-10=minut
				e, 11-15=hour 
                             C  ;   Date:   Bits 0-4=day, bits 5-8=month, bits 
				9-15=year-1980 
                             C  ; 
                             C  dir_entry   STRUC 
 0000  000B[                 C  dir_name    DB      11 DUP (?)          ; file 
				name 
            ??               C  
                         ]   C  
                             C  
 000B  ??                    C  dir_attr    DB      ?                   ; attri
				bute bits 
 000C  000A[                 C  dir_pad     DB      10 DUP (?)          ; reser
				ved for expansion 
            ??               C  
                         ]   C  
                             C  
 0016  ????                  C  dir_time    DW      ?                   ; time 
				of last write 
 0018  ????                  C  dir_date    DW      ?                   ; date 
				of last write 
 001A  ????                  C  dir_first   DW      ?                   ; first
				 allocation unit of file 
 001C  ????                  C  dir_size_l  DW      ?                   ; low 1
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-30
Directory entry                                             

				6 bits of file size 
 001E  ????                  C  dir_size_h  DW      ?                   ; high 
				16 bits of file size 
 0020                        C  dir_entry   ENDS 
                             C   
 = 0001                      C  attr_read_only      EQU      1h 
 = 0002                      C  attr_hidden         EQU      2h 
 = 0004                      C  attr_system         EQU      4h 
 = 0008                      C  attr_volume_id      EQU      8h 
 = 0010                      C  attr_directory      EQU     10h 
 = 0020                      C  attr_archive        EQU     20h 
                             C   
 = 0016                      C  attr_all            EQU     attr_hidden+attr_sy
				stem+attr_directory 
                             C                                          ; OR of
				 hard attributes for FINDENTRY 
                             C   
 = 0021                      C  attr_ignore         EQU     attr_read_only+attr
				_archive 
                             C                                          ; ignor
				e this(ese) attribute(s) during 
                             C                                          ; searc
				h first/next 
                             C   
 = 0027                      C  attr_changeable     EQU     attr_read_only+attr
				_hidden+attr_system+attr_archive 
                             C                                          ; chang
				eable via CHMOD 
                             C   
                             C  BREAK <File allocation Table information> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-31
File allocation Table information                           

                             C  ; 
                             C  ; The File Allocation Table uses a 12-bit entry
				 for each allocation unit on 
                             C  ; the disk.  These entries are packed, two for 
				every three bytes.  The contents 
                             C  ; of entry number N is found by 1) multiplying 
				N by 1.5; 2) adding the result 
                             C  ; to the base address of the Allocation Table; 
				3) fetching the 16-bit word 
                             C  ; at this address; 4) If N was odd (so that N*1
				.5 was not an integer), shift 
                             C  ; the word right four bits; 5) mask to 12 bits 
				(AND with 0FFF hex).  Entry 
                             C  ; number zero is used as an end-of-file trap in
				 the OS and is passed to the 
                             C  ; BIOS to help determine disk format.  Entry 1 
				is reserved for future use. 
                             C  ; The first available allocation unit is assign
				ed entry number two, and even 
                             C  ; though it is the first, is called cluster 2. 
				 Entries greater than 0FF8H 
                             C  ; are end of file marks; entries of zero are un
				allocated.  Otherwise, the 
                             C  ; contents of a FAT entry is the number of the 
				next cluster in the file. 
                             C  ; 
                             C  ; Clusters with bad sectors are tagged with FF7
				H.  Any non-zero number would 
                             C  ; do because these clusters show as allocated, 
				but are not part of any 
                             C  ; allocation chain and thus will never be alloc
				ated to a file.  A particular 
                             C  ; number is selected so that disk checking prog
				rams know what to do (ie.  a 
                             C  ; cluster with entry FF7H which is not in a cha
				in is not an error). 
                             C   
                             C  BREAK <DPB structure> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-32
DPB structure                                               

                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
                             C   
 = 0040                      C  DIRSTRLEN       EQU     64      ; Max length in
				 bytes of directory strings 
                             C   
                             C  dpb     STRUC 
 0000  ??                    C  dpb_drive           DB      ?   ; Logical drive
				 # assoc with DPB (A=0,B=1,...) 
 0001  ??                    C  dpb_UNIT            DB      ?   ; Driver unit n
				umber of DPB 
 0002  ????                  C  dpb_sector_size     DW      ?   ; Size of physi
				cal sector in bytes 
 0004  ??                    C  dpb_cluster_mask    DB      ?   ; Sectors/clust
				er - 1 
 0005  ??                    C  dpb_cluster_shift   DB      ?   ; Log2 of secto
				rs/cluster 
 0006  ????                  C  dpb_first_FAT       DW      ?   ; Starting reco
				rd of FATs 
 0008  ??                    C  dpb_FAT_count       DB      ?   ; Number of FAT
				s for this drive 
 0009  ????                  C  dpb_root_entries    DW      ?   ; Number of dir
				ectory entries 
 000B  ????                  C  dpb_first_sector    DW      ?   ; First sector 
				of first cluster 
 000D  ????                  C  dpb_max_cluster     DW      ?   ; Number of clu
				sters on drive + 1 
 000F  ??                    C  dpb_FAT_size        DB      ?   ; Number of rec
				ords occupied by FAT 
 0010  ????                  C  dpb_dir_sector      DW      ?   ; Starting reco
				rd of directory 
 0012  ????????              C  dpb_driver_addr     DD      ?   ; Pointer to dr
				iver 
 0016  ??                    C  dpb_media           DB      ?   ; Media byte 
 0017  ??                    C  dpb_first_access    DB      ?   ; This is initi
				alized to -1 to force a media 
                             C                                  ; check the fir
				st time this DPB is used 
 0018  ????????              C  dpb_next_dpb        DD      ?   ; Pointer to ne
				xt Drive parameter block 
 001C  ????                  C  dpb_current_dir     DW      ?   ; Cluster numbe
				r of start of current directory 
                             C                                  ; 0 indicates r
				oot, -1 indicates invalid (disk 
                             C                                  ; ?  changed) 
 001E  0040[                 C  dpb_dir_text        DB      DIRSTRLEN DUP(?) 
            ??               C  
                         ]   C  
                             C  
                             C                                  ; ASCIZ string 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-33
DPB structure                                               

				of current directory 
 005E                        C  dpb     ENDS 
                             C   
 = 005E                      C  DPBSIZ  EQU     SIZE dpb        ; Size of the s
				tructure in bytes 
                             C   
 = 000D                      C  DSKSIZ  =       dpb_max_cluster ; Size of disk 
				(temp used during init only) 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C   
                             C  BREAK <File Control Block definition> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-34
File Control Block definition                               

                             C  ; 
                             C  ; Field definition for FCBs 
                             C  ; The FCB has the following structure: 
                             C  ; 
                             C  ;       +---------------------------+ 
                             C  ;       |   Drive indicator(byte)   | 
                             C  ;       +---------------------------+ 
                             C  ;       |    Filename (8 chars)     | 
                             C  ;       +---------------------------+ 
                             C  ;       |    Extension (3 chars)    | 
                             C  ;       +---------------------------+ 
                             C  ;       |   Current Extent(word)    | 
                             C  ;       +---------------------------+ 
                             C  ;       |    Record size (word)     | 
                             C  ;       +---------------------------+ 
                             C  ;       |    File Size (2 words)    | 
                             C  ;       +---------------------------+ 
                             C  ;       |       Date of write       | 
                             C  ;       +---------------------------+ 
                             C  ;       |       Time of write       | 
                             C  ;       +---------------------------+ 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
                             C  ;       | Flags:                    | 
                             C  ;       |  bit 7=0 file/1 device    | 
                             C  ;       |  bit 6=0 if dirty         | 
                             C  ;       |  bits 0-5 deviceid        | 
                             C  ;       +---------------------------+ 
                             C  ;       |   first cluster in file   | 
                             C  ;       +---------------------------+ 
                             C  ;       | position of last cluster  | 
                             C  ;       +---------------------------+ 
                             C  ;       |   last cluster accessed   |   12 bit-
				+--- packed in 3 bytes 
                             C  ;       +---------------------------+          
				| 
                             C  ;       |     parent directory      |   <------
				+ 
                             C  ;       +---------------------------+ 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;       |    next record number     | 
                             C  ;       +---------------------------+ 
                             C  ;       |   random record number    | 
                             C  ;       +---------------------------+ 
                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-35
File Control Block definition                               

                             C   
                             C  sys_fcb     STRUC 
 0000  ??                    C  fcb_drive   DB      ? 
 0001  0008[                 C  fcb_name    DB      8 DUP (?) 
            ??               C  
                         ]   C  
                             C  
 0009  0003[                 C  fcb_ext     DB      3 DUP (?) 
            ??               C  
                         ]   C  
                             C  
 000C  ????                  C  fcb_EXTENT  DW      ? 
 000E  ????                  C  fcb_RECSIZ  DW      ?       ; Size of record (u
				ser settable) 
 0010  ????                  C  fcb_FILSIZ  DW      ?       ; Size of file in b
				ytes; used with the following 
                             C                              ; word 
 0012  ????                  C  fcb_DRVBP   DW      ?       ; BP for SEARCH FIR
				ST and SEARCH NEXT 
 0014  ????                  C  fcb_FDATE   DW      ?       ; Date of last writ
				ing 
 0016  ????                  C  fcb_FTIME   DW      ?       ; Time of last writ
				ing 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 0018  ??                    C  fcb_DEVID   DB      ?       ; Device ID number,
				 bits 0-5 if file. 
                             C                              ; bit 7=0 for file,
				 bit 7=1 for I/O device 
                             C                              ; If file, bit 6=0 
				if dirty 
                             C                              ; If I/O device, bi
				t 6=0 if EOF (input) 
                             C                              ;               Bit
				 5=1 if Raw mode 
                             C                              ;               Bit
				 0=1 if console input device 
                             C                              ;               Bit
				 1=1 if console output device 
                             C                              ;               Bit
				 2=1 if null device 
                             C                              ;               Bit
				 3=1 if clock device 
 0019  ????                  C  fcb_FIRCLUS DW      ?       ; First cluster of 
				file 
 001B  ????                  C  fcb_CLUSPOS DW      ?       ; Position of last 
				cluster accessed 
 001D  ????                  C  fcb_LSTCLUS DW      ?       ; Last cluster acce
				ssed and directory pack 2 12 
 001F  ??                    C              DB      ?       ; bit numbers into 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-36
File Control Block definition                               

				24 bits... 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
 0020  ??                    C  fcb_NR      DB      ?       ; Next record 
 0021  0004[                 C  fcb_RR      DB      4 DUP (?)               ; R
				andom record 
            ??               C  
                         ]   C  
                             C  
 0025                        C  sys_fcb     ENDS 
                             C   
 = 0010                      C  FILDIRENT       = fcb_FILSIZ            ; Used 
				only by SEARCH FIRST and SEARCH 
                             C                                          ; NEXT 
                             C   
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 = 0040                      C  devid_file_clean        EQU     40h     ; true 
				if file and not written 
 = 003F                      C  devid_file_mask_drive   EQU     3Fh     ; mask 
				for drive number 
                             C   
 = 0080                      C  devid_device            EQU     80h     ; true 
				if a device 
 = 0040                      C  devid_device_EOF        EQU     40h     ; true 
				if end of file reached 
 = 0020                      C  devid_device_raw        EQU     20h     ; true 
				if in raw mode 
 = 0010                      C  devid_device_special    EQU     10h     ; true 
				if special device 
 = 0008                      C  devid_device_clock      EQU     08h     ; true 
				if clock device 
 = 0004                      C  devid_device_null       EQU     04h     ; true 
				if null device 
 = 0002                      C  devid_device_con_out    EQU     02h     ; true 
				if console output 
 = 0001                      C  devid_device_con_in     EQU     01h     ; true 
				if consle input 
                             C   
                             C  ; 
                             C  ; structure of devid field as returned by IOCTL
				 is: 
                             C  ; 
                             C  ;       BIT     7   6   5   4   3   2   1   0 
                             C  ;             |---|---|---|---|---|---|---|---|
				 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-37
File Control Block definition                               

                             C  ;             | I | E | R | S | I | I | I | I |
				 
                             C  ;             | S | O | A | P | S | S | S | S |
				 
                             C  ;             | D | F | W | E | C | N | C | C |
				 
                             C  ;             | E |   |   | C | L | U | O | I |
				 
                             C  ;             | V |   |   | L | K | L | T | N |
				 
                             C  ;             |---|---|---|---|---|---|---|---|
				 
                             C  ;       ISDEV = 1 if this channel is a device 
                             C  ;             = 0 if this channel is a disk fil
				e 
                             C  ; 
                             C  ;       If ISDEV = 1 
                             C  ; 
                             C  ;             EOF = 0 if End Of File on input 
                             C  ;             RAW = 1 if this device is in Raw 
				mode 
                             C  ;                 = 0 if this device is cooked 
                             C  ;             ISCLK = 1 if this device is the c
				lock device 
                             C  ;             ISNUL = 1 if this device is the n
				ull device 
                             C  ;             ISCOT = 1 if this device is the c
				onsole output 
                             C  ;             ISCIN = 1 if this device is the c
				onsole input 
                             C  ; 
                             C  ;       If ISDEV = 0 
                             C  ;             EOF = 0 if channel has been writt
				en 
                             C  ;             Bits 0-5  are  the  block  device
				  number  for 
                             C  ;                 the channel (0 = A, 1 = B, ..
				.) 
                             C  ; 
 = 0080                      C  devid_ISDEV     EQU     80h 
 = 0040                      C  devid_EOF       EQU     40h 
 = 0020                      C  devid_RAW       EQU     20h 
 = 0010                      C  devid_SPECIAL   EQU     10H 
 = 0008                      C  devid_ISCLK     EQU     08h 
 = 0004                      C  devid_ISNUL     EQU     04h 
 = 0002                      C  devid_ISCOT     EQU     02h 
 = 0001                      C  devid_ISCIN     EQU     01h 
                             C   
 = 001F                      C  devid_block_dev EQU     1Fh             ; mask 
				for block device number 
                             C   
                             C  ; 
                             C  ; find first/next buffer 
                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-38
File Control Block definition                               

                             C  find_buf    STRUC 
 0000  ??                    C  find_buf_sattr      DB  ?           ; attribute
				 of search 
 0001  ??                    C  find_buf_drive      DB  ?           ; drive of 
				search 
 0002  000B[                 C  find_buf_name       DB  11 DUP (?)  ; formatted
				 name 
            ??               C  
                         ]   C  
                             C  
 000D  ????                  C  find_buf_LastEnt    DW  ?           ; LastEnt 
 000F  ????????              C  find_buf_ThisDPB    DD  ?           ; This DPB 
 0013  ????                  C  find_buf_DirStart   DW  ?           ; DirStart 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C   
 0015  ??                    C  find_buf_attr       DB  ?           ; attribute
				 found 
 0016  ????                  C  find_buf_time       DW  ?           ; time 
 0018  ????                  C  find_buf_date       DW  ?           ; date 
 001A  ????                  C  find_buf_size_l     DW  ?           ; low(size)
				 
 001C  ????                  C  find_buf_size_h     DW  ?           ; high(size
				) 
 001E  000D[                 C  find_buf_pname      DB  13 DUP (?)  ; packed na
				me 
            ??               C  
                         ]   C  
                             C  
 002B                        C  find_buf    ENDS 
                             C   
                             C  BREAK <Process data block> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-39
Process data block                                          

                             C  ; 
                             C  ; Process data block (otherwise known as progra
				m header) 
                             C  ; 
                             C   
 = 0014                      C  FilPerProc          EQU     20 
                             C   
                             C  Process_data_block  STRUC 
 0000  ????                  C  PDB_Exit_Call       DW      ?           ; INT i
				nt_abort system terminate 
 0002  ????                  C  PDB_block_len       DW      ?           ; size 
				of execution block 
 0004  ??                    C                      DB      ? 
 0005  0005[                 C  PDB_CPM_Call        DB  5 DUP (?)       ; ancie
				nt call to system 
            ??               C  
                         ]   C  
                             C  
 000A  ????????              C  PDB_Exit            DD      ?           ; point
				er to exit routine 
 000E  ????????              C  PDB_Ctrl_C          DD      ?           ; point
				er to ^C routine 
 0012  ????????              C  PDB_Fatal_abort     DD      ?           ; point
				er to fatal error 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 0016  ????                  C  PDB_Parent_PID      DW      ?           ; PID o
				f parent (terminate PID) 
 0018  0014[                 C  PDB_JFN_Table       DB  FilPerProc DUP (?) 
            ??               C  
                         ]   C  
                             C  
                             C                                          ; indic
				es into system table 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
 002C  ????                  C  PDB_environ         DW      ?           ; seg a
				ddr of environment 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 002E  ????????              C  PDB_User_stack      DD      ?           ; stack
				 of self during system calls 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-40
Process data block                                          

 0032  001E[                 C  PDB_PAD1            DB      1Eh DUP (?) 
            ??               C  
                         ]   C  
                             C  
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
 0050  0005[                 C  PDB_Call_system     DB      5 DUP (?)   ; porta
				ble method of system call 
            ??               C  
                         ]   C  
                             C  
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 0055  0006[                 C  PDB_PAD2            DB      6h DUP (?)  ; 
            ??               C  
                         ]   C  
                             C  
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
 005B                        C  Process_data_block  ENDS 
                             C   
                             C  BREAK <EXEC and EXE file structures> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-41
EXEC and EXE file structures                                

                             C  ; 
                             C  ; EXEC arg block - load/go program 
                             C  ; 
                             C   
                             C  ; 
                             C  ; The following get used as arguments to the EX
				EC system call.  They indicate 
                             C  ; whether or not the program is executed or whe
				ther or not a program header 
                             C  ; gets created. 
                             C  ; 
 = 0001                      C  exec_func_no_execute    EQU 1           ; no ex
				ecute bit 
 = 0002                      C  exec_func_overlay       EQU 2           ; overl
				ay bit 
                             C   
                             C  Exec0           STRUC 
 0000  ????                  C  Exec0_environ   DW      ?               ; seg a
				ddr of environment 
 0002  ????????              C  Exec0_com_line  DD      ?               ; point
				er to asciz command line 
 0006  ????????              C  Exec0_5C_FCB    DD      ?               ; defau
				lt fcb at 5C 
 000A  ????????              C  Exec0_6C_FCB    DD      ?               ; defau
				lt fcb at 6C 
 000E                        C  Exec0           ENDS 
                             C   
                             C  Exec1           STRUC 
 0000  ????                  C  Exec1_environ   DW      ?               ; seg a
				ddr of environment 
 0002  ????????              C  Exec1_com_line  DD      ?               ; point
				er to asciz command line 
 0006  ????????              C  Exec1_5C_FCB    DD      ?               ; defau
				lt fcb at 5C 
 000A  ????????              C  Exec1_6C_FCB    DD      ?               ; defau
				lt fcb at 6C 
 000E  ????                  C  Exec1_SP        DW      ?               ; stack
				 pointer of program 
 0010  ????                  C  Exec1_SS        DW      ?               ; stack
				 seg register of program 
 0012  ????                  C  Exec1_IP        DW      ?               ; entry
				 point IP 
 0014  ????                  C  Exec1_CS        DW      ?               ; entry
				 point CS 
 0016                        C  Exec1           ENDS 
                             C   
                             C  Exec3           STRUC 
 0000  ????                  C  Exec3_load_addr DW      ?               ; seg a
				ddress of load point 
 0002  ????                  C  Exec3_reloc_fac DW      ?               ; reloc
				ation factor 
 0004                        C  Exec3           ENDS 
                             C   
                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-42
EXEC and EXE file structures                                

                             C  ; Exit codes in upper byte 
                             C  ; 
 = 0000                      C  Exit_terminate      EQU     0 
 = 0000                      C  Exit_abort          EQU     0 
 = 0001                      C  Exit_Ctrl_C         EQU     1 
 = 0002                      C  Exit_Hard_Error     EQU     2 
 = 0003                      C  Exit_Keep_process   EQU     3 
                             C   
                             C  ; 
                             C  ; EXE file header 
                             C  ; 
                             C   
                             C  EXE_file    STRUC 
 0000  ????                  C  exe_signature   DW  ?                   ; must 
				contain 4D5A  (yay zibo!) 
 0002  ????                  C  exe_len_mod_512 DW  ?                   ; low 9
				 bits of length 
 0004  ????                  C  exe_pages       DW  ?                   ; numbe
				r of 512b pages in file 
 0006  ????                  C  exe_rle_count   DW  ?                   ; count
				 of reloc entries 
 0008  ????                  C  exe_par_dir     DW  ?                   ; numbe
				r of paragraphs before image 
 000A  ????                  C  exe_min_BSS     DW  ?                   ; minim
				um number of para of BSS 
 000C  ????                  C  exe_max_BSS     DW  ?                   ; max n
				umber of para of BSS 
 000E  ????                  C  exe_SS          DW  ?                   ; stack
				 of image 
 0010  ????                  C  exe_SP          DW  ?                   ; SP of
				 image 
 0012  ????                  C  exe_chksum      DW  ?                   ; check
				sum  of file (ignored) 
 0014  ????                  C  exe_IP          DW  ?                   ; IP of
				 entry 
 0016  ????                  C  exe_CS          DW  ?                   ; CS of
				 entry 
 0018  ????                  C  exe_rle_table   DW  ?                   ; byte 
				offset of reloc table 
 001A  ????                  C  exe_iov         DW  ?                   ; overl
				ay number (0 for root) 
 001C  ????????              C  exe_sym_tab     DD  ?                   ; offse
				t of symbol table in file 
 0020                        C  EXE_file    ENDS 
                             C   
 = 5A4D                      C  exe_valid_signature     EQU 5A4Dh 
 = 4D5A                      C  exe_valid_old_signature EQU 4D5Ah 
                             C   
                             C  symbol_entry    STRUC 
 0000  ????????              C  sym_value       DD  ? 
 0004  ????                  C  sym_type        DW  ? 
 0006  ??                    C  sym_len         DB  ? 
 0007  00FF[                 C  sym_name        DB  255 dup (?) 
            ??               C  
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-43
EXEC and EXE file structures                                

                         ]   C  
                             C  
 0106                        C  symbol_entry    ENDS 
                             C   
                             C  BREAK <Internal system file table format> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-44
Internal system file table format                           

                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
                             C  ; 
                             C  ; system file table 
                             C  ; 
                             C   
                             C  sft             STRUC 
 0000  ????????              C  sft_link        DD      ? 
 0004  ????                  C  sft_count       DW      ?               ; numbe
				r of entries 
 0006  ????                  C  sft_table       DW      ?               ; begin
				ning of array of the following 
 0008                        C  sft             ENDS 
                             C   
                             C  ; 
                             C  ; system file table entry 
                             C  ; 
                             C   
                             C  sf_entry        STRUC 
 0000  ??                    C  sf_ref_count    DB      ?               ; numbe
				r of processes sharing fcb 
 0001  ??                    C  sf_mode         DB      ?               ; mode 
				of access 
 0002  ??                    C  sf_attr         DB      ?               ; attri
				bute of file 
 0003  0025[                 C  sf_fcb          DB      (SIZE sys_fcb) DUP (?) 
            ??               C  
                         ]   C  
                             C  
                             C                                          ; actua
				l FCB 
 0028                        C  sf_entry        ENDS 
                             C   
 = 0005                      C  sf_default_number   EQU     5h 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C   
                             C  BREAK <Memory arena structure> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-45
Memory arena structure                                      

                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
                             C  ; 
                             C  ; arena item 
                             C  ; 
                             C  arena   STRUC 
 0000  ??                    C  arena_signature     DB  ?               ; 4D fo
				r valid item, 5A for last item 
 0001  ????                  C  arena_owner         DW  ?               ; owner
				 of arena item 
 0003  ????                  C  arena_size          DW  ?               ; size 
				in paragraphs of item 
 0005                        C  arena   ENDS 
                             C   
                             C  ; 
                             C  ; Current structure of the data returned by the
				 international call 
                             C  ; 
                             C   
                             C  internat_block STRUC 
 0000  ????                  C  Date_tim_format DW      ?           ; 0-USA, 1-
				EUR, 2-JAP 
 0002  ??                    C  Currency_sym    DB      ?           ; Currency 
				Symbol 5 bytes 
 0003  ??                    C                  DB      ? 
 0004  ??                    C                  DB      ? 
 0005  ??                    C                  DB      ? 
 0006  ??                    C                  DB      ? 
 0007  ??                    C  Thous_sep       DB      ?           ; Thousands
				 separator 2 bytes 
 0008  ??                    C                  DB      ? 
 0009  ??                    C  Decimal_sep     DB      ?           ; Decimal s
				eparator 2 bytes 
 000A  ??                    C                  DB      ? 
 000B  ??                    C  Date_sep        DB      ?           ; Date sepa
				rator 2 bytes 
 000C  ??                    C                  DB      ? 
 000D  ??                    C  Time_sep        DB      ?           ; Decimal s
				eparator 2 bytes 
 000E  ??                    C                  DB      ? 
 000F  ??                    C  Bit_feild       DB      ?           ; Bit value
				s 
                             C                                      ;   Bit 0 =
				 0 if currency symbol first 
                             C                                      ;         =
				 1 if currency symbol last 
                             C                                      ;   Bit 1 =
				 0 if No space after currency symbol 
                             C                                      ;         =
				 1 if space after currency symbol 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-46
Memory arena structure                                      

 0010  ??                    C  Currency_cents  DB      ?           ; Number of
				 places after currency dec point 
 0011  ??                    C  Time_24         DB      ?           ; 1 if 24 h
				our time, 0 if 12 hour time 
 0012  ????                  C  Map_call        DW      ?           ; Address o
				f case mapping call (DWORD) 
 0014  ????                  C                  DW      ?           ; THIS IS T
				WO WORDS SO IT CAN BE INITIALIZED 
                             C                                      ;  in piece
				s. 
 0016  ??                    C  Data_sep        DB      ?           ; Data list
				 separator character 
 0017  ??                    C                  DB      ? 
 0018                        C  internat_block ENDS 
                             C   
                             C  ; 
                             C  ; Max size of the block returned by the INTERNA
				TIONAL call 
                             C  ; 
 = 0020                      C  internat_block_max      EQU     32 
                             C   
                             C  ; 
                             C  ; CAUTION: The routines in ALLOC.ASM rely on th
				e fact that arena_signature 
                             C  ; and arena_owner_system are all equal to zero 
				and are contained in DI.  Change 
                             C  ; them and change ALLOC.ASM. 
                             C   
 = 0000                      C  arena_owner_system  EQU 0               ; free 
				block indication 
                             C   
 = 004D                      C  arena_signature_normal  EQU 4Dh         ; valid
				 signature, not end of arena 
 = 005A                      C  arena_signature_end     EQU 5Ah         ; valid
				 signature, last block in arena 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C   
                             C  BREAK <Machine instruction definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-47
Machine instruction definitions                             

                             C   
 = 00CD                      C  mi_INT          EQU     0CDh 
 = 00EA                      C  mi_Long_JMP     EQU     0EAh 
 = 009A                      C  mi_Long_CALL    EQU     09Ah 
 = 00CB                      C  mi_Long_RET     EQU     0CBh 
                             C   
                             C  BREAK <Standard I/O assignments> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-48
Standard I/O assignments                                    

                             C   
 = 0000                      C  stdin       EQU     0 
 = 0001                      C  stdout      EQU     1 
 = 0002                      C  stderr      EQU     2 
 = 0003                      C  stdaux      EQU     3 
 = 0004                      C  stdprn      EQU     4 
                             C   
                             C  BREAK <Xenix subfunction assignments> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-49
Xenix subfunction assignments                               

                             C   
 = 0000                      C  open_for_read   EQU 0 
 = 0001                      C  open_for_write  EQU 1 
 = 0002                      C  open_for_both   EQU 2 
                             C   
                             C  BREAK <Xenix error codes> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-50
Xenix error codes                                           

                             C   
                             C  ; 
                             C  ; XENIX calls all return error codes through AX
				.  If an error occurred then 
                             C  ; the carry bit will be set and the error code 
				is in AX.  If no error occurred 
                             C  ; then the carry bit is reset and AX contains r
				eturned info. 
                             C  ; 
                             C   
 =                           C  no_error_occurred               EQU     0      
				                                               
				         ? 
                             C   
 = 0001                      C  error_invalid_function          EQU     1 
 = 0002                      C  error_file_not_found            EQU     2 
 = 0003                      C  error_path_not_found            EQU     3 
 = 0004                      C  error_too_many_open_files       EQU     4 
 = 0005                      C  error_access_denied             EQU     5 
 = 0006                      C  error_invalid_handle            EQU     6 
 = 0007                      C  error_arena_trashed             EQU     7 
 = 0008                      C  error_not_enough_memory         EQU     8 
 = 0009                      C  error_invalid_block             EQU     9 
 = 000A                      C  error_bad_environment           EQU     10 
 = 000B                      C  error_bad_format                EQU     11 
 = 000C                      C  error_invalid_access            EQU     12 
 = 000D                      C  error_invalid_data              EQU     13 
                             C  ;**** unused                    EQU     14 
 = 000F                      C  error_invalid_drive             EQU     15 
 = 0010                      C  error_current_directory         EQU     16 
 = 0011                      C  error_not_same_device           EQU     17 
 = 0012                      C  error_no_more_files             EQU     18 
                             C   
 =                           C  country_not_found               EQU     error_f
				ile_not_found 
 =                           C  alloc_not_enough_memory         EQU     error_n
				ot_enough_memory 
 =                           C  alloc_arena_trashed             EQU     error_a
				rena_trashed 
                             C   
 =                           C  close_invalid_handle            EQU     error_i
				nvalid_handle 
 =                           C  close_invalid_function          EQU     error_i
				nvalid_function 
                             C   
 =                           C  chdir_path_not_found            EQU     error_p
				ath_not_found 
                             C   
 =                           C  chmod_path_not_found            EQU     error_p
				ath_not_found 
 =                           C  chmod_access_denied             EQU     error_a
				ccess_denied 
 =                           C  chmod_invalid_function          EQU     error_i
				nvalid_function 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-51
Xenix error codes                                           

                             C   
 =                           C  creat_access_denied             EQU     error_a
				ccess_denied 
 =                           C  creat_path_not_found            EQU     error_p
				ath_not_found 
 =                           C  creat_too_many_open_files       EQU     error_t
				oo_many_open_files 
                             C   
 =                           C  curdir_invalid_drive            EQU     error_i
				nvalid_drive 
                             C   
 =                           C  dealloc_invalid_block           EQU     error_i
				nvalid_block 
 =                           C  dealloc_arena_trashed           EQU     error_a
				rena_trashed 
                             C   
 =                           C  dup_invalid_handle              EQU     error_i
				nvalid_handle 
 =                           C  dup_too_many_open_files         EQU     error_t
				oo_many_open_files 
                             C   
 =                           C  dup2_invalid_handle             EQU     error_i
				nvalid_handle 
                             C   
 =                           C  exec_invalid_function           EQU     error_i
				nvalid_function 
 =                           C  exec_bad_environment            EQU     error_b
				ad_environment 
 =                           C  exec_bad_format                 EQU     error_b
				ad_format 
 =                           C  exec_not_enough_memory          EQU     error_n
				ot_enough_memory 
 =                           C  exec_file_not_found             EQU     error_f
				ile_not_found 
                             C   
 =                           C  filetimes_invalid_function      EQU     error_i
				nvalid_function 
 =                           C  filetimes_invalid_handle        EQU     error_i
				nvalid_handle 
                             C   
 =                           C  findfirst_file_not_found        EQU     error_f
				ile_not_found 
 =                           C  findfirst_no_more_files         EQU     error_n
				o_more_files 
 =                           C  findnext_no_more_files          EQU     error_n
				o_more_files 
                             C   
 =                           C  international_invalid_function  EQU     error_i
				nvalid_function 
                             C   
 =                           C  ioctl_invalid_handle            EQU     error_i
				nvalid_handle 
 =                           C  ioctl_invalid_function          EQU     error_i
				nvalid_function 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-52
Xenix error codes                                           

 =                           C  ioctl_invalid_data              EQU     error_i
				nvalid_data 
                             C   
 =                           C  lseek_invalid_handle            EQU     error_i
				nvalid_handle 
 =                           C  lseek_invalid_function          EQU     error_i
				nvalid_function 
                             C   
 =                           C  mkdir_path_not_found            EQU     error_p
				ath_not_found 
 =                           C  mkdir_access_denied             EQU     error_a
				ccess_denied 
                             C   
 =                           C  open_invalid_access             EQU     error_i
				nvalid_access 
 =                           C  open_file_not_found             EQU     error_f
				ile_not_found 
 =                           C  open_access_denied              EQU     error_a
				ccess_denied 
 =                           C  open_too_many_open_files        EQU     error_t
				oo_many_open_files 
                             C   
 =                           C  read_invalid_handle             EQU     error_i
				nvalid_handle 
 =                           C  read_access_denied              EQU     error_a
				ccess_denied 
                             C   
 =                           C  rename_file_not_found           EQU     error_f
				ile_not_found 
 =                           C  rename_not_same_device          EQU     error_n
				ot_same_device 
 =                           C  rename_access_denied            EQU     error_a
				ccess_denied 
                             C   
 =                           C  rmdir_path_not_found            EQU     error_p
				ath_not_found 
 =                           C  rmdir_access_denied             EQU     error_a
				ccess_denied 
 =                           C  rmdir_current_directory         EQU     error_c
				urrent_directory 
                             C   
 =                           C  setblock_invalid_block          EQU     error_i
				nvalid_block 
 =                           C  setblock_arena_trashed          EQU     error_a
				rena_trashed 
 =                           C  setblock_not_enough_memory      EQU     error_n
				ot_enough_memory 
 =                           C  setblock_invalid_function       EQU     error_i
				nvalid_function 
                             C   
 =                           C  unlink_file_not_found           EQU     error_f
				ile_not_found 
 =                           C  unlink_access_denied            EQU     error_a
				ccess_denied 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-53
Xenix error codes                                           

                             C   
 =                           C  write_invalid_handle            EQU     error_i
				nvalid_handle 
 =                           C  write_access_denied             EQU     error_a
				ccess_denied 
                             C   
                             C  BREAK <system call definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-54
system call definitions                                     

                             C   
 = 0000                      C  Abort                           EQU 0   ;  0   
				   0 
 = 0001                      C  Std_Con_Input                   EQU 1   ;  1   
				   1 
 = 0002                      C  Std_Con_Output                  EQU 2   ;  2   
				   2 
 = 0003                      C  Std_Aux_Input                   EQU 3   ;  3   
				   3 
 = 0004                      C  Std_Aux_Output                  EQU 4   ;  4   
				   4 
 = 0005                      C  Std_Printer_Output              EQU 5   ;  5   
				   5 
 = 0006                      C  Raw_Con_IO                      EQU 6   ;  6   
				   6 
 = 0007                      C  Raw_Con_Input                   EQU 7   ;  7   
				   7 
 = 0008                      C  Std_Con_Input_No_Echo           EQU 8   ;  8   
				   8 
 = 0009                      C  Std_Con_String_Output           EQU 9   ;  9   
				   9 
 = 000A                      C  Std_Con_String_Input            EQU 10  ; 10   
				   A 
 = 000B                      C  Std_Con_Input_Status            EQU 11  ; 11   
				   B 
 = 000C                      C  Std_Con_Input_Flush             EQU 12  ; 12   
				   C 
 = 000D                      C  Disk_Reset                      EQU 13  ; 13   
				   D 
 = 000E                      C  Set_Default_Drive               EQU 14  ; 14   
				   E 
 = 000F                      C  FCB_Open                        EQU 15  ; 15   
				   F 
 = 0010                      C  FCB_Close                       EQU 16  ; 16   
				  10 
 = 0011                      C  Dir_Search_First                EQU 17  ; 17   
				  11 
 = 0012                      C  Dir_Search_Next                 EQU 18  ; 18   
				  12 
 = 0013                      C  FCB_Delete                      EQU 19  ; 19   
				  13 
 = 0014                      C  FCB_Seq_Read                    EQU 20  ; 20   
				  14 
 = 0015                      C  FCB_Seq_Write                   EQU 21  ; 21   
				  15 
 = 0016                      C  FCB_Create                      EQU 22  ; 22   
				  16 
 = 0017                      C  FCB_Rename                      EQU 23  ; 23   
				  17 
 = 0019                      C  Get_Default_Drive               EQU 25  ; 25   
				  19 
 = 001A                      C  Set_DMA                         EQU 26  ; 26   
				  1A 
                             C  ;----+----+----+----+----+----+----+----+----+-
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-55
system call definitions                                     

				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 = 001F                      C  Get_Default_DPB                 EQU 31  ; 31   
				  1F 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
 = 0021                      C  FCB_Random_Read                 EQU 33  ; 33   
				  21 
 = 0022                      C  FCB_Random_Write                EQU 34  ; 34   
				  22 
 = 0023                      C  Get_FCB_File_Length             EQU 35  ; 35   
				  23 
 = 0024                      C  Get_FCB_Position                EQU 36  ; 36   
				  24 
 = 0025                      C  Set_Interrupt_Vector            EQU 37  ; 37   
				  25 
 = 0026                      C  Create_Process_Data_Block       EQU 38  ; 38   
				  26 
 = 0027                      C  FCB_Random_Read_Block           EQU 39  ; 39   
				  27 
 = 0028                      C  FCB_Random_Write_Block          EQU 40  ; 40   
				  28 
 = 0029                      C  Parse_File_Descriptor           EQU 41  ; 41   
				  29 
 = 002A                      C  Get_Date                        EQU 42  ; 42   
				  2A 
 = 002B                      C  Set_Date                        EQU 43  ; 43   
				  2B 
 = 002C                      C  Get_Time                        EQU 44  ; 44   
				  2C 
 = 002D                      C  Set_Time                        EQU 45  ; 45   
				  2D 
 = 002E                      C  Set_Verify_On_Write             EQU 46  ; 46   
				  2E 
                             C  ; Extended functionality group 
 = 002F                      C  Get_DMA                         EQU 47  ; 47   
				  2F 
 = 0030                      C  Get_Version                     EQU 48  ; 48   
				  30 
 = 0031                      C  Keep_Process                    EQU 49  ; 49   
				  31 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-56
system call definitions                                     

 = 0032                      C  Get_DPB                         EQU 50  ; 50   
				  32 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
 = 0033                      C  Set_CTRL_C_Trapping             EQU 51  ; 51   
				  33 
 = 0034                      C  Get_InDOS_Flag                  EQU 52  ; 52   
				  34 
 = 0035                      C  Get_Interrupt_Vector            EQU 53  ; 53   
				  35 
 = 0036                      C  Get_Drive_Freespace             EQU 54  ; 54   
				  36 
 = 0037                      C  Char_Oper                       EQU 55  ; 55   
				  37 
 = 0038                      C  International                   EQU 56  ; 56   
				  38 
                             C  ;   Directory Group 
 = 0039                      C  MKDir                           EQU 57  ; 57   
				  39 
 = 003A                      C  RMDir                           EQU 58  ; 58   
				  3A 
 = 003B                      C  CHDir                           EQU 59  ; 59   
				  3B 
                             C  ;   File Group 
 = 003C                      C  Creat                           EQU 60  ; 60   
				  3C 
 = 003D                      C  Open                            EQU 61  ; 61   
				  3D 
 = 003E                      C  Close                           EQU 62  ; 62   
				  3E 
 = 003F                      C  Read                            EQU 63  ; 63   
				  3F 
 = 0040                      C  Write                           EQU 64  ; 64   
				  40 
 = 0041                      C  Unlink                          EQU 65  ; 65   
				  41 
 = 0042                      C  LSeek                           EQU 66  ; 66   
				  42 
 = 0043                      C  CHMod                           EQU 67  ; 67   
				  43 
 = 0044                      C  IOCtl                           EQU 68  ; 68   
				  44 
 = 0045                      C  XDup                            EQU 69  ; 69   
				  45 
 = 0046                      C  XDup2                           EQU 70  ; 70   
				  46 
 = 0047                      C  Current_Dir                     EQU 71  ; 71   
				  47 
                             C  ;    Memory Group 
 = 0048                      C  Alloc                           EQU 72  ; 72   
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-57
system call definitions                                     

				  48 
 = 0049                      C  Dealloc                         EQU 73  ; 73   
				  49 
 = 004A                      C  Setblock                        EQU 74  ; 74   
				  4A 
                             C  ;    Process Group 
 = 004B                      C  Exec                            EQU 75  ; 75   
				  4B 
 = 004C                      C  Exit                            EQU 76  ; 76   
				  4C 
 = 004D                      C  Wait                            EQU 77  ; 77   
				  4D 
 = 004E                      C  Find_First                      EQU 78  ; 78   
				  4E 
                             C  ;   Special Group 
 = 004F                      C  Find_Next                       EQU 79  ; 79   
				  4F 
                             C  ; SPECIAL SYSTEM GROUP 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 = 0050                      C  Set_Current_PDB                 EQU 80  ; 80   
				  50 
 = 0051                      C  Get_Current_PDB                 EQU 81  ; 81   
				  51 
 = 0052                      C  Get_In_Vars                     EQU 82  ; 82   
				  52 
 = 0053                      C  SetDPB                          EQU 83  ; 83   
				  53 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
 = 0054                      C  Get_Verify_On_Write             EQU 84  ; 84   
				  54 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 = 0055                      C  Dup_PDB                         EQU 85  ; 85   
				  55 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-58
system call definitions                                     

 = 0056                      C  Rename                          EQU 86  ; 86   
				  56 
 = 0057                      C  File_Times                      EQU 87  ; 87   
				  57 
 = 0058                      C  AllocOper                       EQU 88  ; 88   
				  58 
                             C  ; Network extention system calls 
 = 0059                      C  GetExtendedError                EQU 89  ; 89   
				  59 
 = 005A                      C  CreateTempFile                  EQU 90  ; 90   
				  5A 
 = 005B                      C  CreateNewFile                   EQU 91  ; 91   
				  5B 
 = 005C                      C  LockOper                        EQU 92  ; 92   
				  5C Lock and Unlock 
 = 005D                      C  ServerCall                      EQU 93  ; 93   
				  5D CommitAll, ServerDOSCall, 
                             C                                          ;      
				     CloseByName, CloseUser, 
                             C                                          ;      
				     CloseUserProcess, 
                             C                                          ;      
				     GetOpenFileList 
 = 005E                      C  UserIDOper                      EQU 94  ; 94   
				  5E Get and Set 
 = 005F                      C  AssignOper                      EQU 95  ; 95   
				  5F On, Off, Get, Set, Cancel 
                             C   
 = 00F8                      C  Set_Oem_Handler                 EQU 248 ; 248  
				  F8 
 = 00F9                      C  OEM_C1                          EQU 249 ; 249  
				  F9 
 = 00FA                      C  OEM_C2                          EQU 250 ; 250  
				  FA 
 = 00FB                      C  OEM_C3                          EQU 251 ; 251  
				  FB 
 = 00FC                      C  OEM_C4                          EQU 252 ; 252  
				  FC 
 = 00FD                      C  OEM_C5                          EQU 253 ; 253  
				  FD 
 = 00FE                      C  OEM_C6                          EQU 254 ; 254  
				  FE 
 = 00FF                      C  OEM_C7                          EQU 255 ; 255  
				  FF 
                             C  SUBTTL 
                                 
                                 
 = 005C                         FCB     EQU     5CH 
                                 
                                ;Drive parameter block from DOS header 
                                 
                                SUBTTL  Segments used in load order 
                                 
 0000                           CODE    SEGMENT PUBLIC 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-59
Segments used in load order                                 

 0000                           CODE    ENDS 
                                 
 0000                           CONST   SEGMENT PUBLIC BYTE 
 0000                           CONST   ENDS 
                                 
 0000                           DATA    SEGMENT PUBLIC WORD 
 0000                           DATA    ENDS 
                                 
                                DG      GROUP   CODE,CONST,DATA 
                                 
                                SUBTTL  Initialized Data 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-60
Initialized Data                                            

                                PAGE 
 0000                           CONST   SEGMENT PUBLIC BYTE 
                                 
                                        PUBLIC  HECODE,SWITCHAR,NOISY,DOFIX,CON
				BUF,ORPHCNT,ORPHSIZ,DOFIX 
                                        PUBLIC  HIDCNT,HIDSIZ,DIRCNT,DIRSIZ,FIL
				CNT,FILSIZ,BADSIZ,LCLUS 
                                        PUBLIC  DOTENT,HAVFIX,SECONDPASS,NUL,AL
				LFILE,PARSTR,ERRSUB,LCLUS 
                                        PUBLIC  DIRTYFAT,BADSIZ,DDOTENT,CROSSCN
				T,ORPHFCB,ORPHEXT,ALLDRV 
                                        PUBLIC  FRAGMENT,USERDIR,DIRBUF,USERDIR
				,FIXMFLG,DOTMES,DIRCHAR 
                                 
                                        EXTRN   IDMES1:BYTE,IDPOST:BYTE,VNAME:B
				YTE,MONTAB:BYTE 
                                        EXTRN   TCHAR:BYTE,BADREAD_PRE:BYTE,BAD
				READ_POST:BYTE 
                                        EXTRN   CRLF:BYTE,BADVER:BYTE,BADSUBDIR
				:BYTE,CENTRY:BYTE 
                                        EXTRN   BADDRV:BYTE,BADCD:BYTE,BADRDMES
				:BYTE,OPNERR:BYTE 
                                        EXTRN   CONTAINS:BYTE,EXTENTS:BYTE,NOEX
				TENTS:BYTE 
                                        EXTRN   BADDRVM:BYTE,BADDRVM2:BYTE,BADI
				DBYT:BYTE 
                                 
                                 
 0000                           DIRBUF  LABEL   BYTE                    ;Entry 
				buffer for searches 
 0000  FF 00 00 00 00 00 08     VOLID   DB      -1,0,0,0,0,0,8          ;Volume
				 ID FCB 
 0007  00 3F 3F 3F 3F 3F 3F     VOLNAM  DB      0,"???????????" 
       3F 3F 3F 3F 3F           
 0013  0019[                            DB      25 DUP(0) 
            00                  
                         ]      
                                
                                 
 002C  FF 00 00 00 00 00 1E     ALLFILE DB      -1,0,0,0,0,0,1EH        ;Extend
				ed FCB 
 0033  00 3F 3F 3F 3F 3F 3F     ALLDRV  DB      0,"???????????" 
       3F 3F 3F 3F 3F           
 003F  0019[                            DB      25 DUP (?) 
            ??                  
                         ]      
                                
                                 
 0058  00 46 49 4C 45 30 30     ORPHFCB DB      0,"FILE0000" 
       30 30                    
 0061  43 48 4B                 ORPHEXT DB      "CHK" 
 0064  0019[                            DB      25 DUP (?) 
            ??                  
                         ]      
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-61
Initialized Data                                            

                                
                                 
                                 
                                ;Non-message data 
                                 
 007D  2D                       SWITCHAR DB     "-" 
 007E                           ROOTSTR LABEL   BYTE 
 007E  2F                       DIRCHAR DB      "/" 
 007F  00                       NUL     DB      0 
 0080  2E 2E 00                 PARSTR  DB      "..",0 
 0083  2E 00                    DOTMES  DB      ".",0 
 0085  2E 20 20 20 20 20 20     DOTENT  DB      ".          " 
       20 20 20 20              
 0090  2E 2E 20 20 20 20 20     DDOTENT DB      "..         " 
       20 20 20 20              
 009B  ??                       HECODE  DB      ? 
 009C  00                       FIXMFLG DB      0                       ;Flag f
				or printing fixmes 
 009D  0000                     ERRSUB  DW      0                       ;Flag f
				or bad subdir error 
 009F  00                       FRAGMENT DB     0                       ;Flag f
				or extent processing 
 00A0  00                       DIRTYFAT DB     0                       ;Dirty 
				flag for FAT 
 00A1  0000                     DIRCNT  DW      0                       ;# dire
				ctories 
 00A3  0000                     DIRSIZ  DW      0                       ;# allo
				c units in directories 
 00A5  0000                     FILCNT  DW      0                       ;# reg 
				files 
 00A7  0000                     FILSIZ  DW      0                       ;# allo
				c units in reg files 
 00A9  0000                     HIDCNT  DW      0                       ;# hidd
				en files 
 00AB  0000                     HIDSIZ  DW      0                       ;# allo
				c units in hidden files 
 00AD  0000                     BADSIZ  DW      0                       ;# allo
				c units in bad sectors 
 00AF  0000                     ORPHCNT DW      0                       ;# orph
				an files made 
 00B1  0000                     ORPHSIZ DW      0                       ;# allo
				c units in orphan files 
 00B3  0000                     LCLUS   DW      0                       ;# allo
				c units in lost clusters 
 00B5  00                       DISPFLG DB      0                       ;used b
				y number routines 
 00B6  0000                     CROSSCNT DW     0                       ;# cros
				slinked files (first pass) 
 00B8  00                       SECONDPASS DB   0                       ;Pass f
				lag 
 00B9  00                       HAVFIX  DB      0                       ;non ze
				ro if any fixes 
 00BA  00                       DOFIX   DB      0                       ;flag f
				or F switch 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-62
Initialized Data                                            

 00BB  00                       NOISY   DB      0                       ;flag f
				or V switch 
 00BC  2F 00                    USERDIR DB      "/",0                   ;Users 
				current dir for drive 
 00BE  003F[                            DB      (DIRSTRLEN-1) DUP (?) 
            ??                  
                         ]      
                                
 00FD  0F 00                    CONBUF  DB      15,0                    ;Input 
				buffer 
 00FF  000F[                            DB      15 DUP (?) 
            ??                  
                         ]      
                                
                                 
 010E                           CONST   ENDS 
                                 
                                SUBTTL  Un-initialized Data 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-63
Un-initialized Data                                         

                                PAGE 
 0000                           DATA    SEGMENT PUBLIC WORD 
                                 
                                        PUBLIC  ZEROTRUNC,NAMBUF,MCLUS,THISDPB,
				STACKLIM,ERRCNT 
                                        PUBLIC  SRFCBPT,ISCROSS,CSIZE,DSIZE,SSI
				ZE,FAT,FATMAP 
                                        PUBLIC  HARDCH,CONTCH,USERDEV,SECBUF,DO
				TSNOGOOD 
                                 
 0000  ????????                 HARDCH  DD      ?                       ;Pointe
				r to real INT 24 handler 
 0004  ????????                 CONTCH  DD      ?                       ;Pointe
				r to real INT 23 handler 
 0008  ????????                 THISDPB DD      ?                       ;Pointe
				r to drive DPB 
 000C  ??                       USERDEV DB      ?                       ;Users 
				current device 
 000D  ??                       CSIZE   DB      ?                       ;Sector
				s per cluster 
 000E  ????                     SSIZE   DW      ?                       ;bytes 
				per sector 
 0010  ????                     DSIZE   DW      ?                       ;# allo
				c units on disk 
 0012  ????                     MCLUS   DW      ?                       ;DSIZE 
				+ 1 
 0014  000E[                    NAMBUF  DB      14 DUP (?)              ;Buffer
				 
            ??                  
                         ]      
                                
 0022  ??                       DOTSNOGOOD DB   ?                       ;. or .
				. error flag 
 0023  ??                       ZEROTRUNC DB    ?                       ;Trimmi
				ng flag 
 0024  ??                       ISCROSS DB      ?                       ;Crossl
				ink flag 
 0025  ????                     OLDCLUS DW      ? 
 0027  ????                     SRFCBPT DW      ? 
 0029  0050 R                   FATMAP  DW      OFFSET DG:FAT           ;Offset
				 of FATMAP table 
 002B  ????                     SECBUF  DW      ?                       ;Offset
				 of sector buffer 
 002D  ??                       ERRCNT  DB      ?                       ;Used b
				y FATread and write 
 002E  ????                     STACKLIM DW     ?                       ;Stack 
				growth limit 
                                 
 0030  ????                     INTERNATVARS    internat_block <> 
 0032  ??                       
 0033  ??                       
 0034  ??                       
 0035  ??                       
 0036  ??                       
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-64
Un-initialized Data                                         

 0037  ??                       
 0038  ??                       
 0039  ??                       
 003A  ??                       
 003B  ??                       
 003C  ??                       
 003D  ??                       
 003E  ??                       
 003F  ??                       
 0040  ??                       
 0041  ??                       
 0042  ????                     
 0044  ????                     
 0046  ??                       
 0047  ??                       
                                
 0048  0008[                                    DB      (internat_block_max - (
				$ - INTERNATVARS)) DUP (?) 
            ??                  
                         ]      
                                
                                 
 0050                           FAT     LABEL   WORD 
 0050                           DATA    ENDS 
                                 
                                 
                                SUBTTL  Start of CHKDSK 
                                 
 0000                           CODE    SEGMENT PUBLIC 
                                ASSUME  CS:DG,DS:DG,ES:DG,SS:DG 
                                 
                                        PUBLIC  SUBERRP,DOTCOMBMES,FIGREC,FCB_T
				O_ASCZ,PRTCHR,EPRINT 
                                        PUBLIC  PRINT,DOCRLF,DISP16BITS,DISP32B
				ITS,DISPCLUS,CHECKFILES 
                                 
                                        EXTRN   RDSKERR:NEAR,SETSWITCH:NEAR,PRO
				MPTYN:NEAR,REPORT:NEAR 
                                        EXTRN   PRINTCURRDIRERR:NEAR,PRINTTHISE
				L2:NEAR,CHECKERR:NEAR 
                                        EXTRN   INT_23:NEAR,INT_24:NEAR,FINDCHA
				IN:NEAR,DONE:NEAR,AMDONE:NEAR 
                                        EXTRN   FATAL:NEAR,DIRPROC:NEAR,CHKMAP:
				NEAR,CHKCROSS:NEAR,UNPACK:NEAR 
                                 
 0100                                   ORG     100H 
                                 
 0100                           CHKDSK: 
 0100  EB 08                            JMP     SHORT CHSTRT 
                                 
 0102  56 65 72 20 32 2E 33     HEADER  DB      "Ver 2.30" 
       30                       
                                 
 010A                           CHSTRT: 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-65
Start of CHKDSK                                             

                                 
                                ;Code to print header. 
                                ;       PUSH    AX 
                                ;       MOV     DX,OFFSET DG:HEADER 
                                ;       CALL    PRINT 
                                ;       POP     AX 
                                 
 010A  50                               PUSH    AX              ;Save DRIVE val
				idity info 
 010B  B4 30                            MOV     AH,GET_VERSION 
 010D  CD 21                            INT     21H 
 010F  86 E0                            XCHG    AH,AL           ;Turn it around
				 to AH.AL 
 0111  3D 0136                          CMP     AX,DOSVER_LOW 
 0114  72 05                            JB      GOTBADDOS 
 0116  3D 020B                          CMP     AX,DOSVER_HIGH 
 0119  76 06                            JBE     OKDOS 
 011B                           GOTBADDOS: 
 011B  BA 0000 E                        MOV     DX,OFFSET DG:BADVER 
 011E  EB 31 90                         JMP     CERROR 
                                 
 0121                           OKDOS: 
 0121  58                               POP     AX              ;Get back drive
				 info 
 0122  BB FFF0                          MOV     BX,0FFF0H 
 0125  8B D4                            MOV     DX,SP 
 0127  3B D3                            CMP     DX,BX 
 0129  73 19                            JAE     STACKOK         ;Lots of stack 
 012B  8B 16 0002                       MOV     DX,DS:[2]       ;High break 
 012F  8C C9                            MOV     CX,CS 
 0131  2B D1                            SUB     DX,CX 
 0133  81 FA 0FFF                       CMP     DX,0FFFH 
 0137  73 07                            JAE     SETSTACK        ;Lots to grab 
 0139  B9 0004                          MOV     CX,4            ;Suck up more s
				tack (blast command) 
 013C  D3 E2                            SHL     DX,CL 
 013E  8B DA                            MOV     BX,DX 
 0140                           SETSTACK: 
 0140  FA                               CLI 
 0141  8B E3                            MOV     SP,BX 
 0143  FB                               STI 
 0144                           STACKOK: 
 0144  50                               PUSH    AX 
 0145  B4 0D                            MOV     AH,DISK_RESET        ;Flush eve
				rything, and invalidate 
 0147  CD 21                            INT     21H 
 0149  58                               POP     AX 
 014A  3C FF                            CMP     AL,0FFH                 ;Illega
				l drive specifier? 
 014C  75 11                            JNZ     FILECHK                 ;No -- 
				check for filename 
                                 
 014E                           DRVERR: 
 014E  BA 0000 E                        MOV     DX,OFFSET DG:BADDRV 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-66
Start of CHKDSK                                             

 0151                           CERROR: 
 0151  0E                               PUSH    CS                      ;Make s
				ure DS is OK 
 0152  1F                               POP     DS 
 0153  E8 05F5 R                        CALL    PRINT                   ;Print 
				error message 
 0156  CD 20                            INT     20H 
                                 
 0158                           CERROR2: 
 0158  52                               PUSH    DX 
 0159  E8 0000 E                        CALL    DONE                           
				 ;Reset users disk 
 015C  5A                               POP     DX 
 015D  EB F2                            JMP     SHORT CERROR 
                                 
 015F                           FILECHK: 
 015F  B8 3700                          MOV     AX,(CHAR_OPER SHL 8) 
 0162  CD 21                            INT     21H 
 0164  88 16 007D R                     MOV     [SWITCHAR],DL 
 0168  80 FA 2F                         CMP     DL,"/" 
 016B  75 0A                            JNZ     SLASHOK 
 016D  C6 06 007E R 5C                  MOV     [DIRCHAR],"\" 
 0172  C6 06 00BC R 5C                  MOV     [USERDIR],"\" 
 0177                           SLASHOK: 
 0177  80 3E 005D 20                    CMP     DS:(BYTE PTR FCB+1)," "        
				 ;Filename specified? 
 017C  74 0E                            JZ      DRVCHK                         
				 ;No -- get the correct drive 
 017E  A0 007D R                        MOV     AL,[SWITCHAR] 
 0181  38 06 005D                       CMP     DS:(BYTE PTR FCB+1),AL         
				 ;Filename specified? 
 0185  74 05                            JZ      DRVCHK                         
				 ;No -- get the correct drive 
 0187  C6 06 009F R 01                  MOV     BYTE PTR [FRAGMENT],1          
				 ;Set flag to perform fragment 
                                                                               
				 ;check on specified files 
 018C                           DRVCHK: 
 018C  E8 0000 E                        CALL    SETSWITCH                      
				 ;Look for switches 
 018F  B4 19                            MOV     AH,GET_DEFAULT_DRIVE           
				 ;Get current drive 
 0191  CD 21                            INT     21H 
 0193  A2 000C R                        MOV     [USERDEV],AL                   
				 ;Save for later 
 0196  8A E0                            MOV     AH,AL 
 0198  FE C4                            INC     AH                      ;A = 1 
 019A  8A 3E 005C                       MOV     BH,DS:(BYTE PTR FCB)    ;See if
				 drive specified 
 019E  0A FF                            OR      BH,BH 
 01A0  74 06                            JZ      SETDSK 
 01A2  8A C7                            MOV     AL,BH 
 01A4  8A E0                            MOV     AH,AL 
 01A6  FE C8                            DEC     AL                      ;A = 0 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-67
Start of CHKDSK                                             

 01A8                           SETDSK: 
 01A8  88 26 0033 R                     MOV     [ALLDRV],AH             ;Target
				 drive 
 01AC  88 26 0007 R                     MOV     [VOLNAM],AH             ;A = 1 
 01B0  88 26 0058 R                     MOV     [ORPHFCB],AH            ;A = 1 
 01B4  00 06 0000 E                     ADD     [BADDRVM],AL            ;A = 0 
 01B8  00 06 0000 E                     ADD     [BADDRVM2],AL           ;A = 0 
 01BC  8A D4                            MOV     DL,AH                   ;A = 1 
 01BE  B4 32                            MOV     AH,GET_DPB              ;Get th
				e DPB 
 01C0  CD 21                            INT     21H 
                                ASSUME  DS:NOTHING 
 01C2  3C FF                            CMP     AL,-1 
 01C4  75 05                            JNZ     DRVISOK                 ;Bad dr
				ive (should always be ok) 
 01C6  BA 0000 E                        MOV     DX,OFFSET DG:BADDRV 
 01C9  EB 8D                    CERROR2J: JMP    CERROR2 
                                 
 01CB                           DRVISOK: 
 01CB  FE CA                            DEC     DL                      ;A = 0 
 01CD  B4 0E                            MOV     AH,SET_DEFAULT_DRIVE    ;Set Ta
				rget 
 01CF  CD 21                            INT     21H 
 01D1  83 7F 1C 00                      CMP     [BX.dpb_current_dir],0 
 01D5  74 10                            JZ      CURRISROOT              ;Save u
				sers current dir for target 
 01D7  8B F3                            MOV     SI,BX 
 01D9  83 C6 1E                         ADD     SI,dpb_dir_text 
 01DC  BF 00BD R                        MOV     DI,OFFSET DG:USERDIR + 1 
 01DF                           SETDIRLP: 
 01DF  AC                               LODSB 
 01E0  AA                               STOSB 
 01E1  0A C0                            OR      AL,AL 
 01E3  74 02                            JZ      CURRISROOT 
 01E5  EB F8                            JMP     SHORT SETDIRLP 
 01E7                           CURRISROOT: 
 01E7  36: 8C 1E 000A R                 MOV     WORD PTR [THISDPB+2],DS 
 01EC  0E                               PUSH    CS 
 01ED  1F                               POP     DS 
                                ASSUME  DS:DG 
 01EE  89 1E 0008 R                     MOV     WORD PTR [THISDPB],BX 
 01F2  B8 3523                          MOV     AX,(GET_INTERRUPT_VECTOR SHL 8)
				 OR 23H 
 01F5  CD 21                            INT     21H 
 01F7  89 1E 0004 R                     MOV     WORD PTR [CONTCH],BX 
 01FB  8C 06 0006 R                     MOV     WORD PTR [CONTCH+2],ES 
 01FF  B8 2523                          MOV     AX,(SET_INTERRUPT_VECTOR SHL 8)
				 OR 23H 
 0202  BA 0000 E                        MOV     DX,OFFSET DG:INT_23 
 0205  CD 21                            INT     21H 
 0207  B8 3524                          MOV     AX,(GET_INTERRUPT_VECTOR SHL 8)
				 OR 24H 
 020A  CD 21                            INT     21H 
 020C  89 1E 0000 R                     MOV     WORD PTR [HARDCH],BX 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-68
Start of CHKDSK                                             

 0210  8C 06 0002 R                     MOV     WORD PTR [HARDCH+2],ES 
 0214  B8 2524                          MOV     AX,(SET_INTERRUPT_VECTOR SHL 8)
				 OR 24H 
 0217  BA 0000 E                        MOV     DX,OFFSET DG:INT_24 
 021A  CD 21                            INT     21H 
 021C  0E                               PUSH    CS 
 021D  07                               POP     ES 
 021E  BA 007E R                        MOV     DX,OFFSET DG:ROOTSTR 
 0221  B4 3B                            MOV     AH,CHDIR                       
				 ;Start at root 
 0223  CD 21                            INT     21H 
 0225  BA 0000 E                        MOV     DX,OFFSET DG:BADCD 
 0228  72 9F                            JC      CERROR2J                       
				 ;Couldn't get there 
 022A  BA 0050 R                        MOV     DX,OFFSET DG:FAT               
				 ;Scratch space 
 022D  B4 1A                            MOV     AH,SET_DMA 
 022F  CD 21                            INT     21H 
 0231  BA 0000 R                        MOV     DX,OFFSET DG:VOLID             
				 ;Look for VOL ID 
 0234  B4 11                            MOV     AH,DIR_SEARCH_FIRST 
 0236  CD 21                            INT     21H 
 0238  3C FF                            CMP     AL,-1 
 023A  74 03                            JZ      NOTVOLID 
 023C  E8 03CC R                        CALL    PRINTID                        
				 ;Have a VOL ID 
 023F                           NOTVOLID: 
 023F  C5 1E 0008 R                     LDS     BX,[THISDPB] 
                                ASSUME  DS:NOTHING 
 0243  8B 47 02                         MOV     AX,[BX.dpb_sector_size] 
 0246  36: A3 000E R                    MOV     [SSIZE],AX              ;Sector
				 size in bytes 
 024A  8A 47 04                         MOV     AL,[BX.dpb_cluster_mask] 
 024D  FE C0                            INC     AL 
 024F  36: A2 000D R                    MOV     [CSIZE],AL              ;Sectro
				s per cluster 
 0253  8B 47 0D                         MOV     AX,[BX.dpb_max_cluster] 
 0256  36: A3 0012 R                    MOV     [MCLUS],AX              ;Bound 
				for FAT searching 
 025A  48                               DEC     AX 
 025B  36: A3 0010 R                    MOV     [DSIZE],AX              ;Total 
				data clusters on disk 
 025F  8A 47 0F                         MOV     AL,[BX.dpb_FAT_size]          ;
				Sectors for one fat 
 0262  32 E4                            XOR     AH,AH 
 0264  8B C8                            MOV     CX,AX 
 0266  36: F7 26 000E R                 MUL     [SSIZE]                 ;Bytes 
				for FAT 
 026B  36: 01 06 0029 R                 ADD     [FATMAP],AX             ;Alloca
				te FAT space 
 0270  36: A1 0029 R                    MOV     AX,[FATMAP] 
 0274  36: 03 06 0012 R                 ADD     AX,[MCLUS] 
 0279  05 0002                          ADD     AX,2                    ;Insura
				nce 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-69
Start of CHKDSK                                             

 027C  36: A3 002B R                    MOV     [SECBUF],AX             ;Alloca
				te FATMAP space 
 0280  36: 03 06 000E R                 ADD     AX,[SSIZE] 
 0285  05 0014                          ADD     AX,20                   ;Insura
				nce 
 0288  36: A3 002E R                    MOV     [STACKLIM],AX           ;Limit 
				on recursion 
 028C  8B F9                            MOV     DI,CX 
 028E  8A 4F 08                         MOV     CL,[BX.dpb_FAT_count]          
				;Number of FATs 
 0291  8B 57 06                         MOV     DX,[BX.dpb_first_FAT]          
				;First sector of FAT 
 0294  0E                               PUSH    CS 
 0295  1F                               POP     DS 
                                ASSUME  DS:DG 
 0296  BB 0050 R                        MOV     BX,OFFSET DG:FAT 
 0299  A0 0033 R                        MOV     AL,[ALLDRV] 
 029C  FE C8                            DEC     AL 
 029E  B4 31                            MOV     AH,'1' 
 02A0                           RDLOOP: 
 02A0  87 CF                            XCHG    CX,DI 
 02A2  52                               PUSH    DX 
 02A3  51                               PUSH    CX 
 02A4  57                               PUSH    DI 
 02A5  50                               PUSH    AX 
 02A6  CD 25                            INT     25H                     ;Read i
				n the FAT 
 02A8  A2 009B R                        MOV     [HECODE],AL 
 02AB  58                               POP     AX                      ;Flags 
 02AC  73 2B                            JNC     RDOK 
 02AE  BA 0000 E                        MOV     DX,OFFSET DG:BADREAD_PRE    ;Ba
				rfed 
 02B1  E8 05F5 R                        CALL    PRINT 
 02B4  58                               POP     AX 
 02B5  50                               PUSH    AX 
 02B6  8A D4                            MOV     DL,AH 
 02B8  E8 05DE R                        CALL    PRTCHR 
 02BB  BA 0000 E                        MOV     DX,OFFSET DG:BADREAD_POST 
 02BE  E8 05F5 R                        CALL    PRINT 
 02C1  58                               POP     AX 
 02C2  59                               POP     CX 
 02C3  5F                               POP     DI 
 02C4  5A                               POP     DX 
 02C5  FE C4                            INC     AH 
 02C7  03 D7                            ADD     DX,DI 
 02C9  E2 D5                            LOOP    RDLOOP                  ;Try ne
				xt FAT 
 02CB  E8 0000 E                        CALL    RDSKERR 
 02CE  75 03                            JNZ     NORETRY1 
 02D0  E9 023F R                        JMP     NOTVOLID 
 02D3                           NORETRY1: 
 02D3  BB 0000 E                        MOV     BX,OFFSET DG:BADRDMES 
 02D6  E9 0000 E                        JMP     FATAL                   ;Couldn
				't read any FAT, BARF 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-70
Start of CHKDSK                                             

                                 
 02D9                           RDOK: 
 02D9  58                               POP     AX                      ;Clean 
				up 
 02DA  58                               POP     AX 
 02DB  58                               POP     AX 
 02DC  58                               POP     AX 
 02DD  BE 0050 R                        MOV     SI,OFFSET DG:FAT 
 02E0  AC                               LODSB                           ;Check 
				FAT ID byte 
 02E1  3C F8                            CMP     AL,0F8H 
 02E3  73 0B                            JAE     IDOK 
 02E5  BA 0000 E                        MOV     DX,OFFSET DG:BADIDBYT   ;FAT ID
				 bad 
 02E8  E8 0000 E                        CALL    PROMPTYN                ;Ask us
				er 
 02EB  74 03                            JZ      IDOK 
 02ED  EB 28 90                         JMP     ALLDONE                 ;User s
				aid stop 
 02F0                           IDOK: 
 02F0  8B 3E 0029 R                     MOV     DI,[FATMAP] 
 02F4  8B 0E 0012 R                     MOV     CX,[MCLUS] 
 02F8  41                               INC     CX 
 02F9  32 C0                            XOR     AL,AL 
 02FB  F3/ AA                           REP     STOSB                   ;Initia
				lize FATMAP to all free 
 02FD  BA 0000 R                        MOV     DX,OFFSET DG:DIRBUF     ;FOR AL
				L SEARCHING 
 0300  B4 1A                            MOV     AH,SET_DMA 
 0302  CD 21                            INT     21H 
 0304  33 C0                            XOR     AX,AX 
 0306  50                               PUSH    AX                      ;I am r
				oot 
 0307  50                               PUSH    AX                      ;Parent
				 is root 
 0308  E8 0000 E                        CALL    DIRPROC 
 030B  E8 0000 E                        CALL    CHKMAP                  ;Look f
				or badsectors, orphans 
 030E  E8 0000 E                        CALL    CHKCROSS                ;Check 
				for second pass 
 0311  E8 05F2 R                        CALL    DOCRLF 
 0314  E8 0000 E                        CALL    REPORT 
                                 
 0317                           ALLDONE: 
 0317  E8 0000 E                        CALL    AMDONE 
 031A  CD 20                            INT     20H                     ;Fini 
                                 
                                 
                                ASSUME  DS:DG 
                                 
                                SUBTTL  Check for extents in specified files 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-71
Check for extents in specified files                        

                                PAGE 
 031C                           CHECKFILES: 
                                ;Search the directory for the files specified o
				n the command line 
                                ;and report the number of fragmented allocation
				 units found in 
                                ;each one. 
 031C  E8 05F2 R                        CALL    DOCRLF 
 031F  B4 1A                            MOV     AH,SET_DMA 
 0321  8B 16 0029 R                     MOV     DX,[FATMAP]             ;Use th
				e first free space available 
 0325  8B EA                            MOV     BP,DX 
 0327  83 C5 1B                         ADD     BP,27                   ;cluste
				r in the directory entry 
 032A  CD 21                            INT     21H 
 032C  B4 11                            MOV     AH,DIR_SEARCH_FIRST            
				  ;Look for the first file 
 032E                           FRAGCHK: 
 032E  BA 005C                          MOV     DX,FCB 
 0331  CD 21                            INT     21H 
 0333  0A C0                            OR      AL,AL                   ;Did we
				 find it? 
 0335  75 5D                            JNZ     MSGCHK                  ;No -- 
				we're done 
 0337  33 C0                            XOR     AX,AX                   ;Initia
				lize the fragment counter 
 0339  8B 76 00                         MOV     SI,[BP]                 ;Get th
				e first cluster 
 033C  E8 0000 E                        CALL    UNPACK 
 033F  81 FF 0FF8                       CMP     DI,0FF8H                ;End-of
				-file? 
 0343  73 24                            JAE     NXTCHK                  ;Yes --
				 go report the results 
 0345  46                               INC     SI 
 0346  3B F7                            CMP     SI,DI 
 0348  74 01                            JZ      EACHCLUS 
 034A  40                               INC     AX 
 034B                           EACHCLUS: 
 034B  89 3E 0025 R                     MOV     [OLDCLUS],DI            ;Save t
				he last cluster found 
 034F  8B F7                            MOV     SI,DI                   ;Get th
				e next cluster 
 0351  E8 0000 E                        CALL    UNPACK 
 0354  FF 06 0025 R                     INC     [OLDCLUS]               ;Bump t
				he old cluster 
 0358  3B 3E 0025 R                     CMP     DI,[OLDCLUS]            ;Are th
				ey the same? 
 035C  75 02                            JNZ     LASTCLUS                ;No -- 
				check for end-of-file 
 035E  EB EB                            JMP     SHORT EACHCLUS          ;Contin
				ue processing 
 0360                           LASTCLUS: 
 0360  81 FF 0FF8                       CMP     DI,0FF8H                ;End-of
				-file? 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-72
Check for extents in specified files                        

 0364  73 03                            JAE     NXTCHK                  ;Yes --
				 go report the results 
 0366  40                               INC     AX                      ;No -- 
				found a fragement 
 0367  EB E2                            JMP     SHORT EACHCLUS          ;Contin
				ue processing 
                                 
 0369                           NXTCHK: 
 0369  0B C0                            OR      AX,AX 
 036B  74 23                            JZ      GETNXT 
 036D  C6 06 009F R 02                  MOV     [FRAGMENT],2            ;Signal
				 that we output at least one file 
 0372  50                               PUSH    AX                      ;Save c
				ount of fragments 
 0373  8B 36 0029 R                     MOV     SI,[FATMAP] 
 0377  46                               INC     SI 
 0378  E8 0000 E                        CALL    PRINTTHISEL2 
 037B  E8 05F2 R                        CALL    DOCRLF 
 037E  BA 0000 E                        MOV     DX,OFFSET DG:CONTAINS   ;Print 
				message 
 0381  E8 05F5 R                        CALL    PRINT 
 0384  5E                               POP     SI                      ;Number
				 of fragments found 
 0385  46                               INC     SI                      ;Number
				 non-contig blocks 
 0386  33 FF                            XOR     DI,DI 
 0388  BB 0000 E                        MOV     BX,OFFSET DG:EXTENTS 
 038B  55                               PUSH    BP 
 038C  E8 0552 R                        CALL    DISP16BITS 
 038F  5D                               POP     BP 
 0390                           GETNXT: 
 0390  B4 12                            MOV     AH,DIR_SEARCH_NEXT             
				 ;Look for the next file 
 0392  EB 9A                            JMP     FRAGCHK 
                                 
 0394                           MSGCHK: 
 0394  80 FC 11                         CMP     AH,DIR_SEARCH_FIRST 
 0397  75 10                            JNZ     FILSPOK 
 0399  BE 005D                          MOV     SI,FCB + 1              ;File n
				ot found error 
 039C  E8 0000 E                        CALL    PRINTTHISEL2 
 039F  E8 05F2 R                        CALL    DOCRLF 
 03A2  BA 0000 E                        MOV     DX,OFFSET DG:OPNERR 
 03A5  E8 05F5 R                        CALL    PRINT                   ;Bad fi
				le spec 
 03A8  C3                               RET 
 03A9                           FILSPOK: 
 03A9  80 3E 009F R 02                  CMP     BYTE PTR [FRAGMENT],2 
 03AE  74 06                            JZ      CDONE 
 03B0  BA 0000 E                        MOV     DX,OFFSET DG:NOEXTENTS 
 03B3  E8 05F5 R                        CALL    PRINT 
 03B6                           CDONE: 
 03B6  C3                               RET 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-73
Check for extents in specified files                        

                                 
 03B7                           FIGREC: 
                                ;Convert cluster number in BX to sector # AH of
				 cluster in DX 
 03B7  C5 3E 0008 R                     LDS     DI,[THISDPB] 
                                ASSUME  DS:NOTHING 
 03BB  8A 4D 05                         MOV     CL,[DI.dpb_cluster_shift] 
 03BE  8B D3                            MOV     DX,BX 
 03C0  4A                               DEC     DX 
 03C1  4A                               DEC     DX 
 03C2  D3 E2                            SHL     DX,CL 
 03C4  0A D4                            OR      DL,AH 
 03C6  03 55 0B                         ADD     DX,[DI.dpb_first_sector] 
 03C9  0E                               PUSH    CS 
 03CA  1F                               POP     DS 
                                ASSUME  DS:DG 
 03CB  C3                               RET 
                                 
                                 
                                SUBTTL  PRINTID - Print Volume ID info 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-74
PRINTID - Print Volume ID info                              

                                PAGE 
 03CC                           PRINTID: 
                                ASSUME  DS:DG 
 03CC  BA 0030 R                        MOV     DX,OFFSET DG:INTERNATVARS 
 03CF  B8 3800                          MOV     AX,INTERNATIONAL SHL 8 
 03D2  CD 21                            INT     21H 
 03D4  C6 06 00B5 R 01                  MOV     [DISPFLG],1             ;Don't 
				sub spaces for leading zeros 
 03D9  BE 0058 R                        MOV     SI,OFFSET DG:FAT + 8 
 03DC  BF 0000 E                        MOV     DI,OFFSET DG:VNAME 
 03DF  B9 000B                          MOV     CX,11 
 03E2  F3/ A4                           REP     MOVSB 
 03E4  BA 0000 E                        MOV     DX,OFFSET DG:IDMES1 
 03E7  E8 05F5 R                        CALL    PRINT                   ;Print 
				ID message 
 03EA  83 C6 0D                         ADD     SI,13 
 03ED  AD                               LODSW                           ;Get da
				te 
 03EE  56                               PUSH    SI 
 03EF  8B D0                            MOV     DX,AX 
 03F1  A1 0030 R                        MOV     AX,[INTERNATVARS.Date_tim_forma
				t] 
 03F4  0B C0                            OR      AX,AX 
 03F6  74 18                            JZ      USPDAT 
 03F8  48                               DEC     AX 
 03F9  74 30                            JZ      EUPDAT 
 03FB  E8 04A1 R                        CALL    P_YR 
 03FE  E8 043D R                        CALL    P_DSEP 
 0401  E8 0476 R                        CALL    P_MON 
 0404  E8 043D R                        CALL    P_DSEP 
 0407  B9 1000                          MOV     CX,1000H                ;Do not
				 supress leading zeroes 
 040A  E8 048E R                        CALL    P_DAY 
 040D  E9 04BB R                        JMP     P_TIME 
                                 
 0410                           USPDAT: 
 0410  E8 0447 R                        CALL    P_MONTH_NAM 
 0413  B9 1110                          MOV     CX,1110H                ;Supres
				s at most 1 leading 0 
 0416  E8 048E R                        CALL    P_DAY 
 0419  52                               PUSH    DX 
 041A  B2 2C                            MOV     DL,',' 
 041C  E8 05DE R                        CALL    PRTCHR 
 041F  B2 20                            MOV     DL,' ' 
 0421  E8 05DE R                        CALL    PRTCHR 
 0424  5A                               POP     DX 
 0425                           PYA: 
 0425  E8 04A1 R                        CALL    P_YR 
 0428  E9 04BB R                        JMP     P_TIME 
                                 
 042B                           EUPDAT: 
 042B  B9 1110                          MOV     CX,1110H                ;Supres
				s at most 1 leading 0 
 042E  E8 048E R                        CALL    P_DAY 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-75
PRINTID - Print Volume ID info                              

 0431  52                               PUSH    DX 
 0432  B2 20                            MOV     DL,' ' 
 0434  E8 05DE R                        CALL    PRTCHR 
 0437  5A                               POP     DX 
 0438  E8 0447 R                        CALL    P_MONTH_NAM 
 043B  EB E8                            JMP     PYA 
                                 
 043D                           P_DSEP: 
 043D  52                               PUSH    DX 
 043E  8A 16 003B R                     MOV     DL,[INTERNATVARS.Date_sep] 
 0442  E8 05DE R                        CALL    PRTCHR 
 0445  5A                               POP     DX 
 0446  C3                               RET 
                                 
 0447                           P_MONTH_NAM: 
 0447  8B C2                            MOV     AX,DX 
 0449  52                               PUSH    DX 
 044A  B1 05                            MOV     CL,5 
 044C  D3 E8                            SHR     AX,CL 
 044E  25 000F                          AND     AX,0FH                  ;Month 
				in AX 
 0451  48                               DEC     AX                      ;Make 0
				 indexed 
 0452  8B C8                            MOV     CX,AX 
 0454  D1 E0                            SHL     AX,1 
 0456  03 C1                            ADD     AX,CX                   ;Mult b
				y 3 chars/mo 
 0458  BE 0000 E                        MOV     SI,OFFSET DG:MONTAB 
 045B  03 F0                            ADD     SI,AX 
 045D  AC                               LODSB 
 045E  8A D0                            MOV     DL,AL 
 0460  E8 05DE R                        CALL    PRTCHR 
 0463  AC                               LODSB 
 0464  8A D0                            MOV     DL,AL 
 0466  E8 05DE R                        CALL    PRTCHR 
 0469  AC                               LODSB 
 046A  8A D0                            MOV     DL,AL 
 046C  E8 05DE R                        CALL    PRTCHR 
 046F  B2 20                            MOV     DL,' ' 
 0471  E8 05DE R                        CALL    PRTCHR 
 0474  5A                               POP     DX 
 0475  C3                               RET 
                                 
 0476                           P_MON: 
 0476  8B F2                            MOV     SI,DX 
 0478  52                               PUSH    DX 
 0479  B1 05                            MOV     CL,5 
 047B  D3 EE                            SHR     SI,CL 
 047D  81 E6 000F                       AND     SI,0FH                  ;Month 
				in SI 
 0481  E8 052F R                        CALL    CONVERT 
 0484  8A D0                            MOV     DL,AL 
 0486  B9 1000                          MOV     CX,1000H                ;Do not
				 supress leading 0 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-76
PRINTID - Print Volume ID info                              

 0489  E8 05B3 R                        CALL    OUTBYTE                 ;Print 
				month 
 048C  5A                               POP     DX 
 048D  C3                               RET 
                                 
 048E                           P_DAY: 
 048E  8B F2                            MOV     SI,DX 
 0490  52                               PUSH    DX 
 0491  51                               PUSH    CX 
 0492  81 E6 001F                       AND     SI,01FH                 ;SI has
				 day 
 0496  E8 052F R                        CALL    CONVERT 
 0499  59                               POP     CX 
 049A  8A D0                            MOV     DL,AL 
 049C  E8 05B3 R                        CALL    OUTBYTE                 ;Print 
				day 
 049F  5A                               POP     DX 
 04A0  C3                               RET 
                                 
 04A1                           P_YR: 
 04A1  8B F2                            MOV     SI,DX 
 04A3  52                               PUSH    DX 
 04A4  B1 09                            MOV     CL,9 
 04A6  D3 EE                            SHR     SI,CL 
 04A8  81 E6 007F                       AND     SI,07FH                 ;SI has
				 raw year 
 04AC  81 C6 07BC                       ADD     SI,1980                 ;Real y
				ear 
 04B0  E8 052F R                        CALL    CONVERT 
 04B3  B9 1000                          MOV     CX,1000H                ;Do not
				 supress leading zeros 
 04B6  E8 05AC R                        CALL    OUTWORD                 ;Print 
				year 
 04B9  5A                               POP     DX 
 04BA  C3                               RET 
                                 
 04BB                           P_TIME: 
 04BB  B2 20                            MOV     DL,' ' 
 04BD  E8 05DE R                        CALL    PRTCHR 
 04C0  5E                               POP     SI 
 04C1  83 C6 FC                         ADD     SI,-4 
 04C4  AD                               LODSW                           ;Get ti
				me 
 04C5  8B F8                            MOV     DI,AX 
 04C7  8B F7                            MOV     SI,DI 
 04C9  B1 0B                            MOV     CL,11 
 04CB  D3 EE                            SHR     SI,CL 
 04CD  81 E6 001F                       AND     SI,01FH                 ;SI has
				 hour 
 04D1  80 3E 0041 R 00                  CMP     [INTERNATVARS.Time_24],0 
 04D6  75 16                            JNZ     ISOK2                   ;24 hou
				r time? 
 04D8  83 FE 0C                         CMP     SI,12 
 04DB  72 0A                            JB      ISOK                    ;Is AM 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-77
PRINTID - Print Volume ID info                              

 04DD  C6 06 0000 E 70                  MOV     [TCHAR],'p' 
 04E2  74 03                            JZ      ISOK                    ;Is 12-
				1p 
 04E4  83 EE 0C                         SUB     SI,12                   ;Is PM 
 04E7                           ISOK: 
 04E7  0B F6                            OR      SI,SI 
 04E9  75 03                            JNZ     ISOK2 
 04EB  BE 000C                          MOV     SI,12                   ;0 is 1
				2a 
 04EE                           ISOK2: 
 04EE  E8 052F R                        CALL    CONVERT 
 04F1  B9 1110                          MOV     CX,1110H                ;Supres
				s at most 1 leading 0 
 04F4  8A D0                            MOV     DL,AL 
 04F6  E8 05B3 R                        CALL    OUTBYTE                 ;Print 
				hour 
 04F9  8A 16 003D R                     MOV     DL,BYTE PTR [INTERNATVARS.Time_
				sep] 
 04FD  E8 05DE R                        CALL    PRTCHR 
 0500  8B F7                            MOV     SI,DI 
 0502  B1 05                            MOV     CL,5 
 0504  D3 EE                            SHR     SI,CL 
 0506  81 E6 003F                       AND     SI,03FH                 ;SI has
				 minute 
 050A  E8 052F R                        CALL    CONVERT 
 050D  B9 1000                          MOV     CX,1000H                ;Do not
				 supress leading zeroes 
 0510  8A D0                            MOV     DL,AL 
 0512  E8 05B3 R                        CALL    OUTBYTE                 ;Print 
				minute 
 0515  8A 16 0000 E                     MOV     DL,[TCHAR] 
 0519  80 3E 0041 R 00                  CMP     [INTERNATVARS.Time_24],0 
 051E  75 03                            JNZ     NOAP                    ;24 hou
				r time, no a or p 
 0520  E8 05DE R                        CALL    PRTCHR                  ;Print 
				a or p 
 0523                           NOAP: 
 0523  BA 0000 E                        MOV     DX,OFFSET DG:IDPOST 
 0526  E8 05F5 R                        CALL    PRINT 
 0529  C6 06 00B5 R 00                  MOV     [DISPFLG],0 
 052E  C3                               RET 
                                 
 052F                           CONVERT: 
 052F  B9 0010                          MOV     CX,16 
 0532  33 C0                            XOR     AX,AX 
 0534                           CNVLOOP: 
 0534  D1 E6                            SHL     SI,1 
 0536  E8 053D R                        CALL    CONVWRD 
 0539  F8                               CLC 
 053A  E2 F8                            LOOP    CNVLOOP 
 053C  C3                               RET 
                                 
                                SUBTTL  Misc Routines - Mostly I/O 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-78
Misc Routines - Mostly I/O                                  

                                PAGE 
 053D                           CONVWRD: 
 053D  12 C0                            ADC     AL,AL 
 053F  27                               DAA 
 0540  86 C4                            XCHG    AL,AH 
 0542  12 C0                            ADC     AL,AL 
 0544  27                               DAA 
 0545  86 C4                            XCHG    AL,AH 
 0547  C3                       RET1:   RET 
                                 
 0548                           UNSCALE: 
 0548  D1 E9                            SHR     CX,1 
 054A  72 FB                            JC      RET1 
 054C  D1 E6                            SHL     SI,1 
 054E  D1 D7                            RCL     DI,1 
 0550  EB F6                            JMP     SHORT UNSCALE 
                                 
 0552                           DISP16BITS: 
 0552  C6 06 00B5 R 01                  MOV     BYTE PTR DISPFLG,1 
 0557  EB 11                            JMP     SHORT DISP32BITS 
                                 
 0559                           DISPCLUS: 
 0559  F7 26 000E R                     MUL     [SSIZE] 
 055D  8A 0E 000D R                     MOV     CL,[CSIZE] 
 0561  32 ED                            XOR     CH,CH 
 0563  8B F0                            MOV     SI,AX 
 0565  8B FA                            MOV     DI,DX 
 0567  E8 0548 R                        CALL    UNSCALE 
                                 
 056A                           DISP32BITS: 
 056A  55                               PUSH    BP 
 056B  53                               PUSH    BX 
 056C  33 C0                            XOR     AX,AX 
 056E  8B D8                            MOV     BX,AX 
 0570  8B E8                            MOV     BP,AX 
 0572  B9 0020                          MOV     CX,32 
 0575                           CONVLP: 
 0575  D1 E6                            SHL     SI,1 
 0577  D1 D7                            RCL     DI,1 
 0579  95                               XCHG    AX,BP 
 057A  E8 053D R                        CALL    CONVWRD 
 057D  95                               XCHG    AX,BP 
 057E  93                               XCHG    AX,BX 
 057F  E8 053D R                        CALL    CONVWRD 
 0582  93                               XCHG    AX,BX 
 0583  14 00                            ADC     AL,0 
 0585  E2 EE                            LOOP    CONVLP 
                                        ; Conversion complete 
 0587  B9 1310                          MOV     CX,1310H        ;Print 3-digit 
				number with 2 leading blanks 
 058A  80 3E 00B5 R 00                  CMP     BYTE PTR DISPFLG,0 
 058F  75 0B                            JNZ     FOURDIG 
 0591  B9 1810                          MOV     CX,1810H        ;Print 8-digit 
				number with 2 leading blanks 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-79
Misc Routines - Mostly I/O                                  

 0594  92                               XCHG    DX,AX 
 0595  E8 05C2 R                        CALL    DIGIT 
 0598  93                               XCHG    AX,BX 
 0599  E8 05AC R                        CALL    OUTWORD 
 059C                           FOURDIG: 
 059C  8B C5                            MOV     AX,BP 
 059E  E8 05AC R                        CALL    OUTWORD 
 05A1  C6 06 00B5 R 00                  MOV     BYTE PTR DISPFLG,0 
 05A6  5A                               POP     DX 
 05A7  E8 05F5 R                        CALL    PRINT 
 05AA  5D                               POP     BP 
 05AB  C3                               RET 
                                 
 05AC                           OUTWORD: 
 05AC  50                               PUSH    AX 
 05AD  8A D4                            MOV     DL,AH 
 05AF  E8 05B3 R                        CALL    OUTBYTE 
 05B2  5A                               POP     DX 
 05B3                           OUTBYTE: 
 05B3  8A F2                            MOV     DH,DL 
 05B5  D0 EA                            SHR     DL,1 
 05B7  D0 EA                            SHR     DL,1 
 05B9  D0 EA                            SHR     DL,1 
 05BB  D0 EA                            SHR     DL,1 
 05BD  E8 05C2 R                        CALL    DIGIT 
 05C0  8A D6                            MOV     DL,DH 
 05C2                           DIGIT: 
 05C2  80 E2 0F                         AND     DL,0FH 
 05C5  74 02                            JZ      BLANKZER 
 05C7  B1 00                            MOV     CL,0 
 05C9                           BLANKZER: 
 05C9  FE CD                            DEC     CH 
 05CB  22 CD                            AND     CL,CH 
 05CD  80 CA 30                         OR      DL,30H 
 05D0  2A D1                            SUB     DL,CL 
 05D2  80 3E 00B5 R 00                  CMP     BYTE PTR DISPFLG,0 
 05D7  74 05                            JZ      PRTCHR 
 05D9  80 FA 30                         CMP     DL,30H 
 05DC  7C 04                            JL      RET2 
 05DE                           PRTCHR: 
 05DE  B4 02                            MOV     AH,STD_CON_OUTPUT 
 05E0  CD 21                            INT     21H 
 05E2  C3                       RET2:   RET 
                                 
 05E3                           PRINTCNT: 
 05E3  AC                               LODSB 
 05E4  8A D0                            MOV     DL,AL 
 05E6  CD 21                            INT     21H 
 05E8  E2 F9                            LOOP    PRINTCNT 
 05EA  C3                               RET 
                                 
 05EB                           EPRINT: 
 05EB  E8 0000 E                        CALL    CHECKERR 
 05EE  75 09                            JNZ     RET$1 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-80
Misc Routines - Mostly I/O                                  

 05F0  EB 03                            JMP     SHORT PRINT 
                                 
 05F2                           DOCRLF: 
 05F2  BA 0000 E                        MOV     DX,OFFSET DG:CRLF 
 05F5                           PRINT: 
 05F5  B4 09                            MOV     AH,STD_CON_STRING_OUTPUT 
 05F7  CD 21                            INT     21H 
 05F9  C3                       RET$1:  RET 
                                 
 05FA                           DOTCOMBMES: 
 05FA  80 3E 00BB R 00                  CMP     [NOISY],0 
 05FF  74 12                            JZ      SUBERRP 
 0601  52                               PUSH    DX 
 0602  E8 0000 E                        CALL    PRINTCURRDIRERR 
 0605  BA 0000 E                        MOV     DX,OFFSET DG:CENTRY 
 0608  E8 05EB R                        CALL    EPRINT 
 060B  5A                               POP     DX 
 060C  E8 05EB R                        CALL    EPRINT 
 060F  E8 05F2 R                        CALL    DOCRLF 
 0612  C3                               RET 
                                 
 0613                           SUBERRP: 
 0613  B0 01                            MOV     AL,1 
 0615  86 06 009D R                     XCHG    AL,BYTE PTR [ERRSUB] 
 0619  3C 00                            CMP     AL,0 
 061B  75 0C                            JNZ     RET32 
 061D  BE 007F R                        MOV     SI,OFFSET DG:NUL 
 0620  E8 0000 E                        CALL    PRINTCURRDIRERR 
 0623  BA 0000 E                        MOV     DX,OFFSET DG:BADSUBDIR 
 0626  E8 05EB R                        CALL    EPRINT 
 0629  C3                       RET32:  RET 
                                 
                                 
 062A                           FCB_TO_ASCZ:                            ;Conver
				t DS:SI to ASCIIZ ES:DI 
 062A  B9 0008                          MOV     CX,8 
 062D                           MAINNAME: 
 062D  AC                               LODSB 
 062E  3C 20                            CMP     AL,' ' 
 0630  74 01                            JZ      SKIPSPC 
 0632  AA                               STOSB 
 0633                           SKIPSPC: 
 0633  E2 F8                            LOOP    MAINNAME 
 0635  AC                               LODSB 
 0636  3C 20                            CMP     AL,' ' 
 0638  74 12                            JZ      GOTNAME 
 063A  8A E0                            MOV     AH,AL 
 063C  B0 2E                            MOV     AL,'.' 
 063E  AA                               STOSB 
 063F  86 C4                            XCHG    AL,AH 
 0641  AA                               STOSB 
 0642  B1 02                            MOV     CL,2 
 0644                           EXTNAME: 
 0644  AC                               LODSB 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Page     1-81
Misc Routines - Mostly I/O                                  

 0645  3C 20                            CMP     AL,' ' 
 0647  74 03                            JZ      GOTNAME 
 0649  AA                               STOSB 
 064A  E2 F8                            LOOP    EXTNAME 
                                 
 064C                           GOTNAME: 
 064C  32 C0                            XOR     AL,AL 
 064E  AA                               STOSB 
 064F  C3                               RET 
                                 
 0650                           CODE    ENDS 
                                        END     CHKDSK 

Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Symbols-4
                                                             

SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016

Segments and Groups:

                N a m e         	Size	Align	Combine Class

DG . . . . . . . . . . . . . . .  	GROUP
  CODE . . . . . . . . . . . . .  	0650	PARA	PUBLIC	
  CONST  . . . . . . . . . . . .  	010E	BYTE	PUBLIC	
  DATA . . . . . . . . . . . . .  	0050	WORD	PUBLIC	

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Symbols-5
                                                             

ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALLDONE  . . . . . . . . . . . .  	L NEAR	0317	CODE
ALLDRV . . . . . . . . . . . . .  	L BYTE 	0033	CONST	Global
ALLFILE  . . . . . . . . . . . .  	L BYTE 	002C	CONST	Global
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Number	0000	
AMDONE . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	

BADCD  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADDRV . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADDRVM  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADDRVM2 . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADIDBYT . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADRDMES . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADREAD_POST . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADREAD_PRE  . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADSIZ . . . . . . . . . . . . .  	L WORD 	00AD	CONST	Global
BADSUBDIR  . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADVER . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BLANKZER . . . . . . . . . . . .  	L NEAR	05C9	CODE
BUFINSIZ . . . . . . . . . . . .  	Number	0010	

CDONE  . . . . . . . . . . . . .  	L NEAR	03B6	CODE
CENTRY . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
CERROR . . . . . . . . . . . . .  	L NEAR	0151	CODE
CERROR2  . . . . . . . . . . . .  	L NEAR	0158	CODE
CERROR2J . . . . . . . . . . . .  	L NEAR	01C9	CODE
CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHECKERR . . . . . . . . . . . .  	L NEAR	0000	CODE	External
CHECKFILES . . . . . . . . . . .  	L NEAR	031C	CODE	Global
CHKCROSS . . . . . . . . . . . .  	L NEAR	0000	CODE	External
CHKDSK . . . . . . . . . . . . .  	L NEAR	0100	CODE
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Symbols-6
                                                             

CHKMAP . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHSTRT . . . . . . . . . . . . .  	L NEAR	010A	CODE
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
CNVLOOP  . . . . . . . . . . . .  	L NEAR	0534	CODE
CONBUF . . . . . . . . . . . . .  	L BYTE 	00FD	CONST	Global
CONTAINS . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
CONTCH . . . . . . . . . . . . .  	L DWORD	0004	DATA	Global
CONVERT  . . . . . . . . . . . .  	L NEAR	052F	CODE
CONVLP . . . . . . . . . . . . .  	L NEAR	0575	CODE
CONVWRD  . . . . . . . . . . . .  	L NEAR	053D	CODE
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CRLF . . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
CROSSCNT . . . . . . . . . . . .  	L WORD 	00B6	CONST	Global
CSIZE  . . . . . . . . . . . . .  	L BYTE 	000D	DATA	Global
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
CURRISROOT . . . . . . . . . . .  	L NEAR	01E7	CODE
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DDOTENT  . . . . . . . . . . . .  	L BYTE 	0090	CONST	Global
DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Symbols-7
                                                             

DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DIGIT  . . . . . . . . . . . . .  	L NEAR	05C2	CODE
DIRBUF . . . . . . . . . . . . .  	L BYTE 	0000	CONST	Global
DIRCHAR  . . . . . . . . . . . .  	L BYTE 	007E	CONST	Global
DIRCNT . . . . . . . . . . . . .  	L WORD 	00A1	CONST	Global
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRPROC  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DIRSIZ . . . . . . . . . . . . .  	L WORD 	00A3	CONST	Global
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIRTYFAT . . . . . . . . . . . .  	L BYTE 	00A0	CONST	Global
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISK_RESET . . . . . . . . . . .  	Number	000D	
DISP16BITS . . . . . . . . . . .  	L NEAR	0552	CODE	Global
DISP32BITS . . . . . . . . . . .  	L NEAR	056A	CODE	Global
DISPCLUS . . . . . . . . . . . .  	L NEAR	0559	CODE	Global
DISPFLG  . . . . . . . . . . . .  	L BYTE 	00B5	CONST
DOCRLF . . . . . . . . . . . . .  	L NEAR	05F2	CODE	Global
DOFIX  . . . . . . . . . . . . .  	L BYTE 	00BA	CONST	Global
DONE . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DOSVER . . . . . . . . . . . . .  	Number	00D3	
DOSVER_HIGH  . . . . . . . . . .  	Number	020B	
DOSVER_LOW . . . . . . . . . . .  	Number	0136	
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DOTCOMBMES . . . . . . . . . . .  	L NEAR	05FA	CODE	Global
DOTENT . . . . . . . . . . . . .  	L BYTE 	0085	CONST	Global
DOTMES . . . . . . . . . . . . .  	L BYTE 	0083	CONST	Global
DOTSNOGOOD . . . . . . . . . . .  	L BYTE 	0022	DATA	Global
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DRVCHAR  . . . . . . . . . . . .  	Number	003A	
DRVCHK . . . . . . . . . . . . .  	L NEAR	018C	CODE
DRVERR . . . . . . . . . . . . .  	L NEAR	014E	CODE
DRVISOK  . . . . . . . . . . . .  	L NEAR	01CB	CODE
DSIZE  . . . . . . . . . . . . .  	L WORD 	0010	DATA	Global
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

EACHCLUS . . . . . . . . . . . .  	L NEAR	034B	CODE
ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
EPRINT . . . . . . . . . . . . .  	L NEAR	05EB	CODE	Global
ERRCNT . . . . . . . . . . . . .  	L BYTE 	002D	DATA	Global
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Symbols-8
                                                             

ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
ERRSUB . . . . . . . . . . . . .  	L WORD 	009D	CONST	Global
EUPDAT . . . . . . . . . . . . .  	L NEAR	042B	CODE
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	
EXTENTS  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
EXTNAME  . . . . . . . . . . . .  	L NEAR	0644	CODE

FALSE  . . . . . . . . . . . . .  	Number	0000	
FAT  . . . . . . . . . . . . . .  	L WORD 	0050	DATA	Global
FATAL  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
FATMAP . . . . . . . . . . . . .  	L WORD 	0029	DATA	Global
FATPRI . . . . . . . . . . . . .  	Number	001E	
FCB  . . . . . . . . . . . . . .  	Number	005C	
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FCB_TO_ASCZ  . . . . . . . . . .  	L NEAR	062A	CODE	Global
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Symbols-9
                                                             

FIGREC . . . . . . . . . . . . .  	L NEAR	03B7	CODE	Global
FILCNT . . . . . . . . . . . . .  	L WORD 	00A5	CONST	Global
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILECHK  . . . . . . . . . . . .  	L NEAR	015F	CODE
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILPERPROC . . . . . . . . . . .  	Number	0014	
FILSIZ . . . . . . . . . . . . .  	L WORD 	00A7	CONST	Global
FILSPOK  . . . . . . . . . . . .  	L NEAR	03A9	CODE
FINDCHAIN  . . . . . . . . . . .  	L NEAR	0000	CODE	External
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FIXMFLG  . . . . . . . . . . . .  	L BYTE 	009C	CONST	Global
FOURDIG  . . . . . . . . . . . .  	L NEAR	059C	CODE
FRAGCHK  . . . . . . . . . . . .  	L NEAR	032E	CODE
FRAGMENT . . . . . . . . . . . .  	L BYTE 	009F	CONST	Global
FREEPRI  . . . . . . . . . . . .  	Number	0000	

GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GETNXT . . . . . . . . . . . . .  	L NEAR	0390	CODE
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GOTBADDOS  . . . . . . . . . . .  	L NEAR	011B	CODE
GOTNAME  . . . . . . . . . . . .  	L NEAR	064C	CODE

HARDCH . . . . . . . . . . . . .  	L DWORD	0000	DATA	Global
HAVFIX . . . . . . . . . . . . .  	L BYTE 	00B9	CONST	Global
HEADER . . . . . . . . . . . . .  	L BYTE 	0102	CODE
HECODE . . . . . . . . . . . . .  	L BYTE 	009B	CONST	Global
HIDCNT . . . . . . . . . . . . .  	L WORD 	00A9	CONST	Global
HIDSIZ . . . . . . . . . . . . .  	L WORD 	00AB	CONST	Global

IDMES1 . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
IDOK . . . . . . . . . . . . . .  	L NEAR	02F0	CODE
IDPOST . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Symbols-10
                                                             

INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNATVARS . . . . . . . . . .  	L 0018	0030	DATA
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_23 . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
INT_24 . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
ISCROSS  . . . . . . . . . . . .  	L BYTE 	0024	DATA	Global
ISOK . . . . . . . . . . . . . .  	L NEAR	04E7	CODE
ISOK2  . . . . . . . . . . . . .  	L NEAR	04EE	CODE

KEEP_PROCESS . . . . . . . . . .  	Number	0031	

LASTCLUS . . . . . . . . . . . .  	L NEAR	0360	CODE
LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LCLUS  . . . . . . . . . . . . .  	L WORD 	00B3	CONST	Global
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MAINNAME . . . . . . . . . . . .  	L NEAR	062D	CODE
MCLUS  . . . . . . . . . . . . .  	L WORD 	0012	DATA	Global
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MONTAB . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
MSGCHK . . . . . . . . . . . . .  	L NEAR	0394	CODE

NAMBUF . . . . . . . . . . . . .  	L BYTE 	0014	DATA	Global	Length = 000E
NOAP . . . . . . . . . . . . . .  	L NEAR	0523	CODE
NOEXTENTS  . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NOISY  . . . . . . . . . . . . .  	L BYTE 	00BB	CONST	Global
NORETRY1 . . . . . . . . . . . .  	L NEAR	02D3	CODE
NOTVOLID . . . . . . . . . . . .  	L NEAR	023F	CODE
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Symbols-11
                                                             

NUL  . . . . . . . . . . . . . .  	L BYTE 	007F	CONST	Global
NXTCHK . . . . . . . . . . . . .  	L NEAR	0369	CODE

OEM  . . . . . . . . . . . . . .  	Text  		
OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OKDOS  . . . . . . . . . . . . .  	L NEAR	0121	CODE
OLDCLUS  . . . . . . . . . . . .  	L WORD 	0025	DATA
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
OPNERR . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
ORPHCNT  . . . . . . . . . . . .  	L WORD 	00AF	CONST	Global
ORPHEXT  . . . . . . . . . . . .  	L BYTE 	0061	CONST	Global
ORPHFCB  . . . . . . . . . . . .  	L BYTE 	0058	CONST	Global
ORPHSIZ  . . . . . . . . . . . .  	L WORD 	00B1	CONST	Global
OUTBYTE  . . . . . . . . . . . .  	L NEAR	05B3	CODE
OUTWORD  . . . . . . . . . . . .  	L NEAR	05AC	CODE

PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PARSTR . . . . . . . . . . . . .  	L BYTE 	0080	CONST	Global
PRINT  . . . . . . . . . . . . .  	L NEAR	05F5	CODE	Global
PRINTCNT . . . . . . . . . . . .  	L NEAR	05E3	CODE
PRINTCURRDIRERR  . . . . . . . .  	L NEAR	0000	CODE	External
PRINTID  . . . . . . . . . . . .  	L NEAR	03CC	CODE
PRINTTHISEL2 . . . . . . . . . .  	L NEAR	0000	CODE	External
PROMPTYN . . . . . . . . . . . .  	L NEAR	0000	CODE	External
PRTCHR . . . . . . . . . . . . .  	L NEAR	05DE	CODE	Global
PYA  . . . . . . . . . . . . . .  	L NEAR	0425	CODE
P_DAY  . . . . . . . . . . . . .  	L NEAR	048E	CODE
P_DSEP . . . . . . . . . . . . .  	L NEAR	043D	CODE
P_MON  . . . . . . . . . . . . .  	L NEAR	0476	CODE
P_MONTH_NAM  . . . . . . . . . .  	L NEAR	0447	CODE
P_TIME . . . . . . . . . . . . .  	L NEAR	04BB	CODE
P_YR . . . . . . . . . . . . . .  	L NEAR	04A1	CODE

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
RDLOOP . . . . . . . . . . . . .  	L NEAR	02A0	CODE
RDOK . . . . . . . . . . . . . .  	L NEAR	02D9	CODE
RDSKERR  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Symbols-12
                                                             

RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
REPORT . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
RET$1  . . . . . . . . . . . . .  	L NEAR	05F9	CODE
RET1 . . . . . . . . . . . . . .  	L NEAR	0547	CODE
RET2 . . . . . . . . . . . . . .  	L NEAR	05E2	CODE
RET32  . . . . . . . . . . . . .  	L NEAR	0629	CODE
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
ROOTSTR  . . . . . . . . . . . .  	L BYTE 	007E	CONST
RPRI . . . . . . . . . . . . . .  	Number	0006	

SECBUF . . . . . . . . . . . . .  	L WORD 	002B	DATA	Global
SECONDPASS . . . . . . . . . . .  	L BYTE 	00B8	CONST	Global
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETDIRLP . . . . . . . . . . . .  	L NEAR	01DF	CODE
SETDPB . . . . . . . . . . . . .  	Number	0053	
SETDSK . . . . . . . . . . . . .  	L NEAR	01A8	CODE
SETSTACK . . . . . . . . . . . .  	L NEAR	0140	CODE
SETSWITCH  . . . . . . . . . . .  	L NEAR	0000	CODE	External
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SKIPSPC  . . . . . . . . . . . .  	L NEAR	0633	CODE
SLASHOK  . . . . . . . . . . . .  	L NEAR	0177	CODE
SRFCBPT  . . . . . . . . . . . .  	L WORD 	0027	DATA	Global
SSIZE  . . . . . . . . . . . . .  	L WORD 	000E	DATA	Global
STACKLIM . . . . . . . . . . . .  	L WORD 	002E	DATA	Global
STACKOK  . . . . . . . . . . . .  	L NEAR	0144	CODE
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:34:48
CHKDSK - MS-DOS Disk consistancy checker                    Symbols-13
                                                             

STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
SUBERRP  . . . . . . . . . . . .  	L NEAR	0613	CODE	Global
SWITCHAR . . . . . . . . . . . .  	L BYTE 	007D	CONST	Global

TCHAR  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
THISDPB  . . . . . . . . . . . .  	L DWORD	0008	DATA	Global
TRUE . . . . . . . . . . . . . .  	Number	FFFF	

UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
UNPACK . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
UNSCALE  . . . . . . . . . . . .  	L NEAR	0548	CODE
USERDEV  . . . . . . . . . . . .  	L BYTE 	000C	DATA	Global
USERDIR  . . . . . . . . . . . .  	L BYTE 	00BC	CONST	Global
USERIDOPER . . . . . . . . . . .  	Number	005E	
USPDAT . . . . . . . . . . . . .  	L NEAR	0410	CODE

VER  . . . . . . . . . . . . . .  	Text  		
VNAME  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
VOLID  . . . . . . . . . . . . .  	L BYTE 	0000	CONST
VOLNAM . . . . . . . . . . . . .  	L BYTE 	0007	CONST

WAIT . . . . . . . . . . . . . .  	Number	004D	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	

ZEROTRUNC  . . . . . . . . . . .  	L BYTE 	0023	DATA	Global


   2170 Source  Lines
   2232 Total   Lines
    665 Symbols

  17514 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
