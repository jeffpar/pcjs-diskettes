Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Page     1-1
                                                            

                                TITLE   COMMAND COPY routines. 
                                 
                             C          INCLUDE COMSW.ASM 
                             C  ; Use the following booleans to set assembly fl
				ags 
 = 0000                      C  FALSE   EQU     0 
 = FFFF                      C  TRUE    EQU     NOT FALSE 
                             C   
                             C  ENDIF 
                             C   
 =                           C  IBMVER  EQU     IBM  	; Switch to build IBM ver
				sion of Command 
 = FFFF                      C  MSVER   EQU     NOT IBM ; Switch to build MS-DO
				S version of Command 
                             C   
 =                           C  HIGHMEM EQU     FALSE   ; Run resident part abo
				ve transient (high memory) 
 =                           C  KANJI   EQU     FALSE   ; Support for dual byte
				 Microsoft KANJI standard 
 =                           C  IBMJAPAN        EQU     FALSE   ;MUST BE TRUE (
				along with IBM and KANJI) 
                                 
                                 
                                .list 
                                .cref 
                                 
                             C          INCLUDE COMEQU.ASM 
                             C  ;************************************* 
                             C  ; COMMAND EQUs which are not switch dependant 
                             C   
                             C  IFDEF   IBM 
                             C          INCLUDE IFEQU.ASM 
                             C  ;************************************* 
                             C  ; COMMAND EQUs which are switch dependant 
                             C   
                             C  ENDIF 
                             C   
                             C  ENDIF 
                             C   
                             C   
 = 003E                      C  SYM     EQU     ">" 
                             C   
 = 0017                      C  LINPERPAG       EQU     23 
 = 0001                      C  NORMPERLIN      EQU     1 
 = 0005                      C  WIDEPERLIN      EQU     5 
 = 0080                      C  COMBUFLEN       EQU     128     ; Length of com
				mmand buffer 
                             C   
 = 003A                      C  DRVCHAR         EQU     ":" 
                             C   
 = 005C                      C  FCB     EQU     5CH 
                             C   
                             C  VARSTRUC        STRUC 
 0000  ??                    C  ISDIR   DB      ? 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Page     1-2
DEVICE TABLE AND SRH DEFINITION                             

 0001  ??                    C  SIZ     DB      ? 
 0002  ????                  C  TTAIL   DW      ? 
 0004  ??                    C  INFO    DB      ? 
 0005  0054[                 C  BUF     DB      DIRSTRLEN + 20 DUP (?) 
            ??               C  
                         ]   C  
                             C  
 0059                        C  VARSTRUC        ENDS 
                             C   
 = 0001                      C  WSWITCH EQU     1               ; Wide display 
				during DIR 
 = 0002                      C  PSWITCH EQU     2               ; Pause (or Pag
				e) mode during DIR 
 = 0004                      C  ASWITCH EQU     4               ; ASCII mode du
				ring COPY 
 = 0008                      C  BSWITCH EQU     8               ; Binary mode d
				uring COPY 
 = 0010                      C  VSWITCH EQU     10H             ; Verify switch
				 
 = 8000                      C  GOTSWITCH EQU   8000H           ; Meta switch s
				et if switch character encountered 
                                 
                                 
 0000                           DATARES SEGMENT PUBLIC 
                                        EXTRN   VERVAL:WORD 
 0000                           DATARES ENDS 
                                 
 0000                           TRANDATA        SEGMENT PUBLIC 
                                        EXTRN   BADARGS:BYTE,BADCD:BYTE,BADSWT:
				BYTE,COPIED_PRE:BYTE 
                                        EXTRN   COPIED_POST:BYTE 
                                        EXTRN   INBDEV:BYTE,OVERWR:BYTE,FULDIR:
				BYTE,LOSTERR:BYTE 
                                        EXTRN   NOSPACE:BYTE,DEVWMES:BYTE,NOTFN
				D:BYTE 
 0000                           TRANDATA        ENDS 
                                 
 0000                           TRANSPACE       SEGMENT PUBLIC 
                                        EXTRN   MELCOPY:BYTE,SRCPT:WORD,MELSTAR
				T:WORD,SCANBUF:BYTE 
                                        EXTRN   DESTFCB2:BYTE,SDIRBUF:BYTE,SRCT
				AIL:WORD,CFLAG:BYTE 
                                        EXTRN   NXTADD:WORD,DESTCLOSED:BYTE,ALL
				SWITCH:WORD,ARGC:BYTE 
                                        EXTRN   PLUS:BYTE,BINARY:BYTE,ASCII:BYT
				E,FILECNT:WORD 
                                        EXTRN   WRITTEN:BYTE,CONCAT:BYTE,DESTBU
				F:BYTE,SRCBUF:BYTE 
                                        EXTRN   SDIRBUF:BYTE,DIRBUF:BYTE,DESTFC
				B:BYTE,FRSTSRCH:BYTE 
                                        EXTRN   FIRSTDEST:BYTE,DESTISDIR:BYTE,D
				ESTSWITCH:WORD,STARTEL:WORD 
                                        EXTRN   DESTTAIL:WORD,DESTSIZ:BYTE,DEST
				INFO:BYTE,INEXACT:BYTE 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Page     1-3
DEVICE TABLE AND SRH DEFINITION                             

                                        EXTRN   CURDRV:BYTE,DESTVARS:BYTE,RESSE
				G:WORD,SRCSIZ:BYTE 
                                        EXTRN   SRCINFO:BYTE,SRCVARS:BYTE,USERD
				IR1:BYTE,NOWRITE:BYTE 
                                        EXTRN   RDEOF:BYTE,SRCHAND:WORD,CPDATE:
				WORD,CPTIME:WORD 
                                        EXTRN   SRCISDEV:BYTE,BYTCNT:WORD,TPA:W
				ORD,TERMREAD:BYTE 
                                        EXTRN   DESTHAND:WORD,DESTISDEV:BYTE,DI
				RCHAR:BYTE 
 0000                           TRANSPACE       ENDS 
                                 
                                 
                                ; *********************************************
				***** 
                                ; COPY CODE 
                                ; 
                                 
 0000                           TRANCODE        SEGMENT PUBLIC BYTE 
                                 
                                        EXTRN   RESTUDIR:NEAR,CERROR:NEAR,SWITC
				H:NEAR,DISP32BITS:NEAR 
                                        EXTRN   PRINT:NEAR,TCOMMAND:NEAR,ZPRINT
				:NEAR,ONESPC:NEAR 
                                        EXTRN   RESTUDIR1:NEAR,FCB_TO_ASCZ:NEAR
				,CRLF2:NEAR,SAVUDIR1:NEAR 
                                        EXTRN   SETREST1:NEAR,BADCDERR:NEAR,STR
				COMP:NEAR,DELIM:NEAR 
                                        EXTRN   UPCONV:NEAR,PATHCHRCMP:NEAR,SCA
				NOFF:NEAR 
                                 
                                        EXTRN   CPARSE:NEAR 
                                 
                                        EXTRN   SEARCH:NEAR,SEARCHNEXT:NEAR,DOC
				OPY:NEAR,CLOSEDEST:NEAR 
                                        EXTRN   FLSHFIL:NEAR,SETASC:NEAR,BUILDN
				AME:NEAR,COPERR:NEAR 
                                 
                                        PUBLIC  COPY,BUILDPATH,COMPNAME,ENDCOPY
				 
                                 
                                 
                                ASSUME  CS:TRANGROUP,DS:TRANGROUP,ES:TRANGROUP,
				SS:NOTHING 
                                 
 0000                           DOMELCOPY: 
 0000  80 3E 0000 E FF                  cmp     [MELCOPY],0FFH 
 0005  74 0D                            jz      CONTMEL 
 0007  8B 36 0000 E                     mov     SI,[SRCPT] 
 000B  89 36 0000 E                     mov     [MELSTART],si 
 000F  C6 06 0000 E FF                  mov     [MELCOPY],0FFH 
 0014                           CONTMEL: 
 0014  33 ED                            xor     BP,BP 
 0016  8B 36 0000 E                     mov     si,[SRCPT] 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Page     1-4
DEVICE TABLE AND SRH DEFINITION                             

 001A  B3 2B                            mov     bl,'+' 
 001C                           SCANSRC2: 
 001C  BF 0000 E                        mov     di,OFFSET TRANGROUP:SCANBUF 
 001F  E8 0000 E                        call    CPARSE 
 0022  F6 C7 80                         test    bh,80H 
 0025  74 23                            jz      NEXTMEL                 ; Go ba
				ck to start 
 0027  F6 C7 01                         test    bh,1                    ; Switc
				h ? 
 002A  75 F0                            jnz     SCANSRC2                ; Yes 
 002C  E8 0223 R                        call    SOURCEPROC 
 002F  E8 0000 E                        call    RESTUDIR1 
 0032  BF 0000 E                        mov     di,OFFSET TRANGROUP:DESTFCB2 
 0035  B8 2900                          mov     ax,PARSE_FILE_DESCRIPTOR SHL 8 
 0038  CD 21                            INT     int_command 
 003A  BB 0001 E                        mov     bx,OFFSET TRANGROUP:SDIRBUF + 1
				 
 003D  BE 0001 E                        mov     si,OFFSET TRANGROUP:DESTFCB2 + 
				1 
 0040  8B 3E 0000 E                     mov     di,[SRCTAIL] 
 0044  E8 0000 E                        call    BUILDNAME 
 0047  E9 02E0 R                        jmp     MELDO 
                                 
                                 
 004A                           NEXTMEL: 
 004A  E8 0000 E                        call    CLOSEDEST 
 004D  33 C0                            xor     ax,ax 
 004F  A2 0000 E                        mov     [CFLAG],al 
 0052  A3 0000 E                        mov     [NXTADD],ax 
 0055  A2 0000 E                        mov     [DESTCLOSED],al 
 0058  8B 36 0000 E                     mov     si,[MELSTART] 
 005C  89 36 0000 E                     mov     [SRCPT],si 
 0060  E8 0000 E                        call    SEARCHNEXT 
 0063  74 03                            jz      SETNMELJ 
 0065  E9 01F5 R                        jmp     ENDCOPY2 
 0068                           SETNMELJ: 
 0068  E9 02C6 R                        jmp     SETNMEL 
                                 
 006B                           COPY: 
                                ; First order of buisness is to find out about 
				the destination 
                                ASSUME  DS:TRANGROUP,ES:TRANGROUP 
 006B  33 C0                            xor     ax,ax 
 006D  A3 0000 E                        mov     [ALLSWITCH],AX          ; no sw
				itches 
 0070  A2 0000 E                        mov     [ARGC],al               ; no ar
				guments 
 0073  A2 0000 E                        mov     [PLUS],al               ; no co
				ncatination 
 0076  A2 0000 E                        mov     [BINARY],al             ; Binar
				y not specifically specified 
 0079  A2 0000 E                        mov     [ASCII],al              ; ASCII
				 not specifically specified 
 007C  A3 0000 E                        mov     [FILECNT],ax            ; No fi
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Page     1-5
DEVICE TABLE AND SRH DEFINITION                             

				les yet 
 007F  A2 0000 E                        mov     [WRITTEN],al            ; Nothi
				ng written yet 
 0082  A2 0000 E                        mov     [CONCAT],al             ; No co
				ncatination 
 0085  A2 0000 E                        mov     [MELCOPY],al            ; Not a
				 Mel Hallerman copy 
 0088  A3 0000 E                        mov     word ptr [SCANBUF],ax   ; Init 
				buffer 
 008B  A3 0000 E                        mov     word ptr [DESTBUF],ax   ; Init 
				buffer 
 008E  A3 0000 E                        mov     word ptr [SRCBUF],ax    ; Init 
				buffer 
 0091  A3 0000 E                        mov     word ptr [SDIRBUF],ax   ; Init 
				buffer 
 0094  A3 0000 E                        mov     word ptr [DIRBUF],ax    ; Init 
				buffer 
 0097  A3 0000 E                        mov     word ptr [DESTFCB],ax   ; Init 
				buffer 
 009A  48                               dec     ax 
 009B  A2 0000 E                        mov     [FRSTSRCH],al           ; First
				 search call 
 009E  A2 0000 E                        mov     [FIRSTDEST],al          ; First
				 time 
 00A1  A2 0000 E                        mov     [DESTISDIR],al          ; Don't
				 know about dest 
 00A4  BE 0081                          mov     si,81H 
 00A7  B3 2B                            mov     bl,'+'                  ; inclu
				de '+' as a delimiter 
 00A9                           DESTSCAN: 
 00A9  33 ED                            xor     bp,bp                   ; no sw
				itches 
 00AB  BF 0000 E                        mov     di,offset trangroup:SCANBUF 
 00AE  E8 0000 E                        call    CPARSE 
 00B1  9C                               PUSHF                           ; save 
				flags 
 00B2  F6 C7 80                         test    bh,80H                  ; A '+'
				 argument? 
 00B5  74 05                            jz      NOPLUS                  ; no 
 00B7  C6 06 0000 E 01                  mov     [PLUS],1                ; yes 
 00BC                           NOPLUS: 
 00BC  9D                               POPF                            ; get f
				lags back 
 00BD  72 3D                            jc      CHECKDONE               ; Hit C
				R? 
 00BF  F6 C7 01                         test    bh,1                    ; Switc
				h? 
 00C2  74 0A                            jz      TESTP2                  ; no 
 00C4  09 2E 0000 E                     or      [DESTSWITCH],BP         ; Yes, 
				assume destination 
 00C8  09 2E 0000 E                     or      [ALLSWITCH],BP          ; keep 
				tabs on all switches 
 00CC  EB DB                            jmp     short DESTSCAN 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Page     1-6
DEVICE TABLE AND SRH DEFINITION                             

 00CE                           TESTP2: 
 00CE  F6 C7 80                         test    bh,80H                  ; Plus?
				 
 00D1  75 04                            jnz     GOTPLUS                 ; Yes, 
				not a separate arg 
 00D3  FE 06 0000 E                     inc     [ARGC]                  ; found
				 a real arg 
 00D7                           GOTPLUS: 
 00D7  56                               push    SI 
 00D8  A1 0000 E                        mov     ax,[STARTEL] 
 00DB  BE 0000 E                        mov     SI,offset trangroup:SCANBUF ; A
				djust to copy 
 00DE  2B C6                            sub     ax,SI 
 00E0  BF 0000 E                        mov     DI,offset trangroup:DESTBUF 
 00E3  03 C7                            add     ax,DI 
 00E5  A3 0000 E                        mov     [DESTTAIL],AX 
 00E8  88 0E 0000 E                     mov     [DESTSIZ],cl            ; Save 
				its size 
 00EC  41                               inc     cx                      ; Inclu
				de the NUL 
 00ED  F3/ A4                           rep     movsb                   ; Save 
				potential destination 
 00EF  88 3E 0000 E                     mov     [DESTINFO],bh           ; Save 
				info about it 
 00F3  C7 06 0000 E 0000                mov     [DESTSWITCH],0          ; reset
				 switches 
 00F9  5E                               pop     SI 
 00FA  EB AD                            jmp     short DESTSCAN          ; keep 
				going 
                                 
 00FC                           CHECKDONE: 
 00FC  A0 0000 E                        mov     al,[PLUS] 
 00FF  A2 0000 E                        mov     [CONCAT],al             ; PLUS 
				-> Concatination 
 0102  D0 E0                            shl     al,1 
 0104  D0 E0                            shl     al,1 
 0106  A2 0000 E                        mov     [INEXACT],al            ; CONCA
				T -> inexact copy 
 0109  BA 0000 E                        mov     dx,offset trangroup:BADARGS 
 010C  A0 0000 E                        mov     al,[ARGC] 
 010F  0A C0                            or      al,al                   ; Good 
				number of args? 
 0111  74 04                            jz      CERROR4J                ; no, n
				ot enough 
 0113  3C 02                            cmp     al,2 
 0115  76 03                            jbe     ACOUNTOK 
 0117                           CERROR4J: 
 0117  E9 0000 E                        jmp    CERROR                   ; no, t
				oo many 
 011A                           ACOUNTOK: 
 011A  BD 0000 E                        mov     bp,offset trangroup:DESTVARS 
 011D  3C 01                            cmp     al,1 
 011F  75 20                            jnz     GOT2ARGS 
 0121  A0 0000 E                        mov     al,[CURDRV]             ; Dest 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Page     1-7
DEVICE TABLE AND SRH DEFINITION                             

				is default drive:*.* 
 0124  04 41                            add     al,'A' 
 0126  B4 3A                            mov     ah,':' 
 0128  C6 46 01 02                      mov     [bp.SIZ],2 
 012C  BF 0000 E                        mov     di,offset trangroup:DESTBUF 
 012F  AB                               stosw 
 0130  C7 06 0000 E 0000                mov     [DESTSWITCH],0          ; no sw
				itches on dest 
 0136  C6 46 04 02                      mov     [bp.INFO],2             ; Flag 
				dest is ambig 
 013A  C6 46 00 00                      mov     [bp.ISDIR],0            ; Know 
				destination specs file 
 013E  E8 03FC R                        call    SETSTARS 
 0141                           GOT2ARGS: 
 0141  80 7E 01 02                      cmp     [bp.SIZ],2 
 0145  75 15                            jnz     NOTSHORTDEST 
 0147  80 3E 0001 E 3A                  cmp     [DESTBUF+1],':' 
 014C  75 0E                            jnz     NOTSHORTDEST            ; Two c
				har file name 
 014E  80 4E 04 02                      or      [bp.INFO],2             ; Know 
				dest is d: 
 0152  BF 0002 E                        mov     di,offset trangroup:DESTBUF + 2
				 
 0155  C6 46 00 00                      mov     [bp.ISDIR],0            ; Know 
				destination specs file 
 0159  E8 03FC R                        call    SETSTARS 
 015C                           NOTSHORTDEST: 
 015C  8B 7E 02                         mov     di,[bp.TTAIL] 
 015F  80 3D 00                         cmp     byte ptr [DI],0 
 0162  75 14                            jnz     CHKSWTCHES 
 0164  BA 0000 E                        mov     dx,offset trangroup:BADCD 
 0167  80 7D FE 3A                      cmp     byte ptr [DI-2],':' 
 016B  75 AA                            jnz     CERROR4J               ; Traili
				ng '/' error 
 016D  C6 46 00 02                      mov     [bp.ISDIR],2           ; Know d
				estination is d:/ 
 0171  80 4E 04 06                      or      [bp.INFO],6 
 0175  E8 03FC R                        call    SETSTARS 
 0178                           CHKSWTCHES: 
 0178  BA 0000 E                        mov     dx,offset trangroup:BADSWT 
 017B  A1 0000 E                        mov     ax,[ALLSWITCH] 
 017E  3D 8000                          cmp     ax,GOTSWITCH 
 0181  74 94                            jz      CERROR4J                ; Switc
				h specified which is not known 
                                 
                                ; Now know most of the information needed about
				 the destination 
                                 
 0183  A9 0010                          TEST    AX,VSWITCH              ; Verif
				y requested? 
 0186  74 14                            JZ      NOVERIF                 ; No 
 0188  B4 54                            MOV     AH,GET_VERIFY_ON_WRITE 
 018A  CD 21                            INT     int_command             ; Get c
				urrent setting 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Page     1-8
DEVICE TABLE AND SRH DEFINITION                             

 018C  1E                               PUSH    DS 
 018D  8E 1E 0000 E                     MOV     DS,[RESSEG] 
                                ASSUME  DS:RESGROUP 
 0191  32 E4                            XOR     AH,AH 
 0193  A3 0000 E                        MOV     [VERVAL],AX             ; Save 
				current setting 
 0196  1F                               POP     DS 
                                ASSUME  DS:TRANGROUP 
 0197  B8 2E01                          MOV     AX,(SET_VERIFY_ON_WRITE SHL 8) 
				OR 1 ; Set verify 
 019A  CD 21                            INT     int_command 
 019C                           NOVERIF: 
 019C  33 ED                            xor     bp,bp                   ; no sw
				itches 
 019E  BE 0081                          mov     si,81H 
 01A1  B3 2B                            mov     bl,'+'                  ; inclu
				de '+' as a delimiter 
 01A3                           SCANFSRC: 
 01A3  BF 0000 E                        mov     di,offset trangroup:SCANBUF 
 01A6  E8 0000 E                        call    CPARSE                  ; Parse
				 first source name 
 01A9  F6 C7 01                         test    bh,1                    ; Switc
				h? 
 01AC  75 F5                            jnz     SCANFSRC                ; Yes, 
				try again 
 01AE  09 2E 0000 E                     or      [DESTSWITCH],bp         ; Inclu
				de copy wide switches on DEST 
 01B2  F7 C5 0008                       test    bp,BSWITCH 
 01B6  75 0C                            jnz     NOSETCASC               ; Binar
				y explicit 
 01B8  80 3E 0000 E 00                  cmp     [CONCAT],0 
 01BD  74 05                            JZ      NOSETCASC               ; Not C
				oncat 
 01BF  C6 06 0000 E 04                  mov     [ASCII],ASWITCH         ; Conca
				t -> ASCII copy if no B switch 
 01C4                           NOSETCASC: 
 01C4  56                               push    SI 
 01C5  A1 0000 E                        mov     ax,[STARTEL] 
 01C8  BE 0000 E                        mov     SI,offset trangroup:SCANBUF ; A
				djust to copy 
 01CB  2B C6                            sub     ax,SI 
 01CD  BF 0000 E                        mov     DI,offset trangroup:SRCBUF 
 01D0  03 C7                            add     ax,DI 
 01D2  A3 0000 E                        mov     [SRCTAIL],AX 
 01D5  88 0E 0000 E                     mov     [SRCSIZ],cl             ; Save 
				its size 
 01D9  41                               inc     cx                      ; Inclu
				de the NUL 
 01DA  F3/ A4                           rep     movsb                   ; Save 
				this source 
 01DC  88 3E 0000 E                     mov     [SRCINFO],bh            ; Save 
				info about it 
 01E0  5E                               pop     SI 
 01E1  8B C5                            mov     ax,bp                   ; Switc
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Page     1-9
DEVICE TABLE AND SRH DEFINITION                             

				hes so far 
 01E3  E8 0000 E                        call    SETASC                  ; Set A
				,B switches accordingly 
 01E6  E8 0000 E                        call    SWITCH                  ; Get a
				ny more switches on this arg 
 01E9  E8 0000 E                        call    SETASC                  ; Set 
 01EC  E8 0252 R                        call    FRSTSRC 
 01EF  E9 0296 R                        jmp     FIRSTENT 
                                 
 01F2                           ENDCOPY: 
 01F2  E8 0000 E                        CALL    CLOSEDEST 
 01F5                           ENDCOPY2: 
 01F5  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:COPIED_PRE 
 01F8  E8 0000 E                        CALL    PRINT 
 01FB  8B 36 0000 E                     MOV     SI,[FILECNT] 
 01FF  33 FF                            XOR     DI,DI 
 0201  E8 0000 E                        CALL    DISP32BITS 
 0204  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:COPIED_POST
				 
 0207  E8 0000 E                        CALL    PRINT 
 020A  E9 0000 E                        JMP     TCOMMAND                ; Stack
				 could be messed up 
                                 
 020D                           SRCNONEXIST: 
 020D  80 3E 0000 E 00                  cmp     [CONCAT],0 
 0212  75 5B                            jnz     NEXTSRC                 ; If in
				 concat mode, ignore error 
 0214  BA 0000 E                        mov     dx,offset trangroup:SRCBUF 
 0217  E8 0000 E                        call    zprint 
 021A  E8 0000 E                        CALL    ONESPC 
 021D  BA 0000 E                        mov     dx,offset trangroup:NOTFND 
 0220  E9 0000 E                        jmp     COPERR 
                                 
 0223                           SOURCEPROC: 
 0223  56                               push    SI 
 0224  A1 0000 E                        mov     ax,[STARTEL] 
 0227  BE 0000 E                        mov     SI,offset trangroup:SCANBUF ; A
				djust to copy 
 022A  2B C6                            sub     ax,SI 
 022C  BF 0000 E                        mov     DI,offset trangroup:SRCBUF 
 022F  03 C7                            add     ax,DI 
 0231  A3 0000 E                        mov     [SRCTAIL],AX 
 0234  88 0E 0000 E                     mov     [SRCSIZ],cl             ; Save 
				its size 
 0238  41                               inc     cx                      ; Inclu
				de the NUL 
 0239  F3/ A4                           rep     movsb                   ; Save 
				this sorce 
 023B  88 3E 0000 E                     mov     [SRCINFO],bh            ; Save 
				info about it 
 023F  5E                               pop     SI 
 0240  8B C5                            mov     ax,bp                   ; Switc
				hes so far 
 0242  E8 0000 E                        call    SETASC                  ; Set A
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Page     1-10
DEVICE TABLE AND SRH DEFINITION                             

				,B switches accordingly 
 0245  E8 0000 E                        call    SWITCH                  ; Get a
				ny more switches on this arg 
 0248  E8 0000 E                        call    SETASC                  ; Set 
 024B  80 3E 0000 E 00                  cmp     [CONCAT],0 
 0250  75 0B                            jnz     LEAVECFLAG              ; Leave
				 CFLAG if concatination 
 0252                           FRSTSRC: 
 0252  33 C0                            xor     ax,ax 
 0254  A2 0000 E                        mov     [CFLAG],al              ; Flag 
				destination not created 
 0257  A3 0000 E                        mov     [NXTADD],ax             ; Zero 
				out buffer 
 025A  A2 0000 E                        mov     [DESTCLOSED],al         ; Not c
				reated -> not closed 
 025D                           LEAVECFLAG: 
 025D  89 36 0000 E                     mov     [SRCPT],SI              ; remem
				ber where we are 
 0261  BF 0000 E                        mov     di,offset trangroup:USERDIR1 
 0264  BD 0000 E                        mov     bp,offset trangroup:SRCVARS 
 0267  E8 032E R                        call    BUILDPATH               ; Figur
				e out everything about the source 
 026A  8B 36 0000 E                     mov     si,[SRCTAIL]            ; Creat
				e the search FCB 
                                        return 
 026E                         1 ??0000:
 026E  C3                     1  RET
                                 
 026F                           NEXTSRC: 
 026F  80 3E 0000 E 00                  cmp     [PLUS],0 
 0274  75 03                            jnz     MORECP 
 0276                           ENDCOPYJ2: 
 0276  E9 01F2 R                        jmp     ENDCOPY                 ; Done 
 0279                           MORECP: 
 0279  33 ED                            xor     bp,bp                   ; no sw
				itches 
 027B  8B 36 0000 E                     mov     si,[SRCPT] 
 027F  B3 2B                            mov     bl,'+'                  ; inclu
				de '+' as a delimiter 
 0281                           SCANSRC: 
 0281  BF 0000 E                        mov     di,offset trangroup:SCANBUF 
 0284  E8 0000 E                        call    CPARSE                  ; Parse
				 first source name 
 0287  72 ED                            JC      EndCopyJ2               ; if er
				ror, then end (trailing + case) 
 0289  F6 C7 80                         test    bh,80H 
 028C  74 E8                            jz      ENDCOPYJ2               ; If no
				 '+' we're done 
 028E  F6 C7 01                         test    bh,1                    ; Switc
				h? 
 0291  75 EE                            jnz     SCANSRC                 ; Yes, 
				try again 
 0293  E8 0223 R                        call    SOURCEPROC 
 0296                           FIRSTENT: 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Page     1-11
DEVICE TABLE AND SRH DEFINITION                             

 0296  BF 005C                          mov     di,FCB 
 0299  B8 2900                          mov     ax,PARSE_FILE_DESCRIPTOR SHL 8 
 029C  CD 21                            INT     int_command 
 029E  A1 0000 E                        mov     ax,word ptr [SRCBUF]    ; Get d
				rive 
 02A1  80 FC 3A                         cmp     ah,':' 
 02A4  74 02                            jz      DRVSPEC1 
 02A6  B0 40                            mov     al,'@' 
 02A8                           DRVSPEC1: 
 02A8  2C 40                            sub     al,'@' 
 02AA  A2 005C                          mov     ds:[FCB],al 
 02AD  B4 11                            mov     ah,DIR_SEARCH_FIRST 
 02AF  E8 0000 E                        call    SEARCH 
 02B2  9C                               pushf                           ; Save 
				result of search 
 02B3  E8 0000 E                        call    RESTUDIR1               ; Resto
				re users dir 
 02B6  9D                               popf 
 02B7  74 03                            jz      NEXTAMBIG0 
 02B9  E9 020D R                        jmp     SRCNONEXIST             ; Faile
				d 
 02BC                           NEXTAMBIG0: 
 02BC  32 C0                            xor     al,al 
 02BE  86 06 0000 E                     xchg    al,[FRSTSRCH] 
 02C2  0A C0                            or      al,al 
 02C4  74 0B                            jz      NEXTAMBIG 
 02C6                           SETNMEL: 
 02C6  B9 000C                          mov     cx,12 
 02C9  BF 0000 E                        mov     di,OFFSET TRANGROUP:SDIRBUF 
 02CC  BE 0000 E                        mov     si,OFFSET TRANGROUP:DIRBUF 
 02CF  F3/ A4                           rep     movsb                   ; Save 
				very first source name 
 02D1                           NEXTAMBIG: 
 02D1  32 C0                            xor     al,al 
 02D3  A2 0000 E                        mov     [NOWRITE],al            ; Turn 
				off NOWRITE 
 02D6  8B 3E 0000 E                     mov     di,[SRCTAIL] 
 02DA  BE 0001 E                        mov     si,offset trangroup:DIRBUF + 1 
 02DD  E8 0000 E                        call    FCB_TO_ASCZ             ; SRCBU
				F has complete name 
 02E0                           MELDO: 
 02E0  80 3E 0000 E 00                  cmp     [CONCAT],0 
 02E5  75 07                            jnz     SHOWCPNAM               ; Show 
				name if concat 
 02E7  F6 06 0000 E 02                  test    [SRCINFO],2             ; Show 
				name if multi 
 02EC  74 09                            jz      DOREAD 
 02EE                           SHOWCPNAM: 
 02EE  BA 0000 E                        mov     dx,offset trangroup:SRCBUF 
 02F1  E8 0000 E                        call    ZPRINT 
 02F4  E8 0000 E                        call    CRLF2 
 02F7                           DOREAD: 
 02F7  E8 0000 E                        call    DOCOPY 
 02FA  80 3E 0000 E 00                  cmp     [CONCAT],0 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Page     1-12
DEVICE TABLE AND SRH DEFINITION                             

 02FF  75 0A                            jnz     NODCLOSE                ; If co
				ncat, do not close 
 0301  E8 0000 E                        call    CLOSEDEST               ; else 
				close current destination 
 0304  72 05                            jc      NODCLOSE                ; Conca
				t flag got set, close didn't really happen 
 0306  C6 06 0000 E 00                  mov     [CFLAG],0               ; Flag 
				destination not created 
 030B                           NODCLOSE: 
 030B  80 3E 0000 E 00                  cmp     [CONCAT],0              ; Check
				 CONCAT again 
 0310  74 0D                            jz      NOFLUSH 
 0312  E8 0000 E                        CALL    FLSHFIL                 ; Flush
				 output between source files on CONCAT 
                                                                        ;  so L
				OSTERR stuff works correctly 
 0315  F6 06 0000 E FF                  TEST    [MELCOPY],0FFH 
 031A  74 03                            jz      NOFLUSH 
 031C  E9 0000 R                        jmp     DOMELCOPY 
                                 
 031F                           NOFLUSH: 
 031F  E8 0000 E                        call    SEARCHNEXT              ; Try n
				ext match 
 0322  75 07                            jnz     NEXTSRCJ                ; Finis
				hed with this source spec 
 0324  C6 06 0000 E 00                  mov     [DESTCLOSED],0          ; Not c
				reated or concat -> not closed 
 0329  EB A6                            jmp     NEXTAMBIG               ; Do ne
				xt ambig 
                                 
 032B                           NEXTSRCJ: 
 032B  E9 026F R                        jmp   NEXTSRC 
                                 
                                 
                                 
 032E                           BUILDPATH: 
 032E  F6 46 04 02                      test    [BP.INFO],2 
 0332  75 22                            jnz     NOTPFILE                ; If am
				big don't bother with open 
 0334  8B D5                            mov     dx,bp 
 0336  83 C2 05                         add     dx,BUF                  ; Set D
				X to spec 
 0339  B8 3D00                          mov     ax,OPEN SHL 8 
 033C  CD 21                            INT     int_command 
 033E  72 16                            jc      NOTPFILE 
 0340  8B D8                            mov     bx,ax                   ; Is pu
				re file 
 0342  B8 4400                          mov     ax,IOCTL SHL 8 
 0345  CD 21                            INT     int_command 
 0347  B4 3E                            mov     ah,CLOSE 
 0349  CD 21                            INT     int_command 
 034B  F6 C2 80                         test    dl,devid_ISDEV 
 034E  75 41                            jnz     ISADEV                  ; If de
				vice, done 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Page     1-13
DEVICE TABLE AND SRH DEFINITION                             

 0350  F6 46 04 04                      test    [BP.INFO],4 
 0354  74 3B                            jz      ISSIMPFILE              ; If no
				 path seps, done 
 0356                           NOTPFILE: 
 0356  8B 56 05                         mov     dx,word ptr [BP.BUF] 
 0359  80 FE 3A                         cmp     dh,':' 
 035C  74 02                            jz      DRVSPEC5 
 035E  B2 40                            mov     dl,'@' 
 0360                           DRVSPEC5: 
 0360  80 EA 40                         sub     dl,'@'                  ; A = 1
				 
 0363  E8 0000 E                        call    SAVUDIR1 
 0366  8B D5                            mov     dx,bp 
 0368  83 C2 05                         add     dx,BUF                  ; Set D
				X for upcomming CHDIRs 
 036B  8A 7E 04                         mov     bh,[BP.INFO] 
 036E  80 E7 06                         and     bh,6 
 0371  80 FF 06                         cmp     bh,6                    ; Ambig
				 and path ? 
 0374  75 16                            jnz     CHECKAMB                ; jmp i
				f no 
 0376  8B 76 02                         mov     si,[BP.TTAIL] 
 0379  80 7C FE 3A                      cmp     byte ptr [si-2],':' 
 037D  75 06                            jnz     KNOWNOTSPEC 
 037F  C6 46 00 02                      mov     [BP.ISDIR],2            ; Know 
				is d:/file 
 0383  EB 05                            jmp     short DOPCDJ 
                                 
 0385                           KNOWNOTSPEC: 
 0385  C6 46 00 01                      mov     [BP.ISDIR],1            ; Know 
				is path/file 
 0389  4E                               dec     si                      ; Point
				 to the / 
 038A                           DOPCDJ: 
 038A  EB 5E                            jmp     short DOPCD 
                                 
 038C                           CHECKAMB: 
 038C  80 FF 02                         cmp     bh,2 
 038F  75 05                            jnz     CHECKCD 
 0391                           ISSIMPFILE: 
 0391                           ISADEV: 
 0391  C6 46 00 00                      mov     [BP.ISDIR],0            ; Know 
				is file since ambig but no path 
                                        return 
 0395                         1 ??0001:
 0395  C3                     1  RET
                                 
 0396                           CHECKCD: 
 0396  E8 0000 E                        call    SETREST1 
 0399  B4 3B                            mov     ah,CHDIR 
 039B  CD 21                            INT     int_command 
 039D  72 23                            jc      NOTPDIR 
 039F  8B FA                            mov     di,dx 
 03A1  33 C0                            xor     ax,ax 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Page     1-14
DEVICE TABLE AND SRH DEFINITION                             

 03A3  8B C8                            mov     cx,ax 
 03A5  49                               dec     cx 
 03A6  F2/ AE                           repne   scasb 
 03A8  4F                               dec     di 
 03A9  A0 0000 E                        mov     al,[DIRCHAR] 
 03AC  C6 46 00 02                      mov     [bp.ISDIR],2            ; assum
				e d:/file 
 03B0  3A 45 FF                         cmp     al,[di-1] 
 03B3  74 05                            jz      GOTSRCSLSH 
 03B5  AA                               stosb 
 03B6  C6 46 00 01                      mov     [bp.ISDIR],1            ; know 
				path/file 
 03BA                           GOTSRCSLSH: 
 03BA  80 4E 04 06                      or      [bp.INFO],6 
 03BE  E8 03FC R                        call    SETSTARS 
                                        return 
 03C1                         1 ??0002:
 03C1  C3                     1  RET
                                 
                                 
 03C2                           NOTPDIR: 
 03C2  C6 46 00 00                      mov     [bp.ISDIR],0            ; assum
				e pure file 
 03C6  8A 7E 04                         mov     bh,[bp.INFO] 
 03C9  F6 C7 04                         test    bh,4 
                                        retz                            ; Know 
				pure file, no path seps 
 03CC  74 F3                  2  ??0003: jz ret_l
 03CE  C6 46 00 02                      mov     [bp.ISDIR],2            ; assum
				e d:/file 
 03D2  8B 76 02                         mov     si,[bp.TTAIL] 
 03D5  80 3C 00                         cmp     byte ptr [si],0 
 03D8  74 1F                            jz      BADCDERRJ2              ; Trail
				ing '/' 
 03DA  80 3C 2E                         cmp     byte ptr [si],'.' 
 03DD  74 1A                            jz      BADCDERRJ2              ; If . 
				or .. pure cd should have worked 
 03DF  80 7C FE 3A                      cmp     byte ptr [si-2],':' 
 03E3  74 05                            jz      DOPCD                   ; Know 
				d:/file 
 03E5  C6 46 00 01                      mov     [bp.ISDIR],1            ; Know 
				path/file 
 03E9  4E                               dec     si                      ; Point
				 at last '/' 
 03EA                           DOPCD: 
 03EA  32 DB                            xor     bl,bl 
 03EC  86 1C                            xchg    bl,[SI]                 ; Stick
				 in a NUL 
 03EE  E8 0000 E                        call    SETREST1 
 03F1  B4 3B                            mov     ah,CHDIR 
 03F3  CD 21                            INT     int_command 
 03F5  86 1C                            xchg    bl,[SI] 
                                        retnc 
 03F7  73 C8                  2  ??0005: jnc ret_l
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Page     1-15
DEVICE TABLE AND SRH DEFINITION                             

 03F9                           BADCDERRJ2: 
 03F9  E9 0000 E                        JMP     BADCDERR 
                                 
 03FC                           SETSTARS: 
 03FC  89 7E 02                         mov     [bp.TTAIL],DI 
 03FF  80 46 01 0C                      add     [bp.SIZ],12 
 0403  B8 2E3F                          mov     ax,('.' SHL 8) OR '?' 
 0406  B9 0008                          mov     cx,8 
 0409  F3/ AA                           rep     stosb 
 040B  86 C4                            xchg    al,ah 
 040D  AA                               stosb 
 040E  86 C4                            xchg    al,ah 
 0410  B1 03                            mov     cl,3 
 0412  F3/ AA                           rep     stosb 
 0414  32 C0                            xor     al,al 
 0416  AA                               stosb 
                                        return 
 0417                         1 ??0007:
 0417  C3                     1  RET
                                 
                                 
 0418                           COMPNAME: 
 0418  51                               PUSH    CX 
 0419  50                               PUSH    AX 
 041A  BE 0000 E                        MOV     si,offset trangroup:SRCBUF 
 041D  BF 0000 E                        MOV     di,offset trangroup:DESTBUF 
 0420  8A 0E 0000 E                     MOV     CL,[CURDRV] 
 0424  8A E9                            MOV     CH,CL 
 0426  80 7C 01 3A                      CMP     BYTE PTR [SI+1],':' 
 042A  75 05                            JNZ     NOSRCDRV 
 042C  AD                               LODSW 
 042D  2C 41                            SUB     AL,'A' 
 042F  8A C8                            MOV     CL,AL 
 0431                           NOSRCDRV: 
 0431  80 7D 01 3A                      CMP     BYTE PTR [DI+1],':' 
 0435  75 08                            JNZ     NODSTDRV 
 0437  8A 05                            MOV     AL,[DI] 
 0439  47                               INC     DI 
 043A  47                               INC     DI 
 043B  2C 41                            SUB     AL,'A' 
 043D  8A E8                            MOV     CH,AL 
 043F                           NODSTDRV: 
 043F  3A E9                            CMP     CH,CL 
 0441  75 20                            jnz     RET81P 
 0443  E8 0000 E                        call    STRCOMP 
 0446  74 1B                            jz      RET81P 
 0448  8B 44 FF                         mov     ax,[si-1] 
 044B  8B 4D FF                         mov     cx,[di-1] 
 044E  50                               push    ax 
 044F  22 C1                            and     al,cl 
 0451  58                               pop     ax 
 0452  75 0F                            jnz     RET81P                  ; Nieth
				er of the mismatch chars was a NUL 
                                ; Know one of the mismatch chars is a NUL 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Page     1-16
DEVICE TABLE AND SRH DEFINITION                             

                                ; Check for ".NUL" compared with NUL 
 0454  3C 2E                            cmp     al,'.' 
 0456  75 04                            jnz     CHECKCL 
 0458  0A E4                            or      ah,ah 
 045A  EB 07                            jmp     short RET81P            ; If NU
				L return match, else no match 
 045C                           CHECKCL: 
 045C  80 F9 2E                         cmp     cl,'.' 
 045F  75 02                            jnz     RET81P                  ; Misma
				tch 
 0461  0A ED                            or      ch,ch                   ; If NU
				L return match, else no match 
 0463                           RET81P: 
 0463  58                               POP     AX 
 0464  59                               POP     CX 
                                        return 
 0465                         1 ??0008:
 0465  C3                     1  RET
                                 
 0466                           TRANCODE        ENDS 
                                 
                                        END 

Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Symbols-4
                                                             

SRHEAD . . . . . . . . . . . . .  	000D	0005
  REQLEN . . . . . . . . . . . .  	0000
  REQUNIT  . . . . . . . . . . .  	0001
  REQFUNC  . . . . . . . . . . .  	0002
  REQSTAT  . . . . . . . . . . .  	0003
SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYSDEV . . . . . . . . . . . . .  	0012	0005
  SDEVNEXT . . . . . . . . . . .  	0000
  SDEVATT  . . . . . . . . . . .  	0004
  SDEVSTRAT  . . . . . . . . . .  	0006
  SDEVINT  . . . . . . . . . . .  	0008
  SDEVNAME . . . . . . . . . . .  	000A
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016
VARSTRUC . . . . . . . . . . . .  	0059	0005
  ISDIR  . . . . . . . . . . . .  	0000
  SIZ  . . . . . . . . . . . . .  	0001
  TTAIL  . . . . . . . . . . . .  	0002
  INFO . . . . . . . . . . . . .  	0004
  BUF  . . . . . . . . . . . . .  	0005
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Symbols-5
                                                             

Segments and Groups:

                N a m e         	Size	Align	Combine Class

EGROUP . . . . . . . . . . . . .  	GROUP
  ZEXEC_CODE . . . . . . . . . .  	0000	PARA	PUBLIC	
  ZEXEC_DATA . . . . . . . . . .  	0000	PARA	PUBLIC	
RESGROUP . . . . . . . . . . . .  	GROUP
  CODERES  . . . . . . . . . . .  	0000	PARA	PUBLIC	
  DATARES  . . . . . . . . . . .  	0000	PARA	PUBLIC	
  ENVIRONMENT  . . . . . . . . .  	0000	PARA	PUBLIC	
  INIT . . . . . . . . . . . . .  	0000	PARA	PUBLIC	
  TAIL . . . . . . . . . . . . .  	0000	PARA	PUBLIC	
TRANGROUP  . . . . . . . . . . .  	GROUP
  TRANCODE . . . . . . . . . . .  	0466	BYTE	PUBLIC	
  TRANDATA . . . . . . . . . . .  	0000	PARA	PUBLIC	
  TRANSPACE  . . . . . . . . . .  	0000	PARA	PUBLIC	
  TRANTAIL . . . . . . . . . . .  	0000	PARA	PUBLIC	

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ACOUNTOK . . . . . . . . . . . .  	L NEAR	011A	TRANCODE
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALLSWITCH  . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
ALTVECT  . . . . . . . . . . . .  	Number	0000	
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ARGC . . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
ASCII  . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ASWITCH  . . . . . . . . . . . .  	Number	0004	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Symbols-6
                                                             

ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	

BADARGS  . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
BADCD  . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
BADCDERR . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
BADCDERRJ2 . . . . . . . . . . .  	L NEAR	03F9	TRANCODE
BADSWT . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
BINARY . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
BSWITCH  . . . . . . . . . . . .  	Number	0008	
BUFINSIZ . . . . . . . . . . . .  	Number	0010	
BUILDNAME  . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
BUILDPATH  . . . . . . . . . . .  	L NEAR	032E	TRANCODE	Global
BYTCNT . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External

CERROR . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
CERROR4J . . . . . . . . . . . .  	L NEAR	0117	TRANCODE
CFLAG  . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHECKAMB . . . . . . . . . . . .  	L NEAR	038C	TRANCODE
CHECKCD  . . . . . . . . . . . .  	L NEAR	0396	TRANCODE
CHECKCL  . . . . . . . . . . . .  	L NEAR	045C	TRANCODE
CHECKDONE  . . . . . . . . . . .  	L NEAR	00FC	TRANCODE
CHKSWTCHES . . . . . . . . . . .  	L NEAR	0178	TRANCODE
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSEDEST  . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
COMBUFLEN  . . . . . . . . . . .  	Number	0080	
COMPNAME . . . . . . . . . . . .  	L NEAR	0418	TRANCODE	Global
CONCAT . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
CONTMEL  . . . . . . . . . . . .  	L NEAR	0014	TRANCODE
COPERR . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
COPIED_POST  . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
COPIED_PRE . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
COPY . . . . . . . . . . . . . .  	L NEAR	006B	TRANCODE	Global
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CPARSE . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
CPDATE . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
CPTIME . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Symbols-7
                                                             

CRLF2  . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURDRV . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DBPBHL . . . . . . . . . . . . .  	Number	0016	
DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DELIM  . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
DESTBUF  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTCLOSED . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTFCB  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTFCB2 . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTHAND . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
DESTINFO . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTISDEV  . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTISDIR  . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTSCAN . . . . . . . . . . . .  	L NEAR	00A9	TRANCODE
DESTSIZ  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTSWITCH . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
DESTTAIL . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
DESTVARS . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DEVBPB . . . . . . . . . . . . .  	Number	0002	
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DEVIFL . . . . . . . . . . . . .  	Number	0007	
DEVINIT  . . . . . . . . . . . .  	Number	0000	
DEVIOCTL . . . . . . . . . . . .  	Number	4000	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Symbols-8
                                                             

DEVIST . . . . . . . . . . . . .  	Number	0006	
DEVMDCH  . . . . . . . . . . . .  	Number	0001	
DEVOFL . . . . . . . . . . . . .  	Number	000B	
DEVOST . . . . . . . . . . . . .  	Number	000A	
DEVRD  . . . . . . . . . . . . .  	Number	0004	
DEVRDIOCTL . . . . . . . . . . .  	Number	0003	
DEVRDND  . . . . . . . . . . . .  	Number	0005	
DEVTYP . . . . . . . . . . . . .  	Number	8000	
DEVWMES  . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
DEVWRIOCTL . . . . . . . . . . .  	Number	000C	
DEVWRT . . . . . . . . . . . . .  	Number	0008	
DEVWRTV  . . . . . . . . . . . .  	Number	0009	
DFLSHL . . . . . . . . . . . . .  	Number	000F	
DINITHL  . . . . . . . . . . . .  	Number	001A	
DIRBUF . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DIRCHAR  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISK_RESET . . . . . . . . . . .  	Number	000D	
DISP32BITS . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
DMEDHL . . . . . . . . . . . . .  	Number	000F	
DOCOPY . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
DOMELCOPY  . . . . . . . . . . .  	L NEAR	0000	TRANCODE
DOPCD  . . . . . . . . . . . . .  	L NEAR	03EA	TRANCODE
DOPCDJ . . . . . . . . . . . . .  	L NEAR	038A	TRANCODE
DOREAD . . . . . . . . . . . . .  	L NEAR	02F7	TRANCODE
DOSVER . . . . . . . . . . . . .  	Number	00D3	
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DRDNDHL  . . . . . . . . . . . .  	Number	000E	
DRDWRHL  . . . . . . . . . . . .  	Number	0016	
DRVCHAR  . . . . . . . . . . . .  	Number	003A	
DRVSPEC1 . . . . . . . . . . . .  	L NEAR	02A8	TRANCODE
DRVSPEC5 . . . . . . . . . . . .  	L NEAR	0360	TRANCODE
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DSTATHL  . . . . . . . . . . . .  	Number	000D	
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

ENDCOPY  . . . . . . . . . . . .  	L NEAR	01F2	TRANCODE	Global
ENDCOPY2 . . . . . . . . . . . .  	L NEAR	01F5	TRANCODE
ENDCOPYJ2  . . . . . . . . . . .  	L NEAR	0276	TRANCODE
ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Symbols-9
                                                             

ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FALSE  . . . . . . . . . . . . .  	Number	0000	
FATPRI . . . . . . . . . . . . .  	Number	001E	
FCB  . . . . . . . . . . . . . .  	Number	005C	
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FCB_TO_ASCZ  . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILECNT  . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILPERPROC . . . . . . . . . . .  	Number	0014	
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Symbols-10
                                                             

FIRSTDEST  . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
FIRSTENT . . . . . . . . . . . .  	L NEAR	0296	TRANCODE
FLSHFIL  . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
FREEPRI  . . . . . . . . . . . .  	Number	0000	
FRSTSRC  . . . . . . . . . . . .  	L NEAR	0252	TRANCODE
FRSTSRCH . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
FULDIR . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External

GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GOT2ARGS . . . . . . . . . . . .  	L NEAR	0141	TRANCODE
GOTPLUS  . . . . . . . . . . . .  	L NEAR	00D7	TRANCODE
GOTSRCSLSH . . . . . . . . . . .  	L NEAR	03BA	TRANCODE
GOTSWITCH  . . . . . . . . . . .  	Number	8000	

HIGHMEM  . . . . . . . . . . . .  	Alias	 FALSE		

IBM  . . . . . . . . . . . . . .  	Alias	 FALSE		
IBMJAPAN . . . . . . . . . . . .  	Alias	 FALSE		
IBMVER . . . . . . . . . . . . .  	Alias	 IBM		
INBDEV . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
INEXACT  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Symbols-11
                                                             

IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
ISADEV . . . . . . . . . . . . .  	L NEAR	0391	TRANCODE
ISCIN  . . . . . . . . . . . . .  	Number	0001	
ISCLOCK  . . . . . . . . . . . .  	Number	0008	
ISCOUT . . . . . . . . . . . . .  	Number	0002	
ISFATBYDEV . . . . . . . . . . .  	Number	2000	
ISIBM  . . . . . . . . . . . . .  	Number	0010	
ISNULL . . . . . . . . . . . . .  	Number	0004	
ISSIMPFILE . . . . . . . . . . .  	L NEAR	0391	TRANCODE

KANJI  . . . . . . . . . . . . .  	Alias	 FALSE		
KEEP_PROCESS . . . . . . . . . .  	Number	0031	
KNOWNOTSPEC  . . . . . . . . . .  	L NEAR	0385	TRANCODE

LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LEAVECFLAG . . . . . . . . . . .  	L NEAR	025D	TRANCODE
LINPERPAG  . . . . . . . . . . .  	Number	0017	
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LOSTERR  . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MELCOPY  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
MELDO  . . . . . . . . . . . . .  	L NEAR	02E0	TRANCODE
MELSTART . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MORECP . . . . . . . . . . . . .  	L NEAR	0279	TRANCODE
MSVER  . . . . . . . . . . . . .  	Number	FFFF	

NEXTAMBIG  . . . . . . . . . . .  	L NEAR	02D1	TRANCODE
NEXTAMBIG0 . . . . . . . . . . .  	L NEAR	02BC	TRANCODE
NEXTMEL  . . . . . . . . . . . .  	L NEAR	004A	TRANCODE
NEXTSRC  . . . . . . . . . . . .  	L NEAR	026F	TRANCODE
NEXTSRCJ . . . . . . . . . . . .  	L NEAR	032B	TRANCODE
NODCLOSE . . . . . . . . . . . .  	L NEAR	030B	TRANCODE
NODSTDRV . . . . . . . . . . . .  	L NEAR	043F	TRANCODE
NOFLUSH  . . . . . . . . . . . .  	L NEAR	031F	TRANCODE
NOPLUS . . . . . . . . . . . . .  	L NEAR	00BC	TRANCODE
NORMPERLIN . . . . . . . . . . .  	Number	0001	
NOSETCASC  . . . . . . . . . . .  	L NEAR	01C4	TRANCODE
NOSPACE  . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
NOSRCDRV . . . . . . . . . . . .  	L NEAR	0431	TRANCODE
NOTFND . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
NOTPDIR  . . . . . . . . . . . .  	L NEAR	03C2	TRANCODE
NOTPFILE . . . . . . . . . . . .  	L NEAR	0356	TRANCODE
NOTSHORTDEST . . . . . . . . . .  	L NEAR	015C	TRANCODE
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Symbols-12
                                                             

NOVERIF  . . . . . . . . . . . .  	L NEAR	019C	TRANCODE
NOWRITE  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		
NXTADD . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External

OEM  . . . . . . . . . . . . . .  	Text  		
OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
ONESPC . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
OVERWR . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External

PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PATHCHRCMP . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
PLUS . . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
PRINT  . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
PSWITCH  . . . . . . . . . . . .  	Number	0002	

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
RDEOF  . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
RESSEG . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
RESTUDIR . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
RESTUDIR1  . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
RET81P . . . . . . . . . . . . .  	L NEAR	0463	TRANCODE
RET_L  . . . . . . . . . . . . .  	NEAR 	0465	TRANCODE
RET_NC . . . . . . . . . . . . .  	NEAR 	03F7	TRANCODE
RET_Z  . . . . . . . . . . . . .  	NEAR 	03CC	TRANCODE
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
RPRI . . . . . . . . . . . . . .  	Number	0006	

SAVUDIR1 . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Symbols-13
                                                             

SCANBUF  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
SCANFSRC . . . . . . . . . . . .  	L NEAR	01A3	TRANCODE
SCANOFF  . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SCANSRC  . . . . . . . . . . . .  	L NEAR	0281	TRANCODE
SCANSRC2 . . . . . . . . . . . .  	L NEAR	001C	TRANCODE
SDIRBUF  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
SEARCH . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SEARCHNEXT . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETASC . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SETNMEL  . . . . . . . . . . . .  	L NEAR	02C6	TRANCODE
SETNMELJ . . . . . . . . . . . .  	L NEAR	0068	TRANCODE
SETREST1 . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SETSTARS . . . . . . . . . . . .  	L NEAR	03FC	TRANCODE
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SHOWCPNAM  . . . . . . . . . . .  	L NEAR	02EE	TRANCODE
SOURCEPROC . . . . . . . . . . .  	L NEAR	0223	TRANCODE
SRCBUF . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
SRCHAND  . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
SRCINFO  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
SRCISDEV . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
SRCNONEXIST  . . . . . . . . . .  	L NEAR	020D	TRANCODE
SRCPT  . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
SRCSIZ . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
SRCTAIL  . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
SRCVARS  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
STARTEL  . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
STBUI  . . . . . . . . . . . . .  	Number	0200	
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDON  . . . . . . . . . . . . .  	Number	0100	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:54:47
COMMAND COPY routines.                                      Symbols-14
                                                             

STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
STECODE  . . . . . . . . . . . .  	Number	00FF	
STERR  . . . . . . . . . . . . .  	Number	8000	
STRCOMP  . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SWITCH . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SYM  . . . . . . . . . . . . . .  	Number	003E	

TCOMMAND . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
TERMREAD . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
TESTP2 . . . . . . . . . . . . .  	L NEAR	00CE	TRANCODE
TPA  . . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
TRUE . . . . . . . . . . . . . .  	Number	FFFF	

UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
UPCONV . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
USERDIR1 . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
USERIDOPER . . . . . . . . . . .  	Number	005E	

VER  . . . . . . . . . . . . . .  	Text  		
VERVAL . . . . . . . . . . . . .  	V WORD 	0000	DATARES	External
VSWITCH  . . . . . . . . . . . .  	Number	0010	

WAIT . . . . . . . . . . . . . .  	Number	004D	
WIDEPERLIN . . . . . . . . . . .  	Number	0005	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRECODE  . . . . . . . . . . . .  	Number	0000	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
WRITTEN  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
WSWITCH  . . . . . . . . . . . .  	Number	0001	

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	

ZPRINT . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External

??0000 . . . . . . . . . . . . .  	L NEAR	026E	TRANCODE
??0001 . . . . . . . . . . . . .  	L NEAR	0395	TRANCODE
??0002 . . . . . . . . . . . . .  	L NEAR	03C1	TRANCODE
??0003 . . . . . . . . . . . . .  	L NEAR	03CC	TRANCODE
??0005 . . . . . . . . . . . . .  	L NEAR	03F7	TRANCODE
??0007 . . . . . . . . . . . . .  	L NEAR	0417	TRANCODE
??0008 . . . . . . . . . . . . .  	L NEAR	0465	TRANCODE


   2013 Source  Lines
   2145 Total   Lines
    728 Symbols

  15590 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
