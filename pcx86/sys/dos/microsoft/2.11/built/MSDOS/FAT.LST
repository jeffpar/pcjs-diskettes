Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Page     1-1
                                                            

                                ; 
                                ; FAT operations for MSDOS 
                                ; 
                                 
                             C  INCLUDE DOSSEG.ASM 
                             C  ; 
                             C  ; segment ordering for MSDOS 
                             C  ; 
                             C   
 0000                        C  CONSTANTS       SEGMENT BYTE PUBLIC 'CONST' 
 0000                        C  CONSTANTS       ENDS 
                             C   
 0000                        C  DATA            SEGMENT BYTE PUBLIC 'DATA' 
 0000                        C  DATA            ENDS 
                             C   
 0000                        C  CODE            SEGMENT BYTE PUBLIC 'CODE' 
 0000                        C  CODE            ENDS 
                             C   
 0000                        C  LAST            SEGMENT BYTE PUBLIC 'LAST' 
 0000                        C  LAST            ENDS 
                             C   
                             C  DOSGROUP    GROUP   CODE,CONSTANTS,DATA,LAST 
                                 
                                 
 0000                           CODE    SEGMENT BYTE PUBLIC  'CODE' 
                                        ASSUME  SS:DOSGROUP,CS:DOSGROUP 
                                 
                                .list 
                                 
                                TITLE   FAT - FAT maintenance routines 
                                NAME    FAT 
                                 
                                        i_need  CURBUF,DWORD 
 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
 0000                         1  DATA ENDS
                                        i_need  CLUSSPLIT,BYTE 
 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
 0000                         1  DATA ENDS
                                        i_need  CLUSSAVE,WORD 
 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
 0000                         1  DATA ENDS
                                        i_need  CLUSSEC,WORD 
 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
 0000                         1  DATA ENDS
                                        i_need  THISDRV,BYTE 
 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
 0000                         1  DATA ENDS
                                        i_need  DEVCALL,BYTE 
 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
 0000                         1  DATA ENDS
                                        i_need  CALLMED,BYTE 
 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
 0000                         1  DATA ENDS
                                        i_need  CALLRBYT,BYTE 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Page     1-2
DEVICE TABLE AND SRH DEFINITION                             

 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
 0000                         1  DATA ENDS
                                        i_need  BUFFHEAD,DWORD 
 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
 0000                         1  DATA ENDS
                                        i_need  CALLXAD,DWORD 
 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
 0000                         1  DATA ENDS
                                        i_need  CALLBPB,DWORD 
 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
 0000                         1  DATA ENDS
                                 
                                SUBTTL UNPACK -- UNPACK FAT ENTRIES 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Page     1-3
UNPACK -- UNPACK FAT ENTRIES                                

                                PAGE 
                                 
                                ASSUME  SS:DOSGROUP 
                                        procedure   UNPACK,NEAR 
 0000                         1 UNPACK PROC NEAR
                                ASSUME  DS:DOSGROUP,ES:NOTHING 
                                 
                                ; Inputs: 
                                ;       BX = Cluster number 
                                ;       ES:BP = Base of drive parameters 
                                ; Outputs: 
                                ;       DI = Contents of FAT for given cluster 
                                ;       Zero set means DI=0 (free cluster) 
                                ; SI Destroyed, No other registers affected. Fa
				tal error if cluster too big. 
                                 
 0000  26: 3B 5E 0D                     CMP     BX,ES:[BP.dpb_max_cluster] 
 0004  77 15                            JA      HURTFAT 
 0006  E8 008B R                        CALL    MAPCLUSTER 
                                ASSUME  DS:NOTHING 
 0009  8B 3D                            MOV     DI,[DI] 
 000B  73 07                            JNC     HAVCLUS 
 000D  51                               PUSH    CX 
 000E  B1 04                            MOV     CL,4 
 0010  D3 EF                            SHR     DI,CL 
 0012  59                               POP     CX 
 0013  F9                               STC 
 0014                           HAVCLUS: 
 0014  81 E7 0FFF                       AND     DI,0FFFH 
 0018  16                               PUSH    SS 
 0019  1F                               POP     DS 
                                        return 
 001A                         1 ??0000:
 001A  C3                     1  RET
                                 
 001B                           HURTFAT: 
 001B  50                               PUSH    AX 
 001C  B4 80                            MOV     AH,80H          ; Signal Bad FA
				T to INT int_fatal_abort handler 
 001E  BF 0FFF                          MOV     DI,0FFFH        ; In case INT i
				nt_fatal_abort returns (it shouldn't) 
                                        invoke  FATAL 
 0021  E8 0000 E              1  CALL FATAL
 0024  58                               POP     AX              ; Try to ignore
				 bad FAT 
                                        return 
 0025                         1 ??0001:
 0025  C3                     1  RET
                                UNPACK  ENDP 
                                 
                                SUBTTL PACK -- PACK FAT ENTRIES 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Page     1-4
PACK -- PACK FAT ENTRIES                                    

                                PAGE 
                                        procedure   PACK,NEAR 
 0026                         1 PACK PROC NEAR
                                ASSUME  DS:DOSGROUP,ES:NOTHING 
                                 
                                ; Inputs: 
                                ;       BX = Cluster number 
                                ;       DX = Data 
                                ;       ES:BP = Pointer to drive DPB 
                                ; Outputs: 
                                ;       The data is stored in the FAT at the gi
				ven cluster. 
                                ;       SI,DX,DI all destroyed 
                                ;       No other registers affected 
                                 
 0026  E8 008B R                        CALL    MAPCLUSTER 
                                ASSUME  DS:NOTHING 
 0029  8B 35                            MOV     SI,[DI] 
 002B  73 0C                            JNC     ALIGNED 
 002D  51                               PUSH    CX 
 002E  B1 04                            MOV     CL,4 
 0030  D3 E2                            SHL     DX,CL 
 0032  59                               POP     CX 
 0033  81 E6 000F                       AND     SI,0FH 
 0037  EB 04                            JMP     SHORT PACKIN 
 0039                           ALIGNED: 
 0039  81 E6 F000                       AND     SI,0F000H 
 003D                           PACKIN: 
 003D  0B F2                            OR      SI,DX 
 003F  89 35                            MOV     [DI],SI 
 0041  36: C5 36 0000 E                 LDS     SI,[CURBUF] 
 0046  C6 44 05 01                      MOV     [SI.BUFDIRTY],1 
 004A  36: 80 3E 0000 E 00              CMP     BYTE PTR [CLUSSPLIT],0 
 0050  16                               PUSH    SS 
 0051  1F                               POP     DS 
                                ASSUME  DS:DOSGROUP 
                                        retz 
 0052  74 D1                  2  ??0002: jz ret_l
 0054  50                               PUSH    AX 
 0055  53                               PUSH    BX 
 0056  51                               PUSH    CX 
 0057  A1 0000 E                        MOV     AX,[CLUSSAVE] 
 005A  8E 1E 0002 E                     MOV     DS,WORD PTR [CURBUF+2] 
                                ASSUME  DS:NOTHING 
 005E  83 C6 10                         ADD     SI,BUFINSIZ 
 0061  88 24                            MOV     [SI],AH 
 0063  16                               PUSH    SS 
 0064  1F                               POP     DS 
                                ASSUME  DS:DOSGROUP 
 0065  50                               PUSH    AX 
 0066  8B 16 0000 E                     MOV     DX,[CLUSSEC] 
 006A  BE 0001                          MOV     SI,1 
 006D  32 C0                            XOR     AL,AL 
                                        invoke  GETBUFFRB 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Page     1-5
PACK -- PACK FAT ENTRIES                                    

 006F  E8 0000 E              1  CALL GETBUFFRB
 0072  C5 3E 0000 E                     LDS     DI,[CURBUF] 
                                ASSUME  DS:NOTHING 
 0076  C6 45 05 01                      MOV     [DI.BUFDIRTY],1 
 007A  83 C7 10                         ADD     DI,BUFINSIZ 
 007D  4F                               DEC     DI 
 007E  26: 03 7E 02                     ADD     DI,ES:[BP.dpb_sector_size] 
 0082  58                               POP     AX 
 0083  88 05                            MOV     [DI],AL 
 0085  16                               PUSH    SS 
 0086  1F                               POP     DS 
 0087  59                               POP     CX 
 0088  5B                               POP     BX 
 0089  58                               POP     AX 
                                        return 
 008A                         1 ??0004:
 008A  C3                     1  RET
                                PACK    ENDP 
                                 
                                SUBTTL MAPCLUSTER - BUFFER A FAT SECTOR 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Page     1-6
MAPCLUSTER - BUFFER A FAT SECTOR                            

                                PAGE 
                                        procedure   MAPCLUSTER,NEAR 
 008B                         1 MAPCLUSTER PROC NEAR
                                ASSUME  DS:DOSGROUP,ES:NOTHING 
                                 
                                ; Inputs: 
                                ;       ES:BP Points to DPB 
                                ;       BX Is cluster number 
                                ; Function: 
                                ;       Get a pointer to the cluster 
                                ; Outputs: 
                                ;       DS:DI Points to contents of FAT for giv
				en cluster 
                                ;       DS:SI Points to start of buffer 
                                ;       Carry set if cluster data is in high 12
				 bits of word 
                                ; No other registers effected 
                                 
 008B  C6 06 0000 E 00                  MOV     BYTE PTR [CLUSSPLIT],0 
 0090  50                               PUSH    AX 
 0091  53                               PUSH    BX 
 0092  51                               PUSH    CX 
 0093  52                               PUSH    DX 
 0094  8B C3                            MOV     AX,BX 
 0096  D1 E8                            SHR     AX,1 
 0098  03 C3                            ADD     AX,BX 
 009A  33 D2                            XOR     DX,DX 
 009C  26: 8B 4E 02                     MOV     CX,ES:[BP.dpb_sector_size] 
 00A0  F7 F1                            DIV     CX              ; AX is FAT sec
				tor # DX is sector index 
 00A2  26: 03 46 06                     ADD     AX,ES:[BP.dpb_first_FAT] 
 00A6  49                               DEC     CX 
 00A7  50                               PUSH    AX 
 00A8  52                               PUSH    DX 
 00A9  51                               PUSH    CX 
 00AA  8B D0                            MOV     DX,AX 
 00AC  32 C0                            XOR     AL,AL 
 00AE  BE 0001                          MOV     SI,1 
                                        invoke  GETBUFFRB 
 00B1  E8 0000 E              1  CALL GETBUFFRB
 00B4  C5 36 0000 E                     LDS     SI,[CURBUF] 
                                ASSUME  DS:NOTHING 
 00B8  8D 7C 10                         LEA     DI,[SI.BufInSiz] 
 00BB  59                               POP     CX 
 00BC  58                               POP     AX 
 00BD  5A                               POP     DX 
 00BE  03 F8                            ADD     DI,AX 
 00C0  3B C1                            CMP     AX,CX 
 00C2  75 29                            JNZ     MAPRET 
 00C4  8A 05                            MOV     AL,[DI] 
 00C6  16                               PUSH    SS 
 00C7  1F                               POP     DS 
                                ASSUME  DS:DOSGROUP 
 00C8  FE 06 0000 E                     INC     BYTE PTR [CLUSSPLIT] 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Page     1-7
MAPCLUSTER - BUFFER A FAT SECTOR                            

 00CC  A2 0000 E                        MOV     BYTE PTR [CLUSSAVE],AL 
 00CF  89 16 0000 E                     MOV     [CLUSSEC],DX 
 00D3  42                               INC     DX 
 00D4  32 C0                            XOR     AL,AL 
 00D6  BE 0001                          MOV     SI,1 
                                        invoke  GETBUFFRB 
 00D9  E8 0000 E              1  CALL GETBUFFRB
 00DC  C5 36 0000 E                     LDS     SI,[CURBUF] 
                                ASSUME  DS:NOTHING 
 00E0  8D 7C 10                         LEA     DI,[SI.BufInSiz] 
 00E3  8A 05                            MOV     AL,[DI] 
 00E5  16                               PUSH    SS 
 00E6  1F                               POP     DS 
                                ASSUME  DS:DOSGROUP 
 00E7  A2 0001 E                        MOV     BYTE PTR [CLUSSAVE+1],AL 
 00EA  BF 0000 E                        MOV     DI,OFFSET DOSGROUP:CLUSSAVE 
 00ED                           MAPRET: 
 00ED  5A                               POP     DX 
 00EE  59                               POP     CX 
 00EF  5B                               POP     BX 
 00F0  8B C3                            MOV     AX,BX 
 00F2  D1 E8                            SHR     AX,1 
 00F4  58                               POP     AX 
                                        return 
 00F5                         1 ??0005:
 00F5  C3                     1  RET
                                MAPCLUSTER  ENDP 
                                 
                                SUBTTL FATREAD -- CHECK DRIVE GET FAT 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Page     1-8
FATREAD -- CHECK DRIVE GET FAT                              

                                PAGE 
                                ASSUME  DS:DOSGROUP,ES:NOTHING 
                                 
                                        procedure   FAT_operation,NEAR 
 00F6                         1 FAT_operation PROC NEAR
 00F6                           FATERR: 
 00F6  81 E7 00FF                       AND     DI,STECODE      ; Put error cod
				e in DI 
 00FA  B4 02                            MOV     AH,2            ; While trying 
				to read FAT 
 00FC  A0 0000 E                        MOV     AL,BYTE PTR [THISDRV]    ; Tell
				 which drive 
                                        invoke  FATAL1 
 00FF  E8 0000 E              1  CALL FATAL1
                                 
                                        entry   FATREAD 
 0102                         1 FATREAD:
                                ASSUME  DS:DOSGROUP,ES:NOTHING 
                                 
                                ; Function: 
                                ;       If disk may have been changed, FAT is r
				ead in and buffers are 
                                ;       flagged invalid. If not, no action is t
				aken. 
                                ; Outputs: 
                                ;       ES:BP = Base of drive parameters 
                                ; All other registers destroyed 
                                 
 0102  A0 0000 E                        MOV     AL,BYTE PTR [THISDRV] 
                                        invoke  GETBP 
 0105  E8 0000 E              1  CALL GETBP
 0108  B0 0F                            MOV     AL,DMEDHL 
 010A  26: 8A 66 01                     MOV     AH,ES:[BP.dpb_UNIT] 
 010E  A3 0000 E                        MOV     WORD PTR [DEVCALL],AX 
 0111  C6 06 0002 E 01                  MOV     BYTE PTR [DEVCALL.REQFUNC],DEVM
				DCH 
 0116  C7 06 0003 E 0000                MOV     [DEVCALL.REQSTAT],0 
 011C  26: 8A 46 16                     MOV     AL,ES:[BP.dpb_media] 
 0120  A2 0000 E                        MOV     BYTE PTR [CALLMED],AL 
 0123  06                               PUSH    ES 
 0124  1E                               PUSH    DS 
 0125  BB 0000 E                        MOV     BX,OFFSET DOSGROUP:DEVCALL 
 0128  26: C5 76 12                     LDS     SI,ES:[BP.dpb_driver_addr]     
				  ; DS:SI Points to device header 
                                ASSUME  DS:NOTHING 
 012C  07                               POP     ES                      ; ES:BX
				 Points to call header 
                                        invoke  DEVIOCALL2 
 012D  E8 0000 E              1  CALL DEVIOCALL2
 0130  16                               PUSH    SS 
 0131  1F                               POP     DS 
                                ASSUME  DS:DOSGROUP 
 0132  07                               POP     ES                      ; Resto
				re ES:BP 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Page     1-9
FATREAD -- CHECK DRIVE GET FAT                              

 0133  8B 3E 0003 E                     MOV     DI,[DEVCALL.REQSTAT] 
 0137  F7 C7 8000                       TEST    DI,STERR 
 013B  75 B9                            JNZ     FATERR 
 013D  32 E4                            XOR     AH,AH 
 013F  26: 86 66 17                     XCHG    AH,ES:[BP.dpb_first_access]    
				  ; Reset dpb_first_access 
 0143  A0 0000 E                        MOV     AL,BYTE PTR [THISDRV]    ; Use 
				physical unit number 
 0146  0A 26 0000 E                     OR      AH,BYTE PTR [CALLRBYT] 
 014A  78 15                            JS      NEWDSK          ; new disk or f
				irst access? 
 014C  74 01                            JZ      CHKBUFFDIRT 
                                        return                  ; If Media not 
				changed 
 014E                         1 ??0006:
 014E  C3                     1  RET
 014F                           CHKBUFFDIRT: 
 014F  FE C4                            INC     AH              ; Here if ?Medi
				a..Check buffers 
 0151  C5 3E 0000 E                     LDS     DI,[BUFFHEAD] 
                                ASSUME  DS:NOTHING 
 0155                           NBUFFER:                        ; Look for dirt
				y buffers 
 0155  3B 45 04                         CMP     AX,WORD PTR [DI.BUFDRV] 
                                        retz                    ; There is a di
				rty buffer, assume Media OK 
 0158  74 F4                  2  ??0007: jz ret_l
 015A  C5 3D                            LDS     DI,[DI.NEXTBUF] 
 015C  83 FF FF                         CMP     DI,-1 
 015F  75 F4                            JNZ     NBUFFER 
                                ; If no dirty buffers, assume Media changed 
 0161                           NEWDSK: 
                                        invoke  SETVISIT 
 0161  E8 0000 E              1  CALL SETVISIT
 0164                           NXBUFFER: 
 0164  C6 45 07 01                      MOV     [DI.VISIT],1 
 0168  3A 45 04                         CMP     AL,[DI.BUFDRV]       ; For this
				 drive? 
 016B  75 08                            JNZ     SKPBUFF 
 016D  C7 45 04 00FF                    MOV     WORD PTR [DI.BUFDRV],00FFH  ; F
				ree up buffer 
                                        invoke  SCANPLACE 
 0172  E8 0000 E              1  CALL SCANPLACE
 0175                           SKPBUFF: 
                                        invoke  SKIPVISIT 
 0175  E8 0000 E              1  CALL SKIPVISIT
 0178  75 EA                            JNZ     NXBUFFER 
 017A  26: C5 7E 12                     LDS     DI,ES:[BP.dpb_driver_addr] 
 017E  F7 45 04 2000                    TEST    [DI.SDEVATT],ISFATBYDEV 
 0183  75 0E                            JNZ     GETFREEBUF 
                                        context DS 
 0185  16                     1  PUSH SS
 0186  1F                     1  POP DS
 0187  BB 0002                          MOV     BX,2 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Page     1-10
FATREAD -- CHECK DRIVE GET FAT                              

 018A  E8 0000 R                        CALL    UNPACK                  ; Read 
				the first FAT sector into  CURBUF 
 018D  C5 3E 0000 E                     LDS     DI,[CURBUF] 
 0191  EB 0C                            JMP     SHORT GOTGETBUF 
 0193                           GETFREEBUF: 
                                ASSUME  DS:NOTHING 
 0193  06                               PUSH    ES                      ; Get a
				 free buffer for BIOS to use 
 0194  55                               PUSH    BP 
 0195  36: C5 3E 0000 E                 LDS     DI,[BUFFHEAD] 
                                        invoke  BUFWRITE 
 019A  E8 0000 E              1  CALL BUFWRITE
 019D  5D                               POP     BP 
 019E  07                               POP     ES 
 019F                           GOTGETBUF: 
 019F  83 C7 10                         ADD     DI,BUFINSIZ 
 01A2  36: 8C 1E 0002 E                 MOV     WORD PTR [CALLXAD+2],DS 
 01A7  16                               PUSH    SS 
 01A8  1F                               POP     DS 
                                ASSUME  DS:DOSGROUP 
 01A9  89 3E 0000 E                     MOV     WORD PTR [CALLXAD],DI 
 01AD  B0 16                            MOV     AL,DBPBHL 
 01AF  26: 8A 66 01                     MOV     AH,BYTE PTR ES:[BP.dpb_UNIT] 
 01B3  A3 0000 E                        MOV     WORD PTR [DEVCALL],AX 
 01B6  C6 06 0002 E 02                  MOV     BYTE PTR [DEVCALL.REQFUNC],DEVB
				PB 
 01BB  C7 06 0003 E 0000                MOV     [DEVCALL.REQSTAT],0 
 01C1  26: 8A 46 16                     MOV     AL,BYTE PTR ES:[BP.dpb_media] 
 01C5  A2 0000 E                        MOV     [CALLMED],AL 
 01C8  06                               PUSH    ES 
 01C9  1E                               PUSH    DS 
 01CA  26: FF 76 14                     PUSH    WORD PTR ES:[BP.dpb_driver_addr
				+2] 
 01CE  26: FF 76 12                     PUSH    WORD PTR ES:[BP.dpb_driver_addr
				] 
 01D2  BB 0000 E                        MOV     BX,OFFSET DOSGROUP:DEVCALL 
 01D5  5E                               POP     SI 
 01D6  1F                               POP     DS                      ; DS:SI
				 Points to device header 
                                ASSUME  DS:NOTHING 
 01D7  07                               POP     ES                      ; ES:BX
				 Points to call header 
                                        invoke  DEVIOCALL2 
 01D8  E8 0000 E              1  CALL DEVIOCALL2
 01DB  07                               POP     ES                      ; Resto
				re ES:BP 
 01DC  16                               PUSH    SS 
 01DD  1F                               POP     DS 
                                ASSUME  DS:DOSGROUP 
 01DE  8B 3E 0003 E                     MOV     DI,[DEVCALL.REQSTAT] 
 01E2  F7 C7 8000                       TEST    DI,STERR 
 01E6  75 31                            JNZ     FATERRJ 
 01E8  26: 8A 46 16                     MOV     AL,BYTE PTR ES:[BP.dpb_media] 
 01EC  C5 36 0000 E                     LDS     SI,[CALLBPB] 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Page     1-11
FATREAD -- CHECK DRIVE GET FAT                              

                                ASSUME  DS:NOTHING 
 01F0  3A 44 0A                         CMP     AL,BYTE PTR [SI.BPMEDIA] 
 01F3  74 13                            JZ      DPBOK 
                                        invoke  $SETDPB 
 01F5  E8 0000 E              1  CALL $SETDPB
 01F8  36: C5 3E 0000 E                 LDS     DI,[CALLXAD]            ; Get b
				ack buffer pointer 
 01FD  26: 8A 46 08                     MOV     AL,BYTE PTR ES:[BP.dpb_FAT_coun
				t] 
 0201  26: 8A 66 0F                     MOV     AH,BYTE PTR ES:[BP.dpb_FAT_size
				] 
 0205  89 45 FA                         MOV     WORD PTR [DI.BUFWRTCNT-BUFINSIZ
				],AX   ;Correct buffer info 
 0208                           DPBOK: 
                                        context ds 
 0208  16                     1  PUSH SS
 0209  1F                     1  POP ds
 020A  B8 FFFF                          MOV     AX,-1 
 020D  26: 85 46 1C                     TEST    ES:[BP.dpb_current_dir],AX 
                                        retz                            ; If ro
				ot, leave as root 
 0211  75 01                  3  jnz ??000B
 0213                         4 ??000C:
 0213  C3                     4  RET
 0214                         3  ??000B:
 0214  26: 89 46 1C                     MOV     ES:[BP.dpb_current_dir],AX    ;
				 Path may be bad, mark invalid 
                                        return 
 0218                         1 ??000D:
 0218  C3                     1  RET
                                 
 0219  E9 00F6 R                FATERRJ: JMP    FATERR 
                                 
                                FAT_operation   ENDP 
                                 
                                do_ext 
                                 
 021C                           CODE    ENDS 
                                    END 

Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Symbols-4
                                                             

SRHEAD . . . . . . . . . . . . .  	000D	0005
  REQLEN . . . . . . . . . . . .  	0000
  REQUNIT  . . . . . . . . . . .  	0001
  REQFUNC  . . . . . . . . . . .  	0002
  REQSTAT  . . . . . . . . . . .  	0003
SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYSDEV . . . . . . . . . . . . .  	0012	0005
  SDEVNEXT . . . . . . . . . . .  	0000
  SDEVATT  . . . . . . . . . . .  	0004
  SDEVSTRAT  . . . . . . . . . .  	0006
  SDEVINT  . . . . . . . . . . .  	0008
  SDEVNAME . . . . . . . . . . .  	000A
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016

Segments and Groups:

                N a m e         	Size	Align	Combine Class

DOSGROUP . . . . . . . . . . . .  	GROUP
  CODE . . . . . . . . . . . . .  	021C	BYTE	PUBLIC	'CODE'
  CONSTANTS  . . . . . . . . . .  	0000	BYTE	PUBLIC	'CONST'
  DATA . . . . . . . . . . . . .  	0000	BYTE	PUBLIC	'DATA'
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Symbols-5
                                                             

  LAST . . . . . . . . . . . . .  	0000	BYTE	PUBLIC	'LAST'

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALIGNED  . . . . . . . . . . . .  	L NEAR	0039	CODE
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Number	0000	
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	

BUFFHEAD . . . . . . . . . . . .  	V DWORD	0000	DATA	External
BUFINSIZ . . . . . . . . . . . .  	Number	0010	

CALLBPB  . . . . . . . . . . . .  	V DWORD	0000	DATA	External
CALLMED  . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
CALLRBYT . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
CALLXAD  . . . . . . . . . . . .  	V DWORD	0000	DATA	External
CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHKBUFFDIRT  . . . . . . . . . .  	L NEAR	014F	CODE
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Symbols-6
                                                             

CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
CLUSSAVE . . . . . . . . . . . .  	V WORD 	0000	DATA	External
CLUSSEC  . . . . . . . . . . . .  	V WORD 	0000	DATA	External
CLUSSPLIT  . . . . . . . . . . .  	V BYTE 	0000	DATA	External
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CURBUF . . . . . . . . . . . . .  	V DWORD	0000	DATA	External
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DBPBHL . . . . . . . . . . . . .  	Number	0016	
DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DEVBPB . . . . . . . . . . . . .  	Number	0002	
DEVCALL  . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DEVIFL . . . . . . . . . . . . .  	Number	0007	
DEVINIT  . . . . . . . . . . . .  	Number	0000	
DEVIOCTL . . . . . . . . . . . .  	Number	4000	
DEVIST . . . . . . . . . . . . .  	Number	0006	
DEVMDCH  . . . . . . . . . . . .  	Number	0001	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Symbols-7
                                                             

DEVOFL . . . . . . . . . . . . .  	Number	000B	
DEVOST . . . . . . . . . . . . .  	Number	000A	
DEVRD  . . . . . . . . . . . . .  	Number	0004	
DEVRDIOCTL . . . . . . . . . . .  	Number	0003	
DEVRDND  . . . . . . . . . . . .  	Number	0005	
DEVTYP . . . . . . . . . . . . .  	Number	8000	
DEVWRIOCTL . . . . . . . . . . .  	Number	000C	
DEVWRT . . . . . . . . . . . . .  	Number	0008	
DEVWRTV  . . . . . . . . . . . .  	Number	0009	
DFLSHL . . . . . . . . . . . . .  	Number	000F	
DINITHL  . . . . . . . . . . . .  	Number	001A	
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISK_RESET . . . . . . . . . . .  	Number	000D	
DMEDHL . . . . . . . . . . . . .  	Number	000F	
DOSVER . . . . . . . . . . . . .  	Number	00D3	
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBOK  . . . . . . . . . . . . .  	L NEAR	0208	CODE
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DRDNDHL  . . . . . . . . . . . .  	Number	000E	
DRDWRHL  . . . . . . . . . . . .  	Number	0016	
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DSTATHL  . . . . . . . . . . . .  	Number	000D	
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Symbols-8
                                                             

EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FATERR . . . . . . . . . . . . .  	L NEAR	00F6	CODE
FATERRJ  . . . . . . . . . . . .  	L NEAR	0219	CODE
FATPRI . . . . . . . . . . . . .  	Number	001E	
FATREAD  . . . . . . . . . . . .  	L NEAR	0102	CODE	Global
FAT_OPERATION  . . . . . . . . .  	N PROC	00F6	CODE	Global	Length = 0126
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILPERPROC . . . . . . . . . . .  	Number	0014	
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FREEPRI  . . . . . . . . . . . .  	Number	0000	

GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GETFREEBUF . . . . . . . . . . .  	L NEAR	0193	CODE
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Symbols-9
                                                             

GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GOTGETBUF  . . . . . . . . . . .  	L NEAR	019F	CODE

HAVCLUS  . . . . . . . . . . . .  	L NEAR	0014	CODE
HURTFAT  . . . . . . . . . . . .  	L NEAR	001B	CODE

INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
ISCIN  . . . . . . . . . . . . .  	Number	0001	
ISCLOCK  . . . . . . . . . . . .  	Number	0008	
ISCOUT . . . . . . . . . . . . .  	Number	0002	
ISFATBYDEV . . . . . . . . . . .  	Number	2000	
ISIBM  . . . . . . . . . . . . .  	Number	0010	
ISNULL . . . . . . . . . . . . .  	Number	0004	

KEEP_PROCESS . . . . . . . . . .  	Number	0031	

LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MAPCLUSTER . . . . . . . . . . .  	N PROC	008B	CODE	Global	Length = 006B
MAPRET . . . . . . . . . . . . .  	L NEAR	00ED	CODE
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		

NBUFFER  . . . . . . . . . . . .  	L NEAR	0155	CODE
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Symbols-10
                                                             

NEWDSK . . . . . . . . . . . . .  	L NEAR	0161	CODE
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		
NXBUFFER . . . . . . . . . . . .  	L NEAR	0164	CODE

OEM  . . . . . . . . . . . . . .  	Text  		
OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

PACK . . . . . . . . . . . . . .  	N PROC	0026	CODE	Global	Length = 0065
PACKIN . . . . . . . . . . . . .  	L NEAR	003D	CODE
PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
RET_L  . . . . . . . . . . . . .  	NEAR 	0218	CODE
RET_Z  . . . . . . . . . . . . .  	NEAR 	0213	CODE
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
RPRI . . . . . . . . . . . . . .  	Number	0006	

SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Symbols-11
                                                             

SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SKPBUFF  . . . . . . . . . . . .  	L NEAR	0175	CODE
STBUI  . . . . . . . . . . . . .  	Number	0200	
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDON  . . . . . . . . . . . . .  	Number	0100	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
STECODE  . . . . . . . . . . . .  	Number	00FF	
STERR  . . . . . . . . . . . . .  	Number	8000	

THISDRV  . . . . . . . . . . . .  	V BYTE 	0000	DATA	External

UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
UNPACK . . . . . . . . . . . . .  	N PROC	0000	CODE	Global	Length = 0026
USERIDOPER . . . . . . . . . . .  	Number	005E	

VER  . . . . . . . . . . . . . .  	Text  		

WAIT . . . . . . . . . . . . . .  	Number	004D	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRECODE  . . . . . . . . . . . .  	Number	0000	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	

??0000 . . . . . . . . . . . . .  	L NEAR	001A	CODE
??0001 . . . . . . . . . . . . .  	L NEAR	0025	CODE
??0002 . . . . . . . . . . . . .  	L NEAR	0052	CODE
??0004 . . . . . . . . . . . . .  	L NEAR	008A	CODE
??0005 . . . . . . . . . . . . .  	L NEAR	00F5	CODE
??0006 . . . . . . . . . . . . .  	L NEAR	014E	CODE
??0007 . . . . . . . . . . . . .  	L NEAR	0158	CODE
??000B . . . . . . . . . . . . .  	L NEAR	0214	CODE
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:38:00
FAT - FAT maintenance routines                              Symbols-12
                                                             

??000C . . . . . . . . . . . . .  	L NEAR	0213	CODE
??000D . . . . . . . . . . . . .  	L NEAR	0218	CODE


   1706 Source  Lines
   2110 Total   Lines
    586 Symbols

  20026 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
