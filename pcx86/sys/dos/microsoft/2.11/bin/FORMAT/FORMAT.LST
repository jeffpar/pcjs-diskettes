Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-1
                                                            

                                ;**********************************************
				***************** 
                                ; 
                                ;       86-DOS FORMAT DISK UTILITY 
                                ; 
                                ;       This routine formats a new disk,clears 
				the FAT and DIRECTORY 
                                ;       then optionally copies the SYSTEM and C
				OMMAND.COM to this 
                                ;       new disk 
                                ; 
                                ;       SYNTAX: FORMAT  [drive][/switch1][/swit
				ch2]...[/switch16] 
                                ; 
                                ;       Regardless of the drive designator , th
				e user will be 
                                ;       prompted to insert the diskette to be f
				ormatted. 
                                ; 
                                ;**********************************************
				***************** 
                                 
                                ;Mod to ask for volume ID ARR 5/12/82 
                                ; 05/19/82 Fixed rounding bug in CLUSCAL:      
				 ARR 
                                ;REV 1.5 
                                ;               Added rev number message 
                                ;               Added dir attribute to DELALL F
				CB 
                                ;REV 2.00 
                                ;               Redone for 2.0 
                                ;REV 2.10 
                                ;               5/1/83 ARR Re-do to transfer sy
				stem on small memory systems 
                                 
 = 0000                         FALSE   EQU     0 
 = FFFF                         TRUE    EQU     NOT FALSE 
                                 
 =                              IBMJAPVER EQU   FALSE           ; SET ONLY ONE 
				SWITCH TO TRUE! 
 =                              IBMVER  EQU     FALSE 
 =                              MSVER   EQU     TRUE 
                                 
 =                              KANJI   EQU     FALSE 
                                 
                                        .list 
                                 
                                 
                                ;FORMAT Pre-defined switches 
 = 0001                         SYSSW   EQU     1               ; System transf
				er 
 = 0002                         VOLSW   EQU     2               ; Volume ID pro
				mpt 
 = 0004                         OLDSW   EQU     4               ; E5 dir termin
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-2
                                                            

				ator 
                                 
                                 
 = 005C                         DRNUM   EQU     5CH 
                                 
 = 0015                         RECLEN  EQU     fcb_RECSIZ+7 
 = 0028                         RR      EQU     fcb_RR+7 
                                 
                                ;Per system file data structure 
                                 
                                FILESTRUC       STRUC 
 0000  ????                     FILE_HANDLE     DW      ?               ; Sourc
				e handle 
 0002  ????                     FILE_SIZEP      DW      ?               ; File 
				size in para 
 0004  ????????                 FILE_SIZEB      DD      ?               ; File 
				size in bytes 
 0008  ????????                 FILE_OFFSET     DD      ?               ; Offse
				t in file (partial) 
 000C  ????                     FILE_START      DW      ?               ; Para 
				number of start in buffer 
 000E  ????                     FILE_DATE       DW      ?               ; Date 
				of file 
 0010  ????                     FILE_TIME       DW      ?               ; Time 
				of file 
 0012  ??                       FILE_NAME       DB      ?               ; Start
				 of name 
 0013                           FILESTRUC       ENDS 
                                 
 0000                           CODE    SEGMENT PUBLIC 'CODE' 
                                 
                                        ASSUME  CS:CODE,DS:CODE,ES:CODE 
                                 
 0100                                   ORG     100H 
                                 
                                ;For OEM module 
                                        PUBLIC          SWITCHMAP,DRIVE 
                                        EXTRN           HARDFLAG:BYTE          
				;0 = REMOVABLE MEDIA 
                                        EXTRN           SWITCHLIST:BYTE,FATID:B
				YTE,FATSPACE:WORD 
                                        EXTRN           STARTSECTOR:WORD,FREESP
				ACE:WORD,INIT:NEAR 
                                        EXTRN           DISKFORMAT:NEAR,BADSECT
				OR:NEAR,DONE:NEAR 
                                        EXTRN           WRTFAT:NEAR 
                                 
                                ;For FORMES module 
                                        EXTRN   WAITYN:NEAR,REPORT:NEAR 
                                        PUBLIC  PRINT,CRLF,DISP32BITS,UNSCALE,F
				DSKSIZ,SECSIZ,CLUSSIZ 
                                        PUBLIC  SYSSIZ,BADSIZ 
                                 
 0100                           START: 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-3
                                                            

 0100  EB 09                            JMP     SHORT FSTRT 
                                 
 0102  56 65 72 73 20 32 2E     HEADER  DB      "Vers 2.10" 
       31 30                    
                                 
 010B                           FSTRT: 
 010B  BC 0DD0 R                        MOV     SP,OFFSET STACK         ;Use in
				ternal stack 
                                 
                                ;Code to print header 
                                ;       PUSH    AX 
                                ;       MOV     DX,OFFSET HEADER 
                                ;       CALL    PRINT 
                                ;       POP     AX 
                                 
 = 020B                         DOSVER_HIGH     EQU  020BH   ;2.11 in hex 
 010E  50                               PUSH    AX              ;Save DRIVE val
				idity info 
 010F  B4 30                            MOV     AH,GET_VERSION 
 0111  CD 21                            INT     21H 
 0113  86 E0                            XCHG    AH,AL           ;Turn it around
				 to AH.AL 
 0115  3D 020B                          CMP     AX,DOSVER_HIGH 
 0118  73 09                            JAE     OKDOS 
 011A                           GOTBADDOS: 
 011A  BA 0000 E                        MOV     DX,OFFSET BADVER 
 011D  B4 09                            MOV     AH,STD_CON_STRING_OUTPUT 
 011F  CD 21                            INT     21H 
 0121  CD 20                            INT     20H 
                                 
 0123                           OKDOS: 
                                 
                                        ENDIF 
                                 
 0123  58                               POP     AX 
                                 
 0124  3C FF                            CMP     AL,0FFH                 ;See if
				 invalid drive specified 
 0126  75 09                            JNZ     DRVGD                   ;If not
				 proceed 
 0128  BA 0000 E                        MOV     DX,OFFSET INVDRV        ;Invali
				d drive message 
 012B  E8 048F R                        CALL    PRINT                   ;Print 
				the message 
 012E  E9 04B0 R                        JMP     FEXIT2                  ;Exit 
 0131                           DRVGD: 
 0131  B4 19                            MOV     AH,GET_DEFAULT_DRIVE    ;Must g
				et the default drive 
 0133  CD 21                            INT     21H                     ;Defaul
				t now in AL 
 0135  A2 0B36 R                        MOV     DEFALT,AL               ;Save f
				or later 
 0138  04 41                            ADD     AL,"A" 
 013A  A2 0B97 R                        MOV     [BIODRV],AL 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-4
                                                            

 013D  A2 0BB3 R                        MOV     [DOSDRV],AL 
 0140  A2 0000 E                        MOV     [SYSDRV],AL 
 0143  A2 0BD2 R                        MOV     [COMDRV],AL 
 0146  BE 005C                          MOV     SI,DRNUM                ;So we 
				can get our parameters 
 0149  AC                               LODSB                           ;Fetch 
				drive designation 
 014A  0A C0                            OR      AL,AL                   ;See if
				 specified 
 014C  75 05                            JNZ     DRVSPEC                 ;If spe
				cfied proceed 
 014E  A0 0B36 R                        MOV     AL,DEFALT 
 0151  FE C0                            INC     AL 
 0153                           DRVSPEC: 
 0153  FE C8                            DEC     AL                      ;Drive 
				designator now correct 
 0155  A2 005C                          MOV     BYTE PTR DS:[DRNUM],AL  ;And up
				dated 
 0158  A2 0B35 R                        MOV     DRIVE,AL                ;Save c
				opy 
 015B  BA 08E8 R                        MOV     DX,OFFSET INT_23 
 015E  B4 25                            MOV     AH,SET_INTERRUPT_VECTOR 
 0160  B0 23                            MOV     AL,23H 
 0162  CD 21                            INT     21H                     ;Set ^C
				 vector 
                                        ;Get all the swith information from the
				 command line 
 0164  33 C0                            XOR     AX,AX 
 0166  B4 37                            MOV     AH,CHAR_OPER            ;GET SW
				ITCH CHARACTER 
 0168  CD 21                            INT     21H                     ;CALL T
				HE DOS 
 016A  88 16 0B31 R                     MOV     [SWTCH],DL 
                                 
 016E  33 DB                            XOR     BX,BX                   ;Store 
				switch information in BX 
 0170  BE 0081                          MOV     SI,81H                  ;Point 
				to the command line buffer 
 0173                           NXTSWT: 
 0173  E8 01BD R                        CALL    SCANOFF 
 0176  AC                               LODSB 
 0177  3A 06 0B31 R                     CMP     AL,[SWTCH] 
 017B  74 16                            JZ      GETPARM 
 017D  3C 0D                            CMP     AL,13 
 017F  74 50                            JZ      SAVSWT 
 0181  AC                               LODSB                           ;Get ne
				xt character 
 0182  3C 3A                            CMP     AL,":"                  ;Is it 
				a drive specifier? 
 0184  75 2E                            JNZ     INVALID                 ;No -- 
				invalid parameter 
 0186  80 3E 0B33 R 00                  CMP     BYTE PTR DBLFLG,0       ;Is is 
				the only drive specifier we've seen 
 018B  75 27                            JNZ     INVALID                 ;No -- 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-5
                                                            

				invalid parameter 
 018D  FE 06 0B33 R                     INC     BYTE PTR DBLFLG         ;Yes --
				 set the flag 
 0191  EB E0                            JMP     SHORT NXTSWT 
 0193                           GETPARM: 
 0193  AC                               LODSB 
                                        ;Convert any lower case input into uppe
				r case 
 0194  3C 41                            CMP     AL,41H 
 0196  7C 02                            JL      GETCHR                  ;Switch
				 is a digit don't try to convert it 
 0198  24 DF                            AND     AL,0DFH 
 019A                           GETCHR: 
 019A  8A 0E 0000 E                     MOV     CL,SWITCHLIST           ;Number
				 of legal switches 
 019E  0A C9                            OR      CL,CL                   ;If it'
				s none we shouldn't be here 
 01A0  74 12                            JZ      INVALID                 ;Report
				 the error 
 01A2  B5 00                            MOV     CH,0 
 01A4  BF 0001 E                        MOV     DI,1+OFFSET SWITCHLIST  ;Point 
				to the legal switch characters 
 01A7  F2/ AE                           REPNE   SCASB 
 01A9  75 09                            JNZ     INVALID 
 01AB  B8 0001                          MOV     AX,1 
 01AE  D3 E0                            SHL     AX,CL 
 01B0  0B D8                            OR      BX,AX                   ;Set th
				e appropriate bit in SWITCHMAP 
 01B2  EB BF                            JMP     SHORT NXTSWT            ;See if
				 there are anymore 
                                 
 01B4                           INVALID: 
 01B4  BA 0000 E                        MOV     DX,OFFSET INVPAR 
 01B7  E8 048F R                        CALL    PRINT 
 01BA  E9 04AD R                        JMP     FEXIT 
                                 
 01BD                           SCANOFF: 
 01BD  AC                               LODSB 
 01BE  3C 20                            CMP     AL,20H 
 01C0  74 FB                            JZ      SCANOFF 
 01C2  3C 09                            CMP     AL,9 
 01C4  74 F7                            JZ      SCANOFF 
 01C6  4E                               DEC     SI 
 01C7  C3                               RET 
                                 
 01C8                           MEMERR: 
 01C8  BA 0000 E                        MOV     DX,OFFSET MEMEX 
 01CB  E8 048F R                        CALL    PRINT 
 01CE  E9 04AD R                        JMP     FEXIT 
                                 
                                 
 01D1                           SAVSWT: 
                                 
                                        ENDIF 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-6
                                                            

                                 
 01D1  89 1E 0C62 R                     MOV     SWITCHMAP,BX 
 01D5  F7 06 0C62 R 0001                TEST    SWITCHMAP,SYSSW 
 01DB  74 3D                            JZ      INITCALL 
 01DD  E8 08CA R                        CALL    SAVUDIRS 
 01E0  8B 1E 0000 E                     MOV     BX,[FREESPACE] 
 01E4  83 C3 0F                         ADD     BX,15 
 01E7  B1 04                            MOV     CL,4 
 01E9  D3 EB                            SHR     BX,CL 
 01EB  0E                               PUSH    CS 
 01EC  07                               POP     ES 
 01ED  B4 4A                            MOV     AH,SETBLOCK 
 01EF  CD 21                            INT     21H 
 01F1  BB FFFF                          MOV     BX,0FFFFH 
 01F4  B4 48                            MOV     AH,ALLOC 
 01F6  CD 21                            INT     21H 
 01F8  0B DB                            OR      BX,BX 
 01FA  74 CC                            JZ      MEMERR                  ;No mem
				ory 
 01FC  89 1E 0B3D R                     MOV     [MSIZE],BX 
 0200  B4 48                            MOV     AH,ALLOC 
 0202  CD 21                            INT     21H 
 0204  72 C2                            JC      MEMERR                  ;No mem
				ory 
 0206  A3 0B3B R                        MOV     [MSTART],AX 
 0209  BA 0B31 R                        MOV     DX,OFFSET SWTCH 
 020C  B4 3B                            MOV     AH,CHDIR 
 020E  CD 21                            INT     21H                     ;Go to 
				root on default drive (source) 
                                 
 0210                           RDFRST: 
 0210  E8 0647 R                        CALL    READDOS                 ;Read B
				IOS and DOS 
 0213  73 05                            JNC     INITCALL                ;OK -- 
				read next file 
 0215                           NEEDSYS: 
 0215  E8 04B2 R                        CALL    SYSPRM                  ;Prompt
				 for system disk 
 0218  EB F6                            JMP     RDFRST                  ;Try ag
				ain 
                                 
 021A                           INITCALL: 
 021A  E8 0000 E                        CALL    INIT                    ;Let OE
				M read any files before disk is changed 
 021D  73 09                            JNC     SWITCHCHK 
 021F  BA 0000 E                        MOV     DX,OFFSET FRMTERR 
 0222  E8 048F R                        CALL    PRINT 
 0225  E9 04AD R                        JMP     FEXIT 
                                 
 0228                           SWITCHCHK: 
 0228  8B 16 0C62 R                     MOV     DX,SWITCHMAP 
 022C  89 16 0C64 R                     MOV     SWITCHCOPY,DX 
                                 
 0230                           SYSLOOP: 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-7
                                                            

 0230  C7 06 0C76 R 0000                MOV     WORD PTR BADSIZ,0       ;Must i
				ntialize for each iteration 
 0236  C7 06 0C78 R 0000                MOV     WORD PTR BADSIZ+2,0 
 023C  C7 06 0C6E R 0000                MOV     WORD PTR SYSSIZ,0 
 0242  C7 06 0C70 R 0000                MOV     WORD PTR SYSSIZ+2,0 
 0248  C6 06 0B33 R 00                  MOV     BYTE PTR DBLFLG,0 
 024D  C6 06 0B34 R 00                  MOV     BYTE PTR CLEARFLG,0 
 0252  8B 16 0C64 R                     MOV     DX,SWITCHCOPY 
 0256  89 16 0C62 R                     MOV     SWITCHMAP,DX            ;Restor
				e original Switches 
 025A  A0 0B35 R                        MOV     AL,DRIVE                ;Fetch 
				drive 
 025D  04 41                            ADD     AL,"A"                  ;(AL)= 
				ASCII designation 
 025F  A2 0000 E                        MOV     BYTE PTR SNGDRV,AL      ;Fill o
				ut the message 
 0262  A2 0000 E                        MOV     BYTE PTR TARGDRV,AL 
 0265  A2 0000 E                        MOV     BYTE PTR HRDDRV,AL 
 0268  E8 04D5 R                        CALL    DSKPRM                  ;Prompt
				 for new disk 
 026B  E8 0000 E                        CALL    DISKFORMAT              ;Format
				 the disk 
 026E  73 08                            JNC     GETTRK 
 0270                           FRMTPROB: 
 0270  BA 0000 E                        MOV     DX,OFFSET FRMTERR 
 0273  E8 048F R                        CALL    PRINT 
 0276  EB B8                            JMP     SHORT SYSLOOP 
                                 
                                        ;Mark any bad sectors in the FATs 
                                        ;And keep track of how many bytes there
				 are in bad sectors 
                                 
 0278                           GETTRK: 
 0278  E8 0000 E                        CALL    BADSECTOR               ;Do bad
				 track fix-up 
 027B  72 F3                            JC      FRMTPROB                ;Had an
				 error in Formatting - can't recover 
 027D  3D 0000                          CMP     AX,0                    ;Are we
				 finished? 
 0280  75 03                            JNZ     TRKFND                  ;No - c
				heck error conditions 
 0282  E9 0365 R                        JMP     DRTFAT                  ;Yes 
 0285                           TRKFND: 
 0285  3B 1E 0000 E                     CMP     BX,STARTSECTOR          ;Are an
				y sectors in the system area bad? 
 0289  7D 08                            JGE     CLRTEST 
 028B  BA 0000 E                        MOV     DX,OFFSET NOUSE         ;Can't 
				build FATs of Directory 
 028E  E8 048F R                        CALL    PRINT 
 0291  EB DD                            JMP     FRMTPROB                ;Bad di
				sk -- try again 
 0293                           CLRTEST: 
 0293  A3 0C7C R                        MOV     SECTORS,AX              ;Save t
				he number of sectors on the track 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-8
                                                            

 0296  80 3E 0B34 R 00                  CMP     BYTE PTR CLEARFLG,0     ;Have w
				e already cleared the FAT and DIR? 
 029B  75 09                            JNZ     SYSTEST                 ;Yes - 
				all set 
 029D  FE 06 0B34 R                     INC     CLEARFLG                ;Set th
				e flag 
 02A1  53                               PUSH    BX 
 02A2  E8 051D R                        CALL    CLEAR                   ;Fix-up
				 fat and directory 
 02A5  5B                               POP     BX 
 02A6                           SYSTEST: 
 02A6  F7 06 0C62 R 0001                TEST    SWITCHMAP,SYSSW         ;If sys
				tem requested calculate size 
 02AC  74 3E                            JZ      BAD100 
 02AE  80 3E 0B33 R 00                  CMP     BYTE PTR DBLFLG,0       ;Have w
				e already calculated System space? 
 02B3  75 19                            JNZ     CMPTRKS                 ;Yes --
				 all ready for the compare 
 02B5  FE 06 0B33 R                     INC     BYTE PTR DBLFLG         ;No -- 
				set the flag 
 02B9  E8 044A R                        CALL    GETSIZE                 ;Calcul
				ate the system size 
 02BC  8B 16 0C70 R                     MOV     DX,WORD PTR SYSSIZ+2 
 02C0  A1 0C6E R                        MOV     AX,WORD PTR SYSSIZ 
 02C3  F7 36 0C6C R                     DIV     SECSIZ 
 02C7  03 06 0000 E                     ADD     AX,STARTSECTOR 
 02CB  A3 0C7A R                        MOV     SYSTRKS,AX              ;Space 
				FAT,Dir,and system files require 
 02CE                           CMPTRKS: 
 02CE  3B 1E 0C7A R                     CMP     BX,SYSTRKS 
 02D2  7F 18                            JG      BAD100 
 02D4  BA 0000 E                        MOV     DX,OFFSET NOTSYS        ;Can't 
				transfer a system 
 02D7  E8 048F R                        CALL    PRINT 
 02DA  81 26 0C62 R FFFE                AND     SWITCHMAP,NOT SYSSW     ;Turn o
				ff system transfer switch 
 02E0  C7 06 0C70 R 0000                MOV     WORD PTR SYSSIZ+2,0     ;No sys
				tem to transfer 
 02E6  C7 06 0C6E R 0000                MOV     WORD PTR SYSSIZ,0       ;No sys
				tem to transfer 
 02EC                           BAD100: 
                                ; BX is the first bad sector #, SECTORS is the 
				number of bad sectors starting 
                                ; at BX. This needs to be converted to clusters
				. The start sector number may 
                                ; need to be rounded down to a cluster boundry,
				 the end sector may need to be 
                                ; rounded up to a cluster boundry. Know BX >= S
				TARTSECTOR 
 02EC  2B 1E 0000 E                     SUB     BX,STARTSECTOR          ; BX is
				 now DATA area relative 
 02F0  8B CB                            MOV     CX,BX 
 02F2  03 0E 0C7C R                     ADD     CX,SECTORS 
 02F6  49                               DEC     CX                      ; CX is
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-9
                                                            

				 now the last bad sector # 
 02F7  8B C3                            MOV     AX,BX 
 02F9  33 D2                            XOR     DX,DX 
 02FB  F7 36 0C6A R                     DIV     CLUSSIZ 
 02FF  8B D8                            MOV     BX,AX                   ; BX is
				 rounded down and converted 
                                                                        ; to a 
				cluster #. Where cluster 0 = 
                                                                        ; first
				 cluster of data. First bad 
                                                                        ; Secto
				r is in cluster BX. 
 0301  8B C1                            MOV     AX,CX 
 0303  33 D2                            XOR     DX,DX 
 0305  F7 36 0C6A R                     DIV     CLUSSIZ 
 0309  8B C8                            MOV     CX,AX                   ; CX is
				 rounded up and converted to a 
                                                                        ; to a 
				cluster #. Where cluster 0 = 
                                                                        ; first
				 cluster of data. Last bad 
                                                                        ; Secto
				r is in cluster CX. 
 030B  2B CB                            SUB     CX,BX 
 030D  41                               INC     CX                      ; CX is
				 number of clusters to mark bad 
 030E  83 C3 02                         ADD     BX,2                    ; Bias 
				start by correct amount since 
                                                                        ; first
				 cluster of data is really 
                                                                        ; clust
				er 2. 
 0311  A1 0C6A R                        MOV     AX,CLUSSIZ              ; Secto
				rs/Cluster 
 0314  F7 26 0C6C R                     MUL     SECSIZ                  ; Times
				 Bytes/Sector 
 0318  8B E8                            MOV     BP,AX                   ; = Byt
				es/Cluster 
                                 
                                ; Mark CX clusters bad starting at cluster BX 
 031A                           PACKIT: 
 031A  BA 0FF7                          MOV     DX,0FF7H                ;0FF7H 
				indicates a bad sector 
 031D  E8 0334 R                        CALL    PACK                    ;Put it
				 in the allocation map 
 0320  3B D7                            CMP     DX,DI                   ;Have w
				e already marked it bad? 
 0322  74 0A                            JZ      BAD150                  ;if so,
				 don't add it in 
 0324  01 2E 0C76 R                     ADD     WORD PTR BADSIZ,BP      ;Add in
				 number of bad bytes 
 0328  73 04                            JNB     BAD150 
 032A  FF 06 0C78 R                     INC     WORD PTR BADSIZ+2 
 032E                           BAD150: 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-10
                                                            

 032E  43                               INC     BX                      ;Next c
				luster 
 032F  E2 E9                            LOOP    PACKIT                  ;Contin
				ue for # of clusters 
 0331  E9 0278 R                        JMP     GETTRK 
                                 
                                ; Inputs: 
                                        ;BX = Cluster number 
                                        ;DX = Data 
                                ; Outputs: 
                                        ;The data is stored in the FAT at the g
				iven cluster. 
                                        ;SI is destroyed 
                                        ;DI contains the former contents 
                                        ;No other registers affected 
 0334                           PACK: 
 0334  53                               PUSH    BX 
 0335  51                               PUSH    CX 
 0336  52                               PUSH    DX 
 0337  8B F3                            MOV     SI,BX 
 0339  D1 EB                            SHR     BX,1 
 033B  03 1E 0000 E                     ADD     BX,FATSPACE 
 033F  03 DE                            ADD     BX,SI 
 0341  D1 EE                            SHR     SI,1 
 0343  8B 37                            MOV     SI,WORD PTR [BX] 
 0345  8B FE                            MOV     DI,SI 
 0347  73 0C                            JNB     ALIGNED 
 0349  B1 04                            MOV     CL,4 
 034B  D3 E2                            SHL     DX,CL 
 034D  D3 EF                            SHR     DI,CL 
 034F  81 E6 000F                       AND     SI,15 
 0353  EB 04                            JMP     SHORT PACKIN 
                                 
 0355                           ALIGNED: 
 0355  81 E6 F000                       AND     SI,0F000H 
 0359                           PACKIN: 
 0359  81 E7 0FFF                       AND     DI,00FFFH               ;DI CON
				TAINS FORMER CONTENTS 
 035D  0B F2                            OR      SI,DX 
 035F  89 37                            MOV     WORD PTR[BX],SI 
 0361  5A                               POP     DX 
 0362  59                               POP     CX 
 0363  5B                               POP     BX 
 0364  C3                               RET 
                                 
 0365                           DRTFAT: 
 0365  80 3E 0B34 R 00                  CMP     BYTE PTR CLEARFLG,0 
 036A  75 19                            JNZ     CLEARED 
 036C  E8 051D R                        CALL    CLEAR                   ;Clear 
				the FAT and Dir 
 036F  F7 06 0C62 R 0001                TEST    SWITCHMAP,SYSSW         ;If sys
				tem requested, calculate size 
 0375  74 0E                            JZ      CLEARED 
 0377  80 3E 0B33 R 00                  CMP     BYTE PTR DBLFLG,0       ;Have w
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-11
                                                            

				e already calculated System space? 
 037C  75 07                            JNZ     CLEARED                 ;Yes 
 037E  FE 06 0B33 R                     INC     BYTE PTR DBLFLG         ;No -- 
				set the flag 
 0382  E8 044A R                        CALL    GETSIZE                 ;Calcul
				ate the system size 
 0385                           CLEARED: 
 0385  E8 0000 E                        CALL    WRTFAT 
 0388  73 09                            JNC     FATWRT 
 038A  BA 0000 E                        MOV     DX,OFFSET NOUSE 
 038D  E8 048F R                        CALL    PRINT 
 0390  E9 0270 R                        JMP     FRMTPROB 
                                 
 0393                           FATWRT: 
                                 
 0393  F7 06 0C62 R 0001                TEST    SWITCHMAP,SYSSW         ;System
				 desired 
 0399  74 1F                            JZ      STATUS 
 039B  E8 0758 R                        CALL    WRITEDOS                ;Write 
				the BIOS & DOS 
 039E  73 14                            JNC     SYSOK 
 03A0  BA 0000 E                        MOV     DX,OFFSET NOTSYS        ;Can't 
				transfer a system 
 03A3  E8 048F R                        CALL    PRINT 
 03A6  C7 06 0C70 R 0000                MOV     WORD PTR SYSSIZ+2,0     ;No sys
				tem transfered 
 03AC  C7 06 0C6E R 0000                MOV     WORD PTR SYSSIZ,0       ;No sys
				tem transfered 
 03B2  EB 06                            JMP     SHORT STATUS 
                                 
 03B4                           SYSOK: 
 03B4  BA 0000 E                        MOV     DX,OFFSET SYSTRAN 
 03B7  E8 048F R                        CALL    PRINT 
 03BA                           STATUS: 
 03BA  E8 04A3 R                        CALL    CRLF 
 03BD  E8 05D3 R                        CALL    VOLID 
 03C0  B4 0D                            MOV     AH,DISK_RESET 
 03C2  CD 21                            INT     21H 
 03C4  E8 0000 E                        CALL    DONE                    ;Final 
				call to OEM module 
 03C7  73 03                            JNC     REPORTC 
 03C9  E9 0270 R                        JMP     FRMTPROB                ;Report
				 an error 
                                 
 03CC                           REPORTC: 
 03CC  E8 0000 E                        CALL    REPORT 
                                 
 03CF  E8 0494 R                        CALL    MORE                    ;See if
				 more disks to format 
 03D2  E9 0230 R                        JMP     SYSLOOP                 ;If we 
				returned from MORE then continue 
                                 
 03D5                           DISP32BITS: 
 03D5  53                               PUSH    BX 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-12
                                                            

 03D6  33 C0                            XOR     AX,AX 
 03D8  8B D8                            MOV     BX,AX 
 03DA  8B E8                            MOV     BP,AX 
 03DC  B9 0020                          MOV     CX,32 
 03DF                           CONVLP: 
 03DF  D1 E6                            SHL     SI,1 
 03E1  D1 D7                            RCL     DI,1 
 03E3  95                               XCHG    AX,BP 
 03E4  E8 0435 R                        CALL    CONVWRD 
 03E7  95                               XCHG    AX,BP 
 03E8  93                               XCHG    AX,BX 
 03E9  E8 0435 R                        CALL    CONVWRD 
 03EC  93                               XCHG    AX,BX 
 03ED  14 00                            ADC     AL,0 
 03EF  E2 EE                            LOOP    CONVLP 
                                        ; Conversion complete. Print 8-digit nu
				mber with 2 leading blanks. 
 03F1  B9 1810                          MOV     CX,1810H 
 03F4  92                               XCHG    DX,AX 
 03F5  E8 0420 R                        CALL    DIGIT 
 03F8  93                               XCHG    AX,BX 
 03F9  E8 040A R                        CALL    OUTWORD 
 03FC  95                               XCHG    AX,BP 
 03FD  E8 040A R                        CALL    OUTWORD 
 0400  5A                               POP     DX 
 0401  83 FA 00                         CMP     DX,0 
 0404  74 03                            JZ      RET3 
 0406  E8 048F R                        CALL    PRINT 
 0409  C3                       RET3:   RET 
                                 
 040A                           OUTWORD: 
 040A  50                               PUSH    AX 
 040B  8A D4                            MOV     DL,AH 
 040D  E8 0411 R                        CALL    OUTBYTE 
 0410  5A                               POP     DX 
 0411                           OUTBYTE: 
 0411  8A F2                            MOV     DH,DL 
 0413  D0 EA                            SHR     DL,1 
 0415  D0 EA                            SHR     DL,1 
 0417  D0 EA                            SHR     DL,1 
 0419  D0 EA                            SHR     DL,1 
 041B  E8 0420 R                        CALL    DIGIT 
 041E  8A D6                            MOV     DL,DH 
 0420                           DIGIT: 
 0420  80 E2 0F                         AND     DL,0FH 
 0423  74 02                            JZ      BLANKZER 
 0425  B1 00                            MOV     CL,0 
 0427                           BLANKZER: 
 0427  FE CD                            DEC     CH 
 0429  22 CD                            AND     CL,CH 
 042B  80 CA 30                         OR      DL,30H 
 042E  2A D1                            SUB     DL,CL 
 0430  B4 02                            MOV     AH,STD_CON_OUTPUT 
 0432  CD 21                            INT     21H 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-13
                                                            

 0434  C3                               RET 
                                 
 0435                           CONVWRD: 
 0435  12 C0                            ADC     AL,AL 
 0437  27                               DAA 
 0438  86 C4                            XCHG    AL,AH 
 043A  12 C0                            ADC     AL,AL 
 043C  27                               DAA 
 043D  86 C4                            XCHG    AL,AH 
 043F  C3                       RET2:   RET 
                                 
 0440                           UNSCALE: 
 0440  D1 E9                            SHR     CX,1 
 0442  72 FB                            JC      RET2 
 0444  D1 E0                            SHL     AX,1 
 0446  D1 D2                            RCL     DX,1 
 0448  EB F6                            JMP     SHORT UNSCALE 
                                 
                                 
                                ;****************************************** 
                                ; Calculate the size in bytes of the system rou
				nded up to sector and 
                                ;   cluster boundries, Answer in SYSSIZ 
                                 
 044A                           GETSIZE: 
 044A  A1 0B89 R                        MOV     AX,WORD PTR BIOSSIZB           
				   ;And calculate the system size 
 044D  8B 16 0B8B R                     MOV     DX,WORD PTR BIOSSIZB+2 
 0451  E8 0465 R                        CALL    FNDSIZ 
 0454  A1 0BA5 R                        MOV     AX,WORD PTR DOSSIZB 
 0457  8B 16 0BA7 R                     MOV     DX,WORD PTR DOSSIZB+2 
 045B  E8 0465 R                        CALL    FNDSIZ 
 045E  A1 0BC4 R                        MOV     AX,WORD PTR COMSIZB 
 0461  8B 16 0BC6 R                     MOV     DX,WORD PTR COMSIZB+2 
                                 
                                ;Calculate the number of sectors used for the s
				ystem 
 0465                           FNDSIZ: 
 0465  F7 36 0C6C R                     DIV     SECSIZ 
 0469  0B D2                            OR      DX,DX 
 046B  74 01                            JZ      FNDSIZ0 
 046D  40                               INC     AX                      ; Round
				 up to next sector 
 046E                           FNDSIZ0: 
 046E  50                               PUSH    AX 
 046F  33 D2                            XOR     DX,DX 
 0471  F7 36 0C6A R                     DIV     CLUSSIZ 
 0475  58                               POP     AX 
 0476  0B D2                            OR      DX,DX 
 0478  74 08                            JZ      ONCLUS 
 047A  2B 16 0C6A R                     SUB     DX,CLUSSIZ 
 047E  F7 DA                            NEG     DX 
 0480  03 C2                            ADD     AX,DX                   ; Round
				 up sector count to cluster 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-14
                                                            

                                                                        ;      
				 boundry 
 0482                           ONCLUS: 
 0482  F7 26 0C6C R                     MUL     SECSIZ                  ; Turn 
				it back into bytes 
 0486  01 06 0C6E R                     ADD     WORD PTR SYSSIZ,AX 
 048A  11 16 0C70 R                     ADC     WORD PTR SYSSIZ+2,DX 
 048E  C3                               RET 
                                 
 048F  B4 09                    PRINT:  MOV     AH,STD_CON_STRING_OUTPUT       
				      ;Print msg pointed to by DX 
 0491  CD 21                            INT     21H 
 0493  C3                               RET 
                                 
 0494  80 3E 0000 E 00          MORE:   CMP     BYTE PTR [HARDFLAG],0   ;Check 
				if removable media 
 0499  75 12                            JNZ     FEXIT 
 049B  E8 0000 E                        CALL    WAITYN                  ;Get ye
				s or no response 
 049E  72 0D                            JB      FEXIT                   ;Exit i
				f CF=1 
 04A0  E8 04A3 R                        CALL    CRLF 
 04A3                           CRLF: 
 04A3  BA 0000 E                        MOV     DX,OFFSET CRLFMSG 
 04A6  E8 048F R                        CALL    PRINT 
 04A9  C3                               RET 
                                 
 04AA  E8 048F R                PERROR: CALL    PRINT                   ;Print 
				message and exit 
 04AD                           FEXIT: 
 04AD  E8 08D8 R                        CALL    RESTUDIR                ;Restor
				e users dirs 
 04B0                           FEXIT2: 
 04B0  CD 20                            INT     20H 
                                 
                                        ;Prompt the user for a system diskette 
				in the default drive 
 04B2                           SYSPRM: 
 04B2  B4 19                            MOV     AH,GET_DEFAULT_DRIVE    ;Will f
				ind out the default drive 
 04B4  CD 21                            INT     21H                     ;Defaul
				t now in AL 
                                  ENDIF 
 04B6  04 41                            ADD     AL,41H                  ;Now in
				 Ascii 
 04B8  A2 0000 E                        MOV     SYSDRV,AL               ;Text n
				ow ok 
                                 
                                  ENDIF 
                                 
 04BB  BA 0000 E                        MOV     DX,OFFSET SYSMSG 
 04BE  E8 048F R                        CALL    PRINT                   ;Print 
				first line 
 04C1  E8 04EF R                        CALL    WAITKY                  ;Wait f
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-15
                                                            

				or a key 
 04C4  E8 04A3 R                        CALL    CRLF 
 04C7  C3                               RET 
                                 
 04C8                           TARGPRM: 
 04C8  BA 0000 E                        MOV     DX,OFFSET TARGMSG 
 04CB  E8 048F R                        CALL    PRINT                   ;Print 
				first line 
 04CE  E8 04EF R                        CALL    WAITKY                  ;Wait f
				or a key 
 04D1  E8 04A3 R                        CALL    CRLF 
 04D4  C3                               RET 
                                 
 04D5                           DSKPRM: 
 04D5  BA 0000 E                        MOV     DX,OFFSET SNGMSG        ;Point 
				to the message 
 04D8  80 3E 0000 E 00                  CMP     BYTE PTR [HARDFLAG],0   ;Check 
				if removable media 
 04DD  74 03                            JZ      GOPRNIT 
 04DF  BA 0000 E                        MOV     DX,OFFSET HRDMSG 
 04E2                           GOPRNIT: 
 04E2  E8 048F R                        CALL    PRINT                   ;Print 
				the message 
 04E5  E8 04EF R                        CALL    WAITKY                  ;Wait f
				or space bar 
 04E8  E8 04A3 R                        CALL    CRLF 
 04EB  E8 04A3 R                        CALL    CRLF 
 04EE  C3                               RET 
                                 
                                        ;Will wait for any key to be depressed.
				 
 04EF                           WAITKY: 
 04EF  B8 0C08                          MOV     AX,(STD_CON_INPUT_FLUSH SHL 8) 
				OR STD_CON_INPUT_NO_ECHO 
 04F2  CD 21                            INT     21H 
 04F4  B8 0C00                          MOV     AX,(STD_CON_INPUT_FLUSH SHL 8) 
				+ 0 
 04F7  CD 21                            INT     21H 
                                 
                                        return 
 04F9                         1 ??0000:
 04F9  C3                     1  RET
                                 
 04FA  8A 16 0B35 R             FDPB:   MOV     DL,DRIVE 
 04FE  FE C2                            INC     DL 
 0500  B4 32                            MOV     AH,GET_DPB 
 0502  1E                               PUSH    DS 
 0503  CD 21                            INT     21H 
 0505  FE C0                            INC     AL 
 0507  74 0E                            JZ      DRVERR 
 0509  8B 57 0D                         MOV     DX,WORD PTR [BX+13] 
 050C  4A                               DEC     DX 
 050D  8A 47 04                         MOV     AL,BYTE PTR [BX+4] 
 0510  FE C0                            INC     AL 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-16
                                                            

 0512  8B 4F 02                         MOV     CX,WORD PTR [BX+2] 
 0515  1F                               POP     DS 
 0516  C3                               RET 
 0517                           DRVERR: 
 0517  1F                               POP     DS 
 0518  BA 0000 E                        MOV     DX,OFFSET INVDRV 
 051B  EB 8D                            JMP     PERROR 
                                 
                                        ;Clear the FAT and directory and set Di
				rty byte in the FAT 
 051D                           CLEAR: 
 051D  A0 0000 E                        MOV     AL,FATID 
 0520  0C F8                            OR      AL,0F8H                 ;Make s
				ure it's a legal value 
 0522  B4 FF                            MOV     AH,0FFH 
 0524  8B 3E 0000 E                     MOV     DI,FATSPACE 
 0528  89 05                            MOV     WORD PTR[DI],AX 
 052A  88 65 02                         MOV     BYTE PTR[DI+2],AH 
 052D  B4 0D                            MOV     AH,DISK_RESET 
 052F  CD 21                            INT     21H 
 0531  E8 0000 E                        CALL    WRTFAT 
                                 
                                        ENDIF 
                                 
 0534  E8 04FA R                        CALL    FDPB 
 0537  89 16 0C72 R                     MOV     WORD PTR FDSKSIZ,DX 
 053B  89 0E 0C6C R                     MOV     SECSIZ,CX 
 053F  B4 00                            MOV     AH,0 
 0541  A3 0C6A R                        MOV     CLUSSIZ,AX 
 0544  D1 EA                            SHR     DX,1 
 0546  73 01                            JNC     ROUNDED 
 0548  42                               INC     DX 
 0549                           ROUNDED: 
 0549  03 16 0C72 R                     ADD     DX,WORD PTR FDSKSIZ 
 054D  33 C0                            XOR     AX,AX 
 054F  8B CA                            MOV     CX,DX 
 0551  8B 3E 0000 E                     MOV     DI,FATSPACE 
 0555  83 C7 03                         ADD     DI,3 
 0558  F3/ AA                           REP     STOSB 
 055A  B4 0D                            MOV     AH,DISK_RESET 
 055C  CD 21                            INT     21H 
 055E  E8 0000 E                        CALL    WRTFAT 
 0561  8A 16 0B35 R                     MOV     DL,[DRIVE] 
 0565  80 C2 41                         ADD     DL,'A' 
 0568  88 16 0B2F R                     MOV     [ROOTSTR],DL 
 056C  BA 0B2F R                        MOV     DX,OFFSET ROOTSTR 
 056F  B4 3B                            MOV     AH,CHDIR 
 0571  CD 21                            INT     21H                     ;Go to 
				root on target drive 
 0573  A0 0B35 R                        MOV     AL,DRIVE 
 0576  FE C0                            INC     AL 
 0578  A2 0C16 R                        MOV     ALLDRV,AL 
 057B  B4 13                            MOV     AH,FCB_DELETE 
 057D  BA 0C0F R                        MOV     DX,OFFSET ALLFILE 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-17
                                                            

 0580  CD 21                            INT     21H 
                                 
 0582  F7 06 0C62 R 0004                TEST    SWITCHMAP,OLDSW         ;See if
				 E5 terminated DIR requested 
 0588  74 48                            JZ      RET25 
 058A  A0 0B35 R                        MOV     AL,DRIVE 
 058D  FE C0                            INC     AL 
 058F  A2 0C3C R                        MOV     BYTE PTR CLEANFILE,AL          
				    ;Get the drive 
 0592  BA 0C3C R                        MOV     DX,OFFSET CLEANFILE 
 0595  B4 16                            MOV     AH,FCB_CREATE 
 0597                           MAKE_NEXT: 
 0597  CD 21                            INT     21H 
 0599  0A C0                            OR      AL,AL 
 059B  75 26                            JNZ     DELETE_THEM 
 059D  FE 06 0C3D R                     INC     BYTE PTR CLNNAM 
 05A1  80 3E 0C3D R 5B                  CMP     BYTE PTR CLNNAM,"Z" + 1 
 05A6  75 EF                            JNZ     MAKE_NEXT 
 05A8  C6 06 0C3D R 41                  MOV     BYTE PTR CLNNAM,"A" 
 05AD  FE 06 0C3E R                     INC     BYTE PTR CLNNAM + 1 
 05B1  80 3E 0C3E R 5B                  CMP     BYTE PTR CLNNAM + 1,"Z" + 1 
 05B6  75 DF                            JNZ     MAKE_NEXT 
 05B8  C6 06 0C3E R 41                  MOV     BYTE PTR CLNNAM + 1,"A" 
 05BD  FE 06 0C3F R                     INC     BYTE PTR CLNNAM + 2 
 05C1  EB D4                            JMP     MAKE_NEXT 
                                 
 05C3                           DELETE_THEM: 
 05C3  C7 06 0C3D R 3F3F                MOV     WORD PTR CLNNAM,"??" 
 05C9  C6 06 0C3F R 3F                  MOV     BYTE PTR CLNNAM + 2,"?" 
 05CE  B4 13                            MOV     AH,FCB_DELETE 
 05D0  CD 21                            INT     21H 
 05D2                           RET25: 
 05D2  C3                               RET                             ;And re
				turn 
                                 
                                 
                                ;***************************************** 
                                ; Process V switch if set 
                                 
 05D3                           VOLID: 
 05D3  F7 06 0C62 R 0002                TEST    [SWITCHMAP],VOLSW 
 05D9  75 02                            JNZ     DOVOL 
 05DB  F8                       VRET:   CLC 
 05DC  C3                               RET 
                                 
 05DD                           DOVOL: 
 05DD  51                               PUSH    CX 
 05DE  56                               PUSH    SI 
 05DF  57                               PUSH    DI 
 05E0  06                               PUSH    ES 
 05E1  1E                               PUSH    DS 
 05E2  07                               POP     ES 
 05E3                           VOL_LOOP: 
 05E3  A0 0B35 R                        MOV     AL,DRIVE 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-18
                                                            

 05E6  FE C0                            INC     AL 
 05E8  A2 0BE8 R                        MOV     DS:BYTE PTR[VOLFCB+7],AL 
 05EB  BA 0000 E                        MOV     DX,OFFSET LABPRMT 
 05EE  E8 048F R                        CALL    PRINT 
 05F1  BA 0C7E R                        MOV     DX,OFFSET INBUFF 
 05F4  B4 0A                            MOV     AH,STD_CON_STRING_INPUT 
 05F6  CD 21                            INT     21H 
 05F8  BA 0000 E                        MOV     DX,OFFSET CRLFMSG 
 05FB  E8 048F R                        CALL    PRINT 
 05FE  BA 0000 E                        MOV     DX,OFFSET CRLFMSG 
 0601  E8 048F R                        CALL    PRINT 
 0604  8A 0E 0C7F R                     MOV     CL,[INBUFF+1] 
 0608  0A C9                            OR      CL,CL 
 060A  74 36                            JZ      VOLRET 
 060C  32 ED                            XOR     CH,CH 
 060E  BE 0C80 R                        MOV     SI,OFFSET INBUFF+2 
 0611  8B FE                            MOV     DI,SI 
 0613  03 F9                            ADD     DI,CX 
 0615  B9 000B                          MOV     CX,11 
 0618  B0 20                            MOV     AL,' ' 
 061A  F3/ AA                           REP     STOSB 
 061C  B9 0005                          MOV     CX,5 
 061F  BF 0BE9 R                        MOV     DI,OFFSET VOLNAM 
 0622  F3/ A5                           REP     MOVSW 
 0624  A4                               MOVSB 
 0625  BA 0BE1 R                        MOV     DX,OFFSET VOLFCB 
 0628  B4 16                            MOV     AH,FCB_CREATE 
 062A  CD 21                            INT     21H 
 062C  0A C0                            OR      AL,AL 
 062E  74 08                            JZ      GOOD_CREATE 
 0630  BA 0000 E                        MOV     DX,OFFSET INVCHR        ;PRINT 
				INVALID CHARS MESSAGE 
 0633  E8 048F R                        CALL    PRINT 
 0636  EB AB                            JMP     VOL_LOOP 
 0638                           GOOD_CREATE: 
 0638  BA 0BE1 R                        MOV     DX,OFFSET VOLFCB 
 063B  B4 10                            MOV     AH,FCB_CLOSE 
 063D  CD 21                            INT     21H 
 063F  E8 04A3 R                        CALL    CRLF 
 0642                           VOLRET: 
 0642  07                               POP     ES 
 0643  5F                               POP     DI 
 0644  5E                               POP     SI 
 0645  59                               POP     CX 
 0646  C3                               RET 
                                 
                                ;**************************************** 
                                ;Copy IO.SYS, MSDOS.SYS and COMMAND.COM into da
				ta area. 
                                ; Carry set if problems 
                                 
 0647                           READDOS: 
 0647  E8 099E R                        CALL    TESTSYSDISK 
 064A  73 01                            JNC     RDFILS 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-19
                                                            

 064C  C3                               RET 
                                 
 064D                           RDFILS: 
 064D  C6 06 0B41 R 00                  MOV     BYTE PTR [FILSTAT],0 
 0652  8B 1E 0B85 R                     MOV     BX,[BIOSHandle] 
 0656  A1 0B3B R                        MOV     AX,[MSTART] 
 0659  8B D0                            MOV     DX,AX 
 065B  03 16 0B3D R                     ADD     DX,[MSIZE]              ; CX fi
				rst bad para 
 065F  A3 0B91 R                        MOV     [BIOSSTRT],AX 
 0662  8B 0E 0B87 R                     MOV     CX,[BIOSSIZP] 
 0666  03 C1                            ADD     AX,CX 
 0668  3B C2                            CMP     AX,DX 
 066A  76 2E                            JBE     GOTBIOS 
 066C  C6 06 0B41 R 01                  MOV     BYTE PTR [FILSTAT],00000001B   
				  ; Got part of BIOS 
 0671  8B 36 0B3D R                     MOV     SI,[MSIZE] 
 0675  33 FF                            XOR     DI,DI 
 0677  E8 0B04 R                        CALL    DISIX4 
 067A  8E 1E 0B91 R                     MOV     DS,[BIOSSTRT] 
                                ASSUME  DS:NOTHING 
 067E  E8 0A8A R                        CALL    READFILE 
                                ASSUME  DS:CODE 
 0681  72 11                            JC      CLSALL 
 0683  33 D2                            XOR     DX,DX 
 0685  8B CA                            MOV     CX,DX 
 0687  B8 4201                          MOV     AX,(LSEEK SHL 8) OR 1 
 068A  CD 21                            INT     21H 
 068C  A3 0B8D R                        MOV     WORD PTR [BIOSOFFS],AX 
 068F  89 16 0B8F R                     MOV     WORD PTR [BIOSOFFS+2],DX 
 0693                           FILESDONE: 
 0693  F8                               CLC 
 0694                           CLSALL: 
 0694  9C                               PUSHF 
 0695  E8 0A39 R                        CALL    COMCLS 
 0698  9D                               POPF 
 0699  C3                               RET 
                                 
 069A                           GOTBIOS: 
 069A  C6 06 0B41 R 02                  MOV     BYTE PTR [FILSTAT],00000010B   
				  ; Got all of BIOS 
 069F  C4 36 0B89 R                     LES     SI,[BIOSSIZB] 
 06A3  8C C7                            MOV     DI,ES 
 06A5  8E 1E 0B91 R                     MOV     DS,[BIOSSTRT] 
                                ASSUME  DS:NOTHING 
 06A9  E8 0A8A R                        CALL    READFILE 
                                ASSUME  DS:CODE 
 06AC  72 E6                            JC      CLSALL 
 06AE  8B 1E 0BA1 R                     MOV     BX,[DOSHandle] 
 06B2  A3 0BAD R                        MOV     [DOSSTRT],AX 
 06B5  3B C2                            CMP     AX,DX                   ; No ro
				om left? 
 06B7  74 DB                            JZ      CLSALL                  ; Yes 
 06B9  8B 0E 0BA3 R                     MOV     CX,[DOSSIZP] 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-20
                                                            

 06BD  03 C1                            ADD     AX,CX 
 06BF  3B C2                            CMP     AX,DX 
 06C1  76 2B                            JBE     GOTDOS 
 06C3  80 0E 0B41 R 04                  OR      BYTE PTR [FILSTAT],00000100B   
				  ; Got part of DOS 
 06C8  2B 16 0BAD R                     SUB     DX,[DOSSTRT] 
 06CC  8B F2                            MOV     SI,DX 
 06CE  33 FF                            XOR     DI,DI 
 06D0  E8 0B04 R                        CALL    DISIX4 
 06D3  8E 1E 0BAD R                     MOV     DS,[DOSSTRT] 
                                ASSUME  DS:NOTHING 
 06D7  E8 0A8A R                        CALL    READFILE 
                                ASSUME  DS:CODE 
 06DA  72 B8                            JC      CLSALL 
 06DC  33 D2                            XOR     DX,DX 
 06DE  8B CA                            MOV     CX,DX 
 06E0  B8 4201                          MOV     AX,(LSEEK SHL 8) OR 1 
 06E3  CD 21                            INT     21H 
 06E5  A3 0BA9 R                        MOV     WORD PTR [DOSOFFS],AX 
 06E8  89 16 0BAB R                     MOV     WORD PTR [DOSOFFS+2],DX 
 06EC  EB A5                            JMP     FILESDONE 
                                 
 06EE                           GOTDOS: 
 06EE  80 0E 0B41 R 08                  OR      BYTE PTR [FILSTAT],00001000B   
				  ; Got all of DOS 
 06F3  C4 36 0BA5 R                     LES     SI,[DOSSIZB] 
 06F7  8C C7                            MOV     DI,ES 
 06F9  8E 1E 0BAD R                     MOV     DS,[DOSSTRT] 
                                ASSUME  DS:NOTHING 
 06FD  E8 0A8A R                        CALL    READFILE 
                                ASSUME  DS:CODE 
 0700  72 92                    CLSALLJ: JC     CLSALL 
 0702  8B 1E 0BC0 R                     MOV     BX,[COMHandle] 
 0706  A3 0BCC R                        MOV     [COMSTRT],AX 
 0709  3B C2                            CMP     AX,DX                   ; No ro
				om left? 
 070B  74 87                            JZ      CLSALL                  ; Yes 
 070D  8B 0E 0BC2 R                     MOV     CX,[COMSIZP] 
 0711  03 C1                            ADD     AX,CX 
 0713  3B C2                            CMP     AX,DX 
 0715  76 2C                            JBE     GOTCOM 
 0717  80 0E 0B41 R 10                  OR      BYTE PTR [FILSTAT],00010000B   
				  ; Got part of COMMAND 
 071C  2B 16 0BCC R                     SUB     DX,[COMSTRT] 
 0720  8B F2                            MOV     SI,DX 
 0722  33 FF                            XOR     DI,DI 
 0724  E8 0B04 R                        CALL    DISIX4 
 0727  8E 1E 0BCC R                     MOV     DS,[COMSTRT] 
                                ASSUME  DS:NOTHING 
 072B  E8 0A8A R                        CALL    READFILE 
                                ASSUME  DS:CODE 
 072E  72 D0                            JC      CLSALLJ 
 0730  33 D2                            XOR     DX,DX 
 0732  8B CA                            MOV     CX,DX 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-21
                                                            

 0734  B8 4201                          MOV     AX,(LSEEK SHL 8) OR 1 
 0737  CD 21                            INT     21H 
 0739  A3 0BC8 R                        MOV     WORD PTR [COMOFFS],AX 
 073C  89 16 0BCA R                     MOV     WORD PTR [COMOFFS+2],DX 
 0740  E9 0693 R                        JMP     FILESDONE 
                                 
 0743                           GOTCOM: 
 0743  80 0E 0B41 R 20                  OR      BYTE PTR [FILSTAT],00100000B   
				  ; Got all of COMMAND 
 0748  C4 36 0BC4 R                     LES     SI,[COMSIZB] 
 074C  8C C7                            MOV     DI,ES 
 074E  8E 1E 0BCC R                     MOV     DS,[COMSTRT] 
                                ASSUME  DS:NOTHING 
 0752  E8 0A8A R                        CALL    READFILE 
                                ASSUME  DS:CODE 
 0755  E9 0694 R                        JMP     CLSALL 
                                 
                                ;**********************************************
				**** 
                                ;Write BIOS DOS COMMAND to the newly formatted 
				disk. 
                                 
 0758                           WRITEDOS: 
 0758  B9 0007 90                       MOV     CX,BIOSATT 
 075C  BA 0B97 R                        MOV     DX,OFFSET BIOSFIL 
 075F  C4 36 0B89 R                     LES     SI,[BIOSSIZB] 
 0763  8C C7                            MOV     DI,ES 
 0765  E8 0894 R                        CALL    MAKEFIL 
 0768  73 01                            JNC     GOTNBIO 
 076A  C3                       RET34:  RET 
                                 
 076B                           GOTNBIO: 
 076B  89 1E 0B3F R                     MOV     [TempHandle],BX 
 076F  F6 06 0B41 R 02                  TEST    BYTE PTR FILSTAT,00000010B 
 0774  75 18                            JNZ     GOTALLBIO 
 0776  C4 36 0B8D R                     LES     SI,[BIOSOFFS] 
 077A  8C C7                            MOV     DI,ES 
 077C  89 36 0B37 R                     MOV     WORD PTR [IOCNT],SI 
 0780  89 3E 0B39 R                     MOV     WORD PTR [IOCNT+2],DI 
 0784  BD 0B85 R                        MOV     BP,OFFSET BIOSData 
 0787  E8 08FD R                        CALL    GOTTARG 
 078A  72 DE                            JC      RET34 
 078C  EB 0D                            JMP     SHORT BIOSDONE 
                                 
 078E                           GOTALLBIO: 
 078E  C4 36 0B89 R                     LES     SI,[BIOSSIZB] 
 0792  8C C7                            MOV     DI,ES 
 0794  8E 1E 0B91 R                     MOV     DS,[BIOSSTRT] 
                                ASSUME  DS:NOTHING 
 0798  E8 0A99 R                        CALL    WRITEFILE 
                                ASSUME  DS:CODE 
 079B                           BIOSDONE: 
 079B  8B 1E 0B3F R                     MOV     BX,[TempHandle] 
 079F  8B 0E 0B95 R                     MOV     CX,BTIME 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-22
                                                            

 07A3  8B 16 0B93 R                     MOV     DX,BDATE 
 07A7  E8 08C0 R                        CALL    CLOSETARG 
 07AA  B9 0007 90                       MOV     CX,DOSATT 
 07AE  BA 0BB3 R                        MOV     DX,OFFSET DOSFIL 
 07B1  C4 36 0BA5 R                     LES     SI,[DOSSIZB] 
 07B5  8C C7                            MOV     DI,ES 
 07B7  E8 0894 R                        CALL    MAKEFIL 
 07BA  72 AE                            JC      RET34 
                                 
 07BC                           GOTNDOS: 
 07BC  89 1E 0B3F R                     MOV     [TempHandle],BX 
 07C0  F6 06 0B41 R 08                  TEST    BYTE PTR FILSTAT,00001000B 
 07C5  75 32                            JNZ     GOTALLDOS 
 07C7  BD 0BA1 R                        MOV     BP,OFFSET DOSData 
 07CA  F6 06 0B41 R 04                  TEST    BYTE PTR FILSTAT,00000100B 
 07CF  75 13                            JNZ     PARTDOS 
 07D1  C7 06 0BA9 R 0000                MOV     WORD PTR [DOSOFFS],0 
 07D7  C7 06 0BAB R 0000                MOV     WORD PTR [DOSOFFS+2],0 
 07DD  E8 0922 R                        CALL    GETSYS3 
 07E0  72 88                    RET34J: JC      RET34 
 07E2  EB 22                            JMP     SHORT DOSDONE 
                                 
 07E4                           PARTDOS: 
 07E4  C4 36 0BA9 R                     LES     SI,[DOSOFFS] 
 07E8  8C C7                            MOV     DI,ES 
 07EA  89 36 0B37 R                     MOV     WORD PTR [IOCNT],SI 
 07EE  89 3E 0B39 R                     MOV     WORD PTR [IOCNT+2],DI 
 07F2  E8 08FD R                        CALL    GOTTARG 
 07F5  72 E9                            JC      RET34J 
 07F7  EB 0D                            JMP     SHORT DOSDONE 
                                 
 07F9                           GOTALLDOS: 
 07F9  C4 36 0BA5 R                     LES     SI,[DOSSIZB] 
 07FD  8C C7                            MOV     DI,ES 
 07FF  8E 1E 0BAD R                     MOV     DS,[DOSSTRT] 
                                ASSUME  DS:NOTHING 
 0803  E8 0A99 R                        CALL    WRITEFILE 
                                ASSUME  DS:CODE 
 0806                           DOSDONE: 
 0806  8B 1E 0B3F R                     MOV     BX,[TempHandle] 
 080A  8B 0E 0BB1 R                     MOV     CX,DTIME 
 080E  8B 16 0BAF R                     MOV     DX,DDATE 
 0812  E8 08C0 R                        CALL    CLOSETARG 
 0815  B9 0000 90                       MOV     CX,COMATT 
 0819  BA 0BD2 R                        MOV     DX,OFFSET COMFIL 
 081C  C4 36 0BC4 R                     LES     SI,[COMSIZB] 
 0820  8C C7                            MOV     DI,ES 
 0822  E8 0894 R                        CALL    MAKEFIL 
 0825  73 01                            JNC     GOTNCOM 
 0827  C3                       RET35:  RET 
                                 
 0828                           GOTNCOM: 
 0828  89 1E 0B3F R                     MOV     [TempHandle],BX 
 082C  F6 06 0B41 R 20                  TEST    BYTE PTR FILSTAT,00100000B 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-23
                                                            

 0831  75 32                            JNZ     GOTALLCOM 
 0833  BD 0BC0 R                        MOV     BP,OFFSET COMData 
 0836  F6 06 0B41 R 10                  TEST    BYTE PTR FILSTAT,00010000B 
 083B  75 13                            JNZ     PARTCOM 
 083D  C7 06 0BC8 R 0000                MOV     WORD PTR [COMOFFS],0 
 0843  C7 06 0BCA R 0000                MOV     WORD PTR [COMOFFS+2],0 
 0849  E8 0922 R                        CALL    GETSYS3 
 084C  72 D9                            JC      RET35 
 084E  EB 22                            JMP     SHORT COMDONE 
                                 
 0850                           PARTCOM: 
 0850  C4 36 0BC8 R                     LES     SI,[COMOFFS] 
 0854  8C C7                            MOV     DI,ES 
 0856  89 36 0B37 R                     MOV     WORD PTR [IOCNT],SI 
 085A  89 3E 0B39 R                     MOV     WORD PTR [IOCNT+2],DI 
 085E  E8 08FD R                        CALL    GOTTARG 
 0861  72 C4                            JC      RET35 
 0863  EB 0D                            JMP     SHORT COMDONE 
                                 
 0865                           GOTALLCOM: 
 0865  C4 36 0BC4 R                     LES     SI,[COMSIZB] 
 0869  8C C7                            MOV     DI,ES 
 086B  8E 1E 0BCC R                     MOV     DS,[COMSTRT] 
                                ASSUME  DS:NOTHING 
 086F  E8 0A99 R                        CALL    WRITEFILE 
                                ASSUME  DS:CODE 
 0872                           COMDONE: 
 0872  8B 1E 0B3F R                     MOV     BX,[TempHandle] 
 0876  8B 0E 0BD0 R                     MOV     CX,CTIME 
 087A  8B 16 0BCE R                     MOV     DX,CDATE 
 087E  E8 08C0 R                        CALL    CLOSETARG 
 0881  80 3E 0B41 R 2A                  CMP     BYTE PTR [FILSTAT],00101010B 
 0886  74 0A                            JZ      NOREDOS 
 0888                           RDFRST2: 
 0888  E8 0647 R                        CALL    READDOS                 ; Start
				 back with BIOS 
 088B  73 05                            JNC     NOREDOS 
 088D  E8 04B2 R                        CALL    SYSPRM                  ;Prompt
				 for system disk 
 0890  EB F6                            JMP     RDFRST2                 ;Try ag
				ain 
 0892                           NOREDOS: 
 0892  F8                               CLC 
 0893  C3                               RET 
                                 
                                ;********************************************* 
                                ; Create a file on target disk 
                                ; CX = attributes, DX points to name 
                                ; DI:SI is size file is to have 
                                ; 
                                ;   There is a bug in DOS 2.00 and 2.01 having 
				to do with writes 
                                ;   from the end of memory. In order to circumv
				ent it this routine 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-24
                                                            

                                ;   must create files with the length in DI:SI 
                                ; 
                                ; On return BX is handle, carry set if problem 
                                 
 0894                           MAKEFIL: 
 0894  8B DA                            MOV     BX,DX 
 0896  FF 37                            PUSH    WORD PTR [BX] 
 0898  A0 0000 E                        MOV     AL,TARGDRV 
 089B  88 07                            MOV     [BX],AL 
 089D  B4 3C                            MOV     AH,CREAT 
 089F  CD 21                            INT     21H 
 08A1  8F 07                            POP     WORD PTR [BX] 
 08A3  8B D8                            MOV     BX,AX 
 08A5  72 18                            JC      RET50 
 08A7  8B CF                            MOV     CX,DI 
 08A9  8B D6                            MOV     DX,SI 
 08AB  B8 4200                          MOV     AX,LSEEK SHL 8 
 08AE  CD 21                            INT     21H                     ; Seek 
				to eventual EOF 
 08B0  33 C9                            XOR     CX,CX 
 08B2  B4 40                            MOV     AH,WRITE 
 08B4  CD 21                            INT     21H                     ; Set s
				ize of file to position 
 08B6  33 C9                            XOR     CX,CX 
 08B8  8B D1                            MOV     DX,CX 
 08BA  B8 4200                          MOV     AX,LSEEK SHL 8 
 08BD  CD 21                            INT     21H                     ; Seek 
				back to start 
 08BF                           RET50: 
 08BF  C3                               RET 
                                 
                                ;********************************************* 
                                ; Close a file on the target disk 
                                ; CX/DX is time/date, BX is handle 
                                 
 08C0                           CLOSETARG: 
 08C0  B8 5701                          MOV     AX,(FILE_TIMES SHL 8) OR 1 
 08C3  CD 21                            INT     21H 
 08C5  B4 3E                            MOV     AH,CLOSE 
 08C7  CD 21                            INT     21H 
 08C9  C3                               RET 
                                 
 08CA                           SAVUDIRS: 
 08CA  32 D2                            XOR     DL,DL 
 08CC  BE 0B42 R                        MOV     SI,OFFSET USERDIRS 
 08CF  C6 04 5C                         MOV     BYTE PTR [SI],'\' 
 08D2  46                               INC     SI 
 08D3  B4 47                            MOV     AH,CURRENT_DIR 
 08D5  CD 21                            INT     21H 
 08D7  C3                       RET43:  RET 
                                 
                                 
 08D8                           RESTUDIR: 
 08D8  F7 06 0C62 R 0001                TEST    SWITCHMAP,SYSSW 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-25
                                                            

 08DE  74 F7                            JZ      RET43 
 08E0  BA 0B42 R                        MOV     DX,OFFSET USERDIRS 
 08E3  B4 3B                            MOV     AH,CHDIR 
 08E5  CD 21                            INT     21H             ; Restore users
				 DIR 
 08E7  C3                               RET 
                                 
 08E8                           INT_23: 
 08E8  0E                               PUSH    CS 
 08E9  1F                               POP     DS 
 08EA  E9 04AD R                        JMP     FEXIT 
                                 
                                ;**************************************** 
                                ; Transfer system files 
                                ; BP points to data structure for file involved
				 
                                ; offset is set to current amount read in 
                                ; Start set to start of file in buffer 
                                ; TempHandle is handle to write to on target 
                                 
 08ED                           IOLOOP: 
 08ED  A0 0000 E                        MOV     AL,[SYSDRV] 
 08F0  3A 06 0000 E                     CMP     AL,[TARGDRV] 
 08F4  75 07                            JNZ     GOTTARG 
 08F6  B4 0D                            MOV     AH,DISK_RESET 
 08F8  CD 21                            INT     21H 
 08FA  E8 04C8 R                        CALL    TARGPRM                  ;Get t
				arget disk 
                                 
 08FD                           GOTTARG: 
                                ;Enter here if some of file is already in buffe
				r, IOCNT must be set 
                                ; to size already in buffer. 
 08FD  8B 1E 0B3F R                     MOV     BX,[TempHandle] 
 0901  8B 36 0B37 R                     MOV     SI,WORD PTR [IOCNT] 
 0905  8B 3E 0B39 R                     MOV     DI,WORD PTR [IOCNT+2] 
 0909  8E 5E 0C                         MOV     DS,[BP.FILE_START] 
                                ASSUME  DS:NOTHING 
 090C  E8 0A99 R                        CALL    WRITEFILE               ; Write
				 next part 
                                ASSUME  DS:CODE 
 090F  73 01                            JNC     TESTDONE 
 0911  C3                               RET 
                                 
 0912                           TESTDONE: 
 0912  C4 46 08                         LES     AX,[BP.FILE_OFFSET] 
 0915  3B 46 04                         CMP     AX,WORD PTR [BP.FILE_SIZEB] 
 0918  75 08                            JNZ     GETSYS3 
 091A  8C C0                            MOV     AX,ES 
 091C  3B 46 06                         CMP     AX,WORD PTR [BP.FILE_SIZEB+2] 
 091F  75 01                            JNZ     GETSYS3 
 0921  C3                               RET                             ; Carry
				 clear from CMP 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-26
                                                            

 0922                           GETSYS3: 
                                ;Enter here if none of file is in buffer 
 0922  A1 0B3B R                        MOV     AX,[MSTART]             ; Furth
				ur IO done starting here 
 0925  89 46 0C                         MOV     [BP.FILE_START],AX 
 0928  A0 0000 E                        MOV     AL,[SYSDRV] 
 092B  3A 06 0000 E                     CMP     AL,[TARGDRV] 
 092F  75 07                            JNZ     TESTSYS 
 0931  B4 0D                            MOV     AH,DISK_RESET 
 0933  CD 21                            INT     21H 
 0935                           GSYS: 
 0935  E8 04B2 R                        CALL    SYSPRM                  ;Prompt
				 for system disk 
 0938                           TESTSYS: 
 0938  E8 099E R                        CALL    TESTSYSDISK 
 093B  72 F8                            JC      GSYS 
 093D  8B 5E 00                         MOV     BX,[BP.FILE_HANDLE] 
 0940  C4 56 08                         LES     DX,[BP.FILE_OFFSET] 
 0943  52                               PUSH    DX 
 0944  8C C1                            MOV     CX,ES 
 0946  B8 4200                          MOV     AX,LSEEK SHL 8 
 0949  CD 21                            INT     21H 
 094B  5A                               POP     DX 
 094C  C4 76 04                         LES     SI,[BP.FILE_SIZEB] 
 094F  8C C7                            MOV     DI,ES 
 0951  2B F2                            SUB     SI,DX 
 0953  1B F9                            SBB     DI,CX                   ; DI:SI
				 is #bytes to go 
 0955  57                               PUSH    DI 
 0956  56                               PUSH    SI 
 0957  83 C6 0F                         ADD     SI,15 
 095A  83 D7 00                         ADC     DI,0 
 095D  E8 0B0E R                        CALL    DISID4 
 0960  8B C6                            MOV     AX,SI 
 0962  5E                               POP     SI 
 0963  5F                               POP     DI 
 0964  3B 06 0B3D R                     CMP     AX,[MSIZE] 
 0968  76 09                            JBE     GOTSIZ2 
 096A  8B 36 0B3D R                     MOV     SI,[MSIZE] 
 096E  33 FF                            XOR     DI,DI 
 0970  E8 0B04 R                        CALL    DISIX4 
 0973                           GOTSIZ2: 
 0973  89 36 0B37 R                     MOV     WORD PTR [IOCNT],SI 
 0977  89 3E 0B39 R                     MOV     WORD PTR [IOCNT+2],DI 
 097B  8E 1E 0B3B R                     MOV     DS,[MSTART] 
                                ASSUME  DS:NOTHING 
 097F  E8 0A8A R                        CALL    READFILE 
                                ASSUME  DS:CODE 
 0982  73 05                            JNC     GETOFFS 
 0984  E8 0694 R                        CALL    CLSALL 
 0987  EB AC                            JMP     GSYS 
 0989                           GETOFFS: 
 0989  33 D2                            XOR     DX,DX 
 098B  8B CA                            MOV     CX,DX 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-27
                                                            

 098D  B8 4201                          MOV     AX,(LSEEK SHL 8) OR 1 
 0990  CD 21                            INT     21H 
 0992  89 46 08                         MOV     WORD PTR [BP.FILE_OFFSET],AX 
 0995  89 56 0A                         MOV     WORD PTR [BP.FILE_OFFSET+2],DX 
 0998  E8 0694 R                        CALL    CLSALL 
 099B  E9 08ED R                        JMP     IOLOOP 
                                 
                                ;**********************************************
				*** 
                                ; Test to see if correct system disk. Open hand
				les 
                                 
 099E                           TESTSYSDISK: 
 099E  B8 3D00                          MOV     AX,OPEN SHL 8 
 09A1  BA 0B97 R                        MOV     DX,OFFSET BIOSFIL 
 09A4  CD 21                            INT     21H 
 09A6  73 02                            JNC     SETBIOS 
 09A8  F9                       CRET12: STC 
 09A9  C3                       RET12:  RET 
                                 
 09AA                           SETBIOS: 
 09AA  A3 0B85 R                        MOV     [BIOSHandle],AX 
 09AD  8B D8                            MOV     BX,AX 
 09AF  E8 0A58 R                        CALL    GETFSIZ 
 09B2  83 3E 0B87 R 00                  CMP     [BIOSSIZP],0 
 09B7  74 10                            JZ      SETBIOSSIZ 
 09B9  39 06 0B87 R                     CMP     [BIOSSIZP],AX 
 09BD  74 0A                            JZ      SETBIOSSIZ 
 09BF                           BIOSCLS: 
 09BF  B4 3E                            MOV     AH,CLOSE 
 09C1  8B 1E 0B85 R                     MOV     BX,[BIOSHandle] 
 09C5  CD 21                            INT     21H 
 09C7  EB DF                            JMP     CRET12 
                                 
 09C9                           SETBIOSSIZ: 
 09C9  A3 0B87 R                        MOV     [BIOSSIZP],AX 
 09CC  89 36 0B89 R                     MOV     WORD PTR [BIOSSIZB],SI 
 09D0  89 3E 0B8B R                     MOV     WORD PTR [BIOSSIZB+2],DI 
 09D4  89 16 0B93 R                     MOV     [BDATE],DX 
 09D8  89 0E 0B95 R                     MOV     [BTIME],CX 
 09DC  B8 3D00                          MOV     AX,OPEN SHL 8 
 09DF  BA 0BB3 R                        MOV     DX,OFFSET DOSFIL 
 09E2  CD 21                            INT     21H 
 09E4  73 02                            JNC     DOSOPNOK 
 09E6  EB D7                            JMP     BIOSCLS 
                                 
 09E8                           DOSOPNOK: 
 09E8  A3 0BA1 R                        MOV     [DOSHandle],AX 
 09EB  8B D8                            MOV     BX,AX 
 09ED  E8 0A58 R                        CALL    GETFSIZ 
 09F0  83 3E 0BA3 R 00                  CMP     [DOSSIZP],0 
 09F5  74 10                            JZ      SETDOSSIZ 
 09F7  39 06 0BA3 R                     CMP     [DOSSIZP],AX 
 09FB  74 0A                            JZ      SETDOSSIZ 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-28
                                                            

 09FD                           DOSCLS: 
 09FD  B4 3E                            MOV     AH,CLOSE 
 09FF  8B 1E 0BA1 R                     MOV     BX,[DOSHandle] 
 0A03  CD 21                            INT     21H 
 0A05  EB B8                            JMP     BIOSCLS 
                                 
 0A07                           SETDOSSIZ: 
 0A07  A3 0BA3 R                        MOV     [DOSSIZP],AX 
 0A0A  89 36 0BA5 R                     MOV     WORD PTR [DOSSIZB],SI 
 0A0E  89 3E 0BA7 R                     MOV     WORD PTR [DOSSIZB+2],DI 
 0A12  89 16 0BAF R                     MOV     [DDATE],DX 
 0A16  89 0E 0BB1 R                     MOV     [DTIME],CX 
 0A1A  B8 3D00                          MOV     AX,OPEN SHL 8 
 0A1D  BA 0BD2 R                        MOV     DX,OFFSET COMFIL 
 0A20  CD 21                            INT     21H 
 0A22  72 D9                            JC      DOSCLS 
 0A24  A3 0BC0 R                        MOV     [COMHandle],AX 
 0A27  8B D8                            MOV     BX,AX 
 0A29  E8 0A58 R                        CALL    GETFSIZ 
 0A2C  83 3E 0BC2 R 00                  CMP     [COMSIZP],0 
 0A31  74 10                            JZ      SETCOMSIZ 
 0A33  39 06 0BC2 R                     CMP     [COMSIZP],AX 
 0A37  74 0A                            JZ      SETCOMSIZ 
 0A39                           COMCLS: 
 0A39  B4 3E                            MOV     AH,CLOSE 
 0A3B  8B 1E 0BC0 R                     MOV     BX,[COMHandle] 
 0A3F  CD 21                            INT     21H 
 0A41  EB BA                            JMP     DOSCLS 
                                 
 0A43                           SETCOMSIZ: 
 0A43  A3 0BC2 R                        MOV     [COMSIZP],AX 
 0A46  89 36 0BC4 R                     MOV     WORD PTR [COMSIZB],SI 
 0A4A  89 3E 0BC6 R                     MOV     WORD PTR [COMSIZB+2],DI 
 0A4E  89 16 0BCE R                     MOV     [CDATE],DX 
 0A52  89 0E 0BD0 R                     MOV     [CTIME],CX 
 0A56  F8                               CLC 
 0A57  C3                               RET 
                                 
                                ;******************************************* 
                                ; Handle in BX, return file size in para in AX 
                                ; File size in bytes DI:SI, file date in DX, fi
				le 
                                ; time in CX. 
                                 
 0A58                           GETFSIZ: 
 0A58  B8 4202                          MOV     AX,(LSEEK SHL 8) OR 2 
 0A5B  33 C9                            XOR     CX,CX 
 0A5D  8B D1                            MOV     DX,CX 
 0A5F  CD 21                            INT     21H 
 0A61  8B F0                            MOV     SI,AX 
 0A63  8B FA                            MOV     DI,DX 
 0A65  05 000F                          ADD     AX,15           ; Para round up
				 
 0A68  83 D2 00                         ADC     DX,0 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-29
                                                            

 0A6B  81 E2 000F                       AND     DX,0FH          ; If the file i
				s larger than this 
                                                                ;   it is bigge
				r than the 8086 address space! 
 0A6F  B1 0C                            MOV     CL,12 
 0A71  D3 E2                            SHL     DX,CL 
 0A73  B1 04                            MOV     CL,4 
 0A75  D3 E8                            SHR     AX,CL 
 0A77  0B C2                            OR      AX,DX 
 0A79  50                               PUSH    AX 
 0A7A  B8 4200                          MOV     AX,LSEEK SHL 8 
 0A7D  33 C9                            XOR     CX,CX 
 0A7F  8B D1                            MOV     DX,CX 
 0A81  CD 21                            INT     21H 
 0A83  B8 5700                          MOV     AX,FILE_TIMES SHL 8 
 0A86  CD 21                            INT     21H 
 0A88  58                               POP     AX 
 0A89  C3                               RET 
                                 
                                ;******************************************** 
                                ; Read/Write file 
                                ;       DS:0 is Xaddr 
                                ;       DI:SI is byte count to I/O 
                                ;       BX is handle 
                                ; Carry set if screw up 
                                ; 
                                ; I/O SI bytes 
                                ; I/O 64K - 1 bytes DI times 
                                ; I/O DI bytes 
                                ; DS=CS on output 
                                 
                                 
 0A8A                           READFILE: 
                                ; Must preserve AX,DX 
 0A8A  50                               PUSH    AX 
 0A8B  52                               PUSH    DX 
 0A8C  55                               PUSH    BP 
 0A8D  BD 3F00                          MOV     BP,READ SHL 8 
 0A90  E8 0AA4 R                        CALL    FILIO 
 0A93  5D                               POP     BP 
 0A94  5A                               POP     DX 
 0A95  58                               POP     AX 
 0A96  0E                               PUSH    CS 
 0A97  1F                               POP     DS 
 0A98  C3                               RET 
                                 
 0A99                           WRITEFILE: 
 0A99  55                               PUSH    BP 
 0A9A  BD 4000                          MOV     BP,WRITE SHL 8 
 0A9D  E8 0AA4 R                        CALL    FILIO 
 0AA0  5D                               POP     BP 
 0AA1  0E                               PUSH    CS 
 0AA2  1F                               POP     DS 
 0AA3  C3                               RET 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-30
                                                            

                                 
 0AA4                           FILIO: 
 0AA4  33 D2                            XOR     DX,DX 
 0AA6  8B CE                            MOV     CX,SI 
 0AA8  E3 0F                            JCXZ    K64IO 
 0AAA  8B C5                            MOV     AX,BP 
 0AAC  CD 21                            INT     21H 
 0AAE  72 53                            JC      IORET 
 0AB0  03 D0                            ADD     DX,AX 
 0AB2  3B C1                            CMP     AX,CX           ; If not =, AX<
				CX, carry set. 
 0AB4  75 4D                            JNZ     IORET 
 0AB6  E8 0B18 R                        CALL    NORMALIZE 
 0AB9                           K64IO: 
 0AB9  F8                               CLC 
 0ABA  8B CF                            MOV     CX,DI 
 0ABC  E3 45                            JCXZ    IORET 
 0ABE  8B C5                            MOV     AX,BP 
 0AC0  CD 21                            INT     21H 
 0AC2  72 3F                            JC      IORET 
 0AC4  03 D0                            ADD     DX,AX 
 0AC6  3B C1                            CMP     AX,CX           ; If not =, AX<
				CX, carry set. 
 0AC8  75 39                            JNZ     IORET 
 0ACA  E8 0B18 R                        CALL    NORMALIZE 
 0ACD  8B CF                            MOV     CX,DI 
 0ACF                           K64M1: 
 0ACF  51                               PUSH    CX 
 0AD0  33 C0                            XOR     AX,AX 
 0AD2  0B D2                            OR      DX,DX 
 0AD4  74 14                            JZ      NORMIO 
 0AD6  B9 0010                          MOV     CX,10H 
 0AD9  2B CA                            SUB     CX,DX 
 0ADB  8B C5                            MOV     AX,BP 
 0ADD  CD 21                            INT     21H 
 0ADF  72 21                            JC      IORETP 
 0AE1  03 D0                            ADD     DX,AX 
 0AE3  3B C1                            CMP     AX,CX           ; If not =, AX<
				CX, carry set. 
 0AE5  75 1B                            JNZ     IORETP 
 0AE7  E8 0B18 R                        CALL    NORMALIZE 
 0AEA                           NORMIO: 
 0AEA  B9 FFFF                          MOV     CX,0FFFFH 
 0AED  2B C8                            SUB     CX,AX 
 0AEF  8B C5                            MOV     AX,BP 
 0AF1  CD 21                            INT     21H 
 0AF3  72 0D                            JC      IORETP 
 0AF5  03 D0                            ADD     DX,AX 
 0AF7  3B C1                            CMP     AX,CX           ; If not =, AX<
				CX, carry set. 
 0AF9  75 07                            JNZ     IORETP 
 0AFB  E8 0B18 R                        CALL    NORMALIZE       ; Clears carry 
 0AFE  59                               POP     CX 
 0AFF  E2 CE                            LOOP    K64M1 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-31
                                                            

 0B01  51                               PUSH    CX 
 0B02                           IORETP: 
 0B02  59                               POP     CX 
 0B03                           IORET: 
 0B03  C3                               RET 
                                 
                                 
                                ;********************************* 
                                ; Shift DI:SI left 4 bits 
 0B04                           DISIX4: 
 0B04  B9 0004                          MOV     CX,4 
 0B07                           SH32: 
 0B07  D1 E6                            SHL     SI,1 
 0B09  D1 D7                            RCL     DI,1 
 0B0B  E2 FA                            LOOP    SH32 
 0B0D  C3                               RET 
                                 
                                ;********************************* 
                                ; Shift DI:SI right 4 bits 
 0B0E                           DISID4: 
 0B0E  B9 0004                          MOV     CX,4 
 0B11                           SH32B: 
 0B11  D1 EF                            SHR     DI,1 
 0B13  D1 DE                            RCR     SI,1 
 0B15  E2 FA                            LOOP    SH32B 
 0B17  C3                               RET 
                                 
                                ;******************************** 
                                ; Normalize DS:DX 
                                 
 0B18                           NORMALIZE: 
 0B18  52                               PUSH    DX 
 0B19  50                               PUSH    AX 
 0B1A  D1 EA                            SHR     DX,1 
 0B1C  D1 EA                            SHR     DX,1 
 0B1E  D1 EA                            SHR     DX,1 
 0B20  D1 EA                            SHR     DX,1 
 0B22  8C D8                            MOV     AX,DS 
 0B24  03 C2                            ADD     AX,DX 
 0B26  8E D8                            MOV     DS,AX 
 0B28  58                               POP     AX 
 0B29  5A                               POP     DX 
 0B2A  81 E2 000F                       AND     DX,0FH                  ; Clear
				s carry 
 0B2E  C3                               RET 
                                 
                                 
 0B2F  ??                       ROOTSTR DB      ? 
 0B30  3A                               DB      ":" 
 0B31  2F 00                    SWTCH   DB      "/",0 
 0B33  00                       DBLFLG DB       0               ;Initialize fla
				gs to zero 
 0B34  00                       CLEARFLG DB     0 
 0B35  00                       DRIVE   DB      0 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-32
                                                            

 0B36  00                       DEFALT  DB      0               ;Default drive 
 0B37  ????????                 IOCNT   DD      ? 
 0B3B  ????                     MSTART  DW      ?               ; Start of sys 
				file buffer (para#) 
 0B3D  ????                     MSIZE   DW      ?               ; Size of above
				 in paragraphs 
 0B3F  ????                     TempHandle DW   ? 
 0B41  ??                       FILSTAT DB      ?               ; In memory sta
				tus of files 
                                                                ; XXXXXX00B BIO
				S not in 
                                                                ; XXXXXX01B BIO
				S partly in 
                                                                ; XXXXXX10B BIO
				S all in 
                                                                ; XXXX00XXB DOS
				 not in 
                                                                ; XXXX01XXB DOS
				 partly in 
                                                                ; XXXX10XXB DOS
				 all in 
                                                                ; XX00XXXXB COM
				MAND not in 
                                                                ; XX01XXXXB COM
				MAND partly in 
                                                                ; XX10XXXXB COM
				MAND all in 
                                 
 0B42  0043[                    USERDIRS DB     DIRSTRLEN+3 DUP(?)      ; Stora
				ge for users current directory 
            ??                  
                         ]      
                                
                                 
 0B85                           BIOSData        LABEL   BYTE 
 0B85  0000                     BIOSHandle      DW      0 
 0B87  0000                     BIOSSIZP        DW      0 
 0B89  ????????                 BIOSSIZB        DD      ? 
 0B8D  ????????                 BIOSOFFS        DD      ? 
 0B91  ????                     BIOSSTRT        DW      ? 
 0B93  0000                     BDATE           DW      0               ;IO sys
				tem date stored here 
 0B95  0000                     BTIME           DW      0               ;IO sys
				tem time stored here 
                                 
 = 0007                         BIOSATT EQU     attr_hidden + attr_system + att
				r_read_only 
 0B97                           BIOSFIL LABEL   BYTE 
 0B97                           BIODRV  LABEL   BYTE 
 0B97  58 3A 5C                         DB      "X:\" 
                                        ENDIF 
                                        IF MSVER 
 0B9A  49 4F 2E 53 59 53                DB      "IO.SYS" 
                                        ENDIF 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-33
                                                            

 0BA0  00                               DB      0 
                                 
 0BA1                           DOSData         LABEL   BYTE 
 0BA1  0000                     DOSHandle       DW      0 
 0BA3  0000                     DOSSIZP         DW      0 
 0BA5  ????????                 DOSSIZB         DD      ? 
 0BA9  ????????                 DOSOFFS         DD      ? 
 0BAD  ????                     DOSSTRT         DW      ? 
 0BAF  0000                     DDATE           DW      0               ;DOS da
				te stored here 
 0BB1  0000                     DTIME           DW      0               ;DOS ti
				me 
                                 
 = 0007                         DOSATT  EQU     attr_hidden + attr_system + att
				r_read_only 
 0BB3                           DOSFIL  LABEL   BYTE 
 0BB3                           DOSDRV  LABEL   BYTE 
 0BB3  58 3A 5C                         DB      "X:\" 
                                        ENDIF 
                                        IF MSVER 
 0BB6  4D 53 44 4F 53 2E 53             DB      "MSDOS.SYS" 
       59 53                    
                                        ENDIF 
 0BBF  00                               DB      0 
                                 
 0BC0                           COMData         LABEL   BYTE 
 0BC0  0000                     COMHandle       DW      0 
 0BC2  0000                     COMSIZP         DW      0 
 0BC4  ????????                 COMSIZB         DD      ? 
 0BC8  ????????                 COMOFFS         DD      ? 
 0BCC  ????                     COMSTRT         DW      ? 
 0BCE  0000                     CDATE           DW      0               ;Date o
				f COMMAND 
 0BD0  0000                     CTIME           DW      0               ;Time o
				f COMMAND 
                                 
 = 0000                         COMATT  EQU     0 
 0BD2                           COMFIL  LABEL   BYTE 
 0BD2                           COMDRV  LABEL   BYTE 
 0BD2  58 3A 5C 43 4F 4D 4D             DB      "X:\COMMAND.COM",0 
       41 4E 44 2E 43 4F 4D     
       00                       
                                 
 0BE1  FF 00 00 00 00 00 08     VOLFCB  DB      -1,0,0,0,0,0,8 
 0BE8  00                               DB      0 
 0BE9  20 20 20 20 20 20 20     VOLNAM  DB      "           " 
       20 20 20 20              
 0BF4  08                               DB      8 
 0BF5  001A[                            DB      26 DUP(?) 
            ??                  
                         ]      
                                
                                 
 0C0F  FF 00 00 00 00 00 FF     ALLFILE DB      -1,0,0,0,0,0,0FFH 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-34
                                                            

 0C16  00 3F 3F 3F 3F 3F 3F     ALLDRV  DB      0,"???????????" 
       3F 3F 3F 3F 3F           
 0C22  001A[                            DB      26 DUP(?) 
            ??                  
                         ]      
                                
                                 
 0C3C  00                       CLEANFILE DB    0 
 0C3D  41 41 41 46 46 46 46     CLNNAM  DB      "AAAFFFFFFOR" 
       46 46 4F 52              
 0C48  001A[                            DB      26 DUP(?) 
            ??                  
                         ]      
                                
                                 
 0C62  ????                     SWITCHMAP DW    ? 
 0C64  ????                     SWITCHCOPY DW   ? 
 0C66  ????                     FAT     DW      ? 
 0C68  ????                             DW      ? 
 0C6A  ????                     CLUSSIZ DW      ? 
 0C6C  ????                     SECSIZ  DW      ? 
 0C6E  ????????                 SYSSIZ  DD      ? 
 0C72  ????????                 FDSKSIZ DD      ? 
 0C76  ????????                 BADSIZ  DD      ? 
 0C7A  ????                     SYSTRKS DW      ? 
 0C7C  ????                     SECTORS DW      ? 
 0C7E  50 00                    INBUFF  DB      80,0 
 0C80  0050[                            DB      80 DUP(?) 
            ??                  
                         ]      
                                
                                 
 0CD0  0100[                            DB      100H DUP(?) 
            ??                  
                         ]      
                                
                                 
 0DD0                           STACK   LABEL   BYTE 
                                 
                                ;For FORMES module 
                                 
                                        EXTRN   BADVER:BYTE,SNGMSG:BYTE,SNGDRV:
				BYTE,HRDMSG:BYTE,HRDDRV:BYTE 
                                        EXTRN   LABPRMT:BYTE,TARGMSG:BYTE,TARGD
				RV:BYTE 
                                        EXTRN   SYSTRAN:BYTE,CRLFMSG:BYTE,INVCH
				R:BYTE,INVDRV:BYTE 
                                        EXTRN   SYSMSG:BYTE,SYSDRV:BYTE,FRMTERR
				:BYTE,NOTSYS:BYTE 
                                        EXTRN   NOUSE:BYTE,MEMEX:BYTE,INVPAR:BY
				TE 
                                 
                                        ENDIF 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Page     1-35
                                                            

 0DD0                           CODE    ENDS 
                                 
                                        END     START 

Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FILESTRUC  . . . . . . . . . . .  	0013	0008
  FILE_HANDLE  . . . . . . . . .  	0000
  FILE_SIZEP . . . . . . . . . .  	0002
  FILE_SIZEB . . . . . . . . . .  	0004
  FILE_OFFSET  . . . . . . . . .  	0008
  FILE_START . . . . . . . . . .  	000C
  FILE_DATE  . . . . . . . . . .  	000E
  FILE_TIME  . . . . . . . . . .  	0010
  FILE_NAME  . . . . . . . . . .  	0012
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Symbols-4
                                                             

SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016

Segments and Groups:

                N a m e         	Size	Align	Combine Class

CODE . . . . . . . . . . . . . .  	0DD0	PARA	PUBLIC	'CODE'
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Symbols-5
                                                             

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALIGNED  . . . . . . . . . . . .  	L NEAR	0355	CODE
ALLDRV . . . . . . . . . . . . .  	L BYTE 	0C16	CODE
ALLFILE  . . . . . . . . . . . .  	L BYTE 	0C0F	CODE
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Number	0000	
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	

BAD100 . . . . . . . . . . . . .  	L NEAR	02EC	CODE
BAD150 . . . . . . . . . . . . .  	L NEAR	032E	CODE
BADSECTOR  . . . . . . . . . . .  	L NEAR	0000	CODE	External
BADSIZ . . . . . . . . . . . . .  	L DWORD	0C76	CODE	Global
BADVER . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
BDATE  . . . . . . . . . . . . .  	L WORD 	0B93	CODE
BIODRV . . . . . . . . . . . . .  	L BYTE 	0B97	CODE
BIOSATT  . . . . . . . . . . . .  	Number	0007	
BIOSCLS  . . . . . . . . . . . .  	L NEAR	09BF	CODE
BIOSDATA . . . . . . . . . . . .  	L BYTE 	0B85	CODE
BIOSDONE . . . . . . . . . . . .  	L NEAR	079B	CODE
BIOSFIL  . . . . . . . . . . . .  	L BYTE 	0B97	CODE
BIOSHANDLE . . . . . . . . . . .  	L WORD 	0B85	CODE
BIOSOFFS . . . . . . . . . . . .  	L DWORD	0B8D	CODE
BIOSSIZB . . . . . . . . . . . .  	L DWORD	0B89	CODE
BIOSSIZP . . . . . . . . . . . .  	L WORD 	0B87	CODE
BIOSSTRT . . . . . . . . . . . .  	L WORD 	0B91	CODE
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Symbols-6
                                                             

BLANKZER . . . . . . . . . . . .  	L NEAR	0427	CODE
BTIME  . . . . . . . . . . . . .  	L WORD 	0B95	CODE
BUFINSIZ . . . . . . . . . . . .  	Number	0010	

CDATE  . . . . . . . . . . . . .  	L WORD 	0BCE	CODE
CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLEANFILE  . . . . . . . . . . .  	L BYTE 	0C3C	CODE
CLEAR  . . . . . . . . . . . . .  	L NEAR	051D	CODE
CLEARED  . . . . . . . . . . . .  	L NEAR	0385	CODE
CLEARFLG . . . . . . . . . . . .  	L BYTE 	0B34	CODE
CLNNAM . . . . . . . . . . . . .  	L BYTE 	0C3D	CODE
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSETARG  . . . . . . . . . . .  	L NEAR	08C0	CODE
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
CLRTEST  . . . . . . . . . . . .  	L NEAR	0293	CODE
CLSALL . . . . . . . . . . . . .  	L NEAR	0694	CODE
CLSALLJ  . . . . . . . . . . . .  	L NEAR	0700	CODE
CLUSSIZ  . . . . . . . . . . . .  	L WORD 	0C6A	CODE	Global
CMPTRKS  . . . . . . . . . . . .  	L NEAR	02CE	CODE
COMATT . . . . . . . . . . . . .  	Number	0000	
COMCLS . . . . . . . . . . . . .  	L NEAR	0A39	CODE
COMDATA  . . . . . . . . . . . .  	L BYTE 	0BC0	CODE
COMDONE  . . . . . . . . . . . .  	L NEAR	0872	CODE
COMDRV . . . . . . . . . . . . .  	L BYTE 	0BD2	CODE
COMFIL . . . . . . . . . . . . .  	L BYTE 	0BD2	CODE
COMHANDLE  . . . . . . . . . . .  	L WORD 	0BC0	CODE
COMOFFS  . . . . . . . . . . . .  	L DWORD	0BC8	CODE
COMSIZB  . . . . . . . . . . . .  	L DWORD	0BC4	CODE
COMSIZP  . . . . . . . . . . . .  	L WORD 	0BC2	CODE
COMSTRT  . . . . . . . . . . . .  	L WORD 	0BCC	CODE
CONVLP . . . . . . . . . . . . .  	L NEAR	03DF	CODE
CONVWRD  . . . . . . . . . . . .  	L NEAR	0435	CODE
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CRET12 . . . . . . . . . . . . .  	L NEAR	09A8	CODE
CRLF . . . . . . . . . . . . . .  	L NEAR	04A3	CODE	Global
CRLFMSG  . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
CTIME  . . . . . . . . . . . . .  	L WORD 	0BD0	CODE
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
C_BS . . . . . . . . . . . . . .  	Number	0008	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Symbols-7
                                                             

C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DBLFLG . . . . . . . . . . . . .  	L BYTE 	0B33	CODE
DDATE  . . . . . . . . . . . . .  	L WORD 	0BAF	CODE
DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DEFALT . . . . . . . . . . . . .  	L BYTE 	0B36	CODE
DELETE_THEM  . . . . . . . . . .  	L NEAR	05C3	CODE
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DIGIT  . . . . . . . . . . . . .  	L NEAR	0420	CODE
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISID4 . . . . . . . . . . . . .  	L NEAR	0B0E	CODE
DISIX4 . . . . . . . . . . . . .  	L NEAR	0B04	CODE
DISKFORMAT . . . . . . . . . . .  	L NEAR	0000	CODE	External
DISK_RESET . . . . . . . . . . .  	Number	000D	
DISP32BITS . . . . . . . . . . .  	L NEAR	03D5	CODE	Global
DONE . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DOSATT . . . . . . . . . . . . .  	Number	0007	
DOSCLS . . . . . . . . . . . . .  	L NEAR	09FD	CODE
DOSDATA  . . . . . . . . . . . .  	L BYTE 	0BA1	CODE
DOSDONE  . . . . . . . . . . . .  	L NEAR	0806	CODE
DOSDRV . . . . . . . . . . . . .  	L BYTE 	0BB3	CODE
DOSFIL . . . . . . . . . . . . .  	L BYTE 	0BB3	CODE
DOSHANDLE  . . . . . . . . . . .  	L WORD 	0BA1	CODE
DOSOFFS  . . . . . . . . . . . .  	L DWORD	0BA9	CODE
DOSOPNOK . . . . . . . . . . . .  	L NEAR	09E8	CODE
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Symbols-8
                                                             

DOSSIZB  . . . . . . . . . . . .  	L DWORD	0BA5	CODE
DOSSIZP  . . . . . . . . . . . .  	L WORD 	0BA3	CODE
DOSSTRT  . . . . . . . . . . . .  	L WORD 	0BAD	CODE
DOSVER . . . . . . . . . . . . .  	Number	00D3	
DOSVER_HIGH  . . . . . . . . . .  	Number	020B	
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DOVOL  . . . . . . . . . . . . .  	L NEAR	05DD	CODE
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DRIVE  . . . . . . . . . . . . .  	L BYTE 	0B35	CODE	Global
DRNUM  . . . . . . . . . . . . .  	Number	005C	
DRTFAT . . . . . . . . . . . . .  	L NEAR	0365	CODE
DRVERR . . . . . . . . . . . . .  	L NEAR	0517	CODE
DRVGD  . . . . . . . . . . . . .  	L NEAR	0131	CODE
DRVSPEC  . . . . . . . . . . . .  	L NEAR	0153	CODE
DSKPRM . . . . . . . . . . . . .  	L NEAR	04D5	CODE
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DTIME  . . . . . . . . . . . . .  	L WORD 	0BB1	CODE
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Symbols-9
                                                             

EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FALSE  . . . . . . . . . . . . .  	Number	0000	
FAT  . . . . . . . . . . . . . .  	L WORD 	0C66	CODE
FATID  . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
FATPRI . . . . . . . . . . . . .  	Number	001E	
FATSPACE . . . . . . . . . . . .  	V WORD 	0000	CODE	External
FATWRT . . . . . . . . . . . . .  	L NEAR	0393	CODE
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FDPB . . . . . . . . . . . . . .  	L NEAR	04FA	CODE
FDSKSIZ  . . . . . . . . . . . .  	L DWORD	0C72	CODE	Global
FEXIT  . . . . . . . . . . . . .  	L NEAR	04AD	CODE
FEXIT2 . . . . . . . . . . . . .  	L NEAR	04B0	CODE
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILESDONE  . . . . . . . . . . .  	L NEAR	0693	CODE
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILIO  . . . . . . . . . . . . .  	L NEAR	0AA4	CODE
FILPERPROC . . . . . . . . . . .  	Number	0014	
FILSTAT  . . . . . . . . . . . .  	L BYTE 	0B41	CODE
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FNDSIZ . . . . . . . . . . . . .  	L NEAR	0465	CODE
FNDSIZ0  . . . . . . . . . . . .  	L NEAR	046E	CODE
FREEPRI  . . . . . . . . . . . .  	Number	0000	
FREESPACE  . . . . . . . . . . .  	V WORD 	0000	CODE	External
FRMTERR  . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
FRMTPROB . . . . . . . . . . . .  	L NEAR	0270	CODE
FSTRT  . . . . . . . . . . . . .  	L NEAR	010B	CODE

GETCHR . . . . . . . . . . . . .  	L NEAR	019A	CODE
GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GETFSIZ  . . . . . . . . . . . .  	L NEAR	0A58	CODE
GETOFFS  . . . . . . . . . . . .  	L NEAR	0989	CODE
GETPARM  . . . . . . . . . . . .  	L NEAR	0193	CODE
GETSIZE  . . . . . . . . . . . .  	L NEAR	044A	CODE
GETSYS3  . . . . . . . . . . . .  	L NEAR	0922	CODE
GETTRK . . . . . . . . . . . . .  	L NEAR	0278	CODE
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Symbols-10
                                                             

GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GOOD_CREATE  . . . . . . . . . .  	L NEAR	0638	CODE
GOPRNIT  . . . . . . . . . . . .  	L NEAR	04E2	CODE
GOTALLBIO  . . . . . . . . . . .  	L NEAR	078E	CODE
GOTALLCOM  . . . . . . . . . . .  	L NEAR	0865	CODE
GOTALLDOS  . . . . . . . . . . .  	L NEAR	07F9	CODE
GOTBADDOS  . . . . . . . . . . .  	L NEAR	011A	CODE
GOTBIOS  . . . . . . . . . . . .  	L NEAR	069A	CODE
GOTCOM . . . . . . . . . . . . .  	L NEAR	0743	CODE
GOTDOS . . . . . . . . . . . . .  	L NEAR	06EE	CODE
GOTNBIO  . . . . . . . . . . . .  	L NEAR	076B	CODE
GOTNCOM  . . . . . . . . . . . .  	L NEAR	0828	CODE
GOTNDOS  . . . . . . . . . . . .  	L NEAR	07BC	CODE
GOTSIZ2  . . . . . . . . . . . .  	L NEAR	0973	CODE
GOTTARG  . . . . . . . . . . . .  	L NEAR	08FD	CODE
GSYS . . . . . . . . . . . . . .  	L NEAR	0935	CODE

HARDFLAG . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
HEADER . . . . . . . . . . . . .  	L BYTE 	0102	CODE
HRDDRV . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
HRDMSG . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External

IBMJAPVER  . . . . . . . . . . .  	Alias	 FALSE		
IBMVER . . . . . . . . . . . . .  	Alias	 FALSE		
INBUFF . . . . . . . . . . . . .  	L BYTE 	0C7E	CODE
INIT . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
INITCALL . . . . . . . . . . . .  	L NEAR	021A	CODE
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_23 . . . . . . . . . . . . .  	L NEAR	08E8	CODE
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Symbols-11
                                                             

INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
INVALID  . . . . . . . . . . . .  	L NEAR	01B4	CODE
INVCHR . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
INVDRV . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
INVPAR . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
IOCNT  . . . . . . . . . . . . .  	L DWORD	0B37	CODE
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
IOLOOP . . . . . . . . . . . . .  	L NEAR	08ED	CODE
IORET  . . . . . . . . . . . . .  	L NEAR	0B03	CODE
IORETP . . . . . . . . . . . . .  	L NEAR	0B02	CODE

K64IO  . . . . . . . . . . . . .  	L NEAR	0AB9	CODE
K64M1  . . . . . . . . . . . . .  	L NEAR	0ACF	CODE
KANJI  . . . . . . . . . . . . .  	Alias	 FALSE		
KEEP_PROCESS . . . . . . . . . .  	Number	0031	

LABPRMT  . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MAKEFIL  . . . . . . . . . . . .  	L NEAR	0894	CODE
MAKE_NEXT  . . . . . . . . . . .  	L NEAR	0597	CODE
MEMERR . . . . . . . . . . . . .  	L NEAR	01C8	CODE
MEMEX  . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MORE . . . . . . . . . . . . . .  	L NEAR	0494	CODE
MSIZE  . . . . . . . . . . . . .  	L WORD 	0B3D	CODE
MSTART . . . . . . . . . . . . .  	L WORD 	0B3B	CODE
MSVER  . . . . . . . . . . . . .  	Alias	 TRUE		

NEEDSYS  . . . . . . . . . . . .  	L NEAR	0215	CODE
NOREDOS  . . . . . . . . . . . .  	L NEAR	0892	CODE
NORMALIZE  . . . . . . . . . . .  	L NEAR	0B18	CODE
NORMIO . . . . . . . . . . . . .  	L NEAR	0AEA	CODE
NOTSYS . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
NOUSE  . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		
NXTSWT . . . . . . . . . . . . .  	L NEAR	0173	CODE

Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Symbols-12
                                                             

OEM  . . . . . . . . . . . . . .  	Text  		
OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OKDOS  . . . . . . . . . . . . .  	L NEAR	0123	CODE
OLDSW  . . . . . . . . . . . . .  	Number	0004	
ONCLUS . . . . . . . . . . . . .  	L NEAR	0482	CODE
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
OUTBYTE  . . . . . . . . . . . .  	L NEAR	0411	CODE
OUTWORD  . . . . . . . . . . . .  	L NEAR	040A	CODE

PACK . . . . . . . . . . . . . .  	L NEAR	0334	CODE
PACKIN . . . . . . . . . . . . .  	L NEAR	0359	CODE
PACKIT . . . . . . . . . . . . .  	L NEAR	031A	CODE
PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PARTCOM  . . . . . . . . . . . .  	L NEAR	0850	CODE
PARTDOS  . . . . . . . . . . . .  	L NEAR	07E4	CODE
PERROR . . . . . . . . . . . . .  	L NEAR	04AA	CODE
PRINT  . . . . . . . . . . . . .  	L NEAR	048F	CODE	Global

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
RDFILS . . . . . . . . . . . . .  	L NEAR	064D	CODE
RDFRST . . . . . . . . . . . . .  	L NEAR	0210	CODE
RDFRST2  . . . . . . . . . . . .  	L NEAR	0888	CODE
READ . . . . . . . . . . . . . .  	Number	003F	
READDOS  . . . . . . . . . . . .  	L NEAR	0647	CODE
READFILE . . . . . . . . . . . .  	L NEAR	0A8A	CODE
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
RECLEN . . . . . . . . . . . . .  	Number	0015	
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
REPORT . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
REPORTC  . . . . . . . . . . . .  	L NEAR	03CC	CODE
RESTUDIR . . . . . . . . . . . .  	L NEAR	08D8	CODE
RET12  . . . . . . . . . . . . .  	L NEAR	09A9	CODE
RET2 . . . . . . . . . . . . . .  	L NEAR	043F	CODE
RET25  . . . . . . . . . . . . .  	L NEAR	05D2	CODE
RET3 . . . . . . . . . . . . . .  	L NEAR	0409	CODE
RET34  . . . . . . . . . . . . .  	L NEAR	076A	CODE
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Symbols-13
                                                             

RET34J . . . . . . . . . . . . .  	L NEAR	07E0	CODE
RET35  . . . . . . . . . . . . .  	L NEAR	0827	CODE
RET43  . . . . . . . . . . . . .  	L NEAR	08D7	CODE
RET50  . . . . . . . . . . . . .  	L NEAR	08BF	CODE
RET_L  . . . . . . . . . . . . .  	NEAR 	04F9	CODE
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
ROOTSTR  . . . . . . . . . . . .  	L BYTE 	0B2F	CODE
ROUNDED  . . . . . . . . . . . .  	L NEAR	0549	CODE
RPRI . . . . . . . . . . . . . .  	Number	0006	
RR . . . . . . . . . . . . . . .  	Number	0028	

SAVSWT . . . . . . . . . . . . .  	L NEAR	01D1	CODE
SAVUDIRS . . . . . . . . . . . .  	L NEAR	08CA	CODE
SCANOFF  . . . . . . . . . . . .  	L NEAR	01BD	CODE
SECSIZ . . . . . . . . . . . . .  	L WORD 	0C6C	CODE	Global
SECTORS  . . . . . . . . . . . .  	L WORD 	0C7C	CODE
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBIOS  . . . . . . . . . . . .  	L NEAR	09AA	CODE
SETBIOSSIZ . . . . . . . . . . .  	L NEAR	09C9	CODE
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETCOMSIZ  . . . . . . . . . . .  	L NEAR	0A43	CODE
SETDOSSIZ  . . . . . . . . . . .  	L NEAR	0A07	CODE
SETDPB . . . . . . . . . . . . .  	Number	0053	
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SH32 . . . . . . . . . . . . . .  	L NEAR	0B07	CODE
SH32B  . . . . . . . . . . . . .  	L NEAR	0B11	CODE
SNGDRV . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
SNGMSG . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
STACK  . . . . . . . . . . . . .  	L BYTE 	0DD0	CODE
START  . . . . . . . . . . . . .  	L NEAR	0100	CODE
STARTSECTOR  . . . . . . . . . .  	V WORD 	0000	CODE	External
STATUS . . . . . . . . . . . . .  	L NEAR	03BA	CODE
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Symbols-14
                                                             

STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
SWITCHCHK  . . . . . . . . . . .  	L NEAR	0228	CODE
SWITCHCOPY . . . . . . . . . . .  	L WORD 	0C64	CODE
SWITCHLIST . . . . . . . . . . .  	V BYTE 	0000	CODE	External
SWITCHMAP  . . . . . . . . . . .  	L WORD 	0C62	CODE	Global
SWTCH  . . . . . . . . . . . . .  	L BYTE 	0B31	CODE
SYSDRV . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
SYSLOOP  . . . . . . . . . . . .  	L NEAR	0230	CODE
SYSMSG . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
SYSOK  . . . . . . . . . . . . .  	L NEAR	03B4	CODE
SYSPRM . . . . . . . . . . . . .  	L NEAR	04B2	CODE
SYSSIZ . . . . . . . . . . . . .  	L DWORD	0C6E	CODE	Global
SYSSW  . . . . . . . . . . . . .  	Number	0001	
SYSTEST  . . . . . . . . . . . .  	L NEAR	02A6	CODE
SYSTRAN  . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
SYSTRKS  . . . . . . . . . . . .  	L WORD 	0C7A	CODE

TARGDRV  . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
TARGMSG  . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
TARGPRM  . . . . . . . . . . . .  	L NEAR	04C8	CODE
TEMPHANDLE . . . . . . . . . . .  	L WORD 	0B3F	CODE
TESTDONE . . . . . . . . . . . .  	L NEAR	0912	CODE
TESTSYS  . . . . . . . . . . . .  	L NEAR	0938	CODE
TESTSYSDISK  . . . . . . . . . .  	L NEAR	099E	CODE
TRKFND . . . . . . . . . . . . .  	L NEAR	0285	CODE
TRUE . . . . . . . . . . . . . .  	Number	FFFF	

UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
UNSCALE  . . . . . . . . . . . .  	L NEAR	0440	CODE	Global
USERDIRS . . . . . . . . . . . .  	L BYTE 	0B42	CODE	Length = 0043
USERIDOPER . . . . . . . . . . .  	Number	005E	

VER  . . . . . . . . . . . . . .  	Text  		
VOLFCB . . . . . . . . . . . . .  	L BYTE 	0BE1	CODE
VOLID  . . . . . . . . . . . . .  	L NEAR	05D3	CODE
VOLNAM . . . . . . . . . . . . .  	L BYTE 	0BE9	CODE
VOLRET . . . . . . . . . . . . .  	L NEAR	0642	CODE
VOLSW  . . . . . . . . . . . . .  	Number	0002	
VOL_LOOP . . . . . . . . . . . .  	L NEAR	05E3	CODE
VRET . . . . . . . . . . . . . .  	L NEAR	05DB	CODE

WAIT . . . . . . . . . . . . . .  	Number	004D	
WAITKY . . . . . . . . . . . . .  	L NEAR	04EF	CODE
WAITYN . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:22:50
                                                            Symbols-15
                                                             

WPRI . . . . . . . . . . . . . .  	Number	0008	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITEDOS . . . . . . . . . . . .  	L NEAR	0758	CODE
WRITEFILE  . . . . . . . . . . .  	L NEAR	0A99	CODE
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
WRTFAT . . . . . . . . . . . . .  	L NEAR	0000	CODE	External

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	

??0000 . . . . . . . . . . . . .  	L NEAR	04F9	CODE


   2896 Source  Lines
   2963 Total   Lines
    743 Symbols

  15052 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
