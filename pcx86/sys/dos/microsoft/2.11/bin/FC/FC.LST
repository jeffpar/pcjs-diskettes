Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-1
                                                            

                                        title   File Compare Routine for MSDOS 
				2.0 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ; Revision History:                            
				                         ; 
                                ;                                              
				                         ; 
                                ; V1.0  Rev. 0  10/27/82        M.A.Ulloa      
				                         ; 
                                ;                                              
				                         ; 
                                ;       Rev. 1  10/28/82        M.A.Ulloa      
				                         ; 
                                ;         Changed switch names and added binary
				 compare using the       ; 
                                ;       -b switch.                             
				                         ; 
                                ;                                              
				                         ; 
                                ;       Rev. 1  11/4/82         A.R. Reynolds  
				                         ; 
                                ;         Messages in separate module          
				                         ; 
                                ;       Also added header for MSVER            
				                         ; 
                                ;                                              
				                         ; 
                                ;       Rev. 2  11/29/82        M.A. Ulloa     
				                         ; 
                                ;         Corrected sysntex problem with refere
				nces to [base...]        ; 
                                ;                                              
				                         ; 
                                ;       Rev. 3  01/03/83        M.A. Ulloa     
				                         ; 
                                ;         Stack is right size now.             
				                         ; 
                                ;                                              
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
                                 
 = 0000                         FALSE   equ     0 
 = 00FF                         TRUE    equ     0ffh 
                                 
                                 
 = 1000                         buf_size equ    4096                    ;buffer
				 size 
                                 
                                 
                                ;----------------------------------------------
				-------------------------; 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-2
                                                            

                                ;               Description                    
				                         ; 
                                ;                                              
				                         ; 
                                ;       FC [-# -b -w -c] <file1> <file2>       
				                         ; 
                                ;                                              
				                         ; 
                                ; Options:                                     
				                         ; 
                                ;                                              
				                         ; 
                                ;       -# were # is a number from 1 to 9, how 
				many lines have to       ; 
                                ; before the end of an area of difference ends.
				                         ; 
                                ;                                              
				                         ; 
                                ;       -b will force a binary comparation of b
				oth files.               ; 
                                ;                                              
				                         ; 
                                ;       -w will cause all spaces and tabs to be
				 compressed to a single  ; 
                                ; space before comparing. All leading and trail
				ing spaces and/or tabs   ; 
                                ; in a line are ignored.                       
				                         ; 
                                ;                                              
				                         ; 
                                ;       -c will cause FC to ignore the case of 
				the letters.             ; 
                                ;                                              
				                         ; 
                                ; Algorithm for text compare: (The one for bina
				ry comp. is trivial)     ; 
                                ;                                              
				                         ; 
                                ;       The files are read into two separate bu
				ffers and the            ; 
                                ; comparation starts. If two lines are found to
				 be different in the     ; 
                                ; two buffers, say line i of buffer A and line 
				j of buffer B differ.    ; 
                                ; The program will try to match line i with lin
				e j+1, then with line    ; 
                                ; j+2 and so on, if the end of buffer is reache
				d the program will       ; 
                                ; recompact the buffer and try to read more lin
				es into the buffer, if   ; 
                                ; no more lines can be read because either the 
				buffer is full, or the   ; 
                                ; end of file was reached, then it will revert 
				and try to match line    ; 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-3
                                                            

                                ; j of buffer B to line i+1, i+2 and so on of b
				uffer A. If an end of    ; 
                                ; buffer is found, it tries to refill it as bef
				ore. If no matches are   ; 
                                ; found, then it will try to match line i+1 of 
				buffer A to line j+1,    ; 
                                ; j+2, j+3, .... of buffer B, if still no match
				es are found, it reverts ; 
                                ; again and tries to match line j+1 of buffer B
				 with lines i+2, i+3,... ; 
                                ; of buffer A. And so on till a match is found.
				                         ; 
                                ;                                              
				                         ; 
                                ;       Once a match is found it continues chck
				ing pairs of lines till  ; 
                                ; the specified number are matched (option #, 3
				 by default), and then   ; 
                                ; it prints the differing area in both files, e
				ach followed by the      ; 
                                ; first line matched.                          
				                         ; 
                                ;                                              
				                         ; 
                                ;       If no match is found (the difference is
				 bigger than the buffer) ; 
                                ; a "files different" message is printed.      
				                         ; 
                                ;                                              
				                         ; 
                                ;       If one of the files finishes before ano
				ther the remaining       ; 
                                ; portion of the file (plus any ongoing differe
				nce) is printed out.     ; 
                                ;                                              
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
                                 
                                 
                                        subttl  Debug Macros 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-4
Debug Macros                                                

                                        page 
                                 
                                m_debug macro   str 
                                        local   a,b 
                                        jmp     short b 
                                a       db      str,0dh,0ah,"$" 
                                b:      pushf 
                                        push    dx 
                                        mov     dx,offset code:a 
                                        push    ds 
                                        push    cs 
                                        pop     ds 
                                        push    ax 
                                        mov     ah,9h 
                                        int     21h 
                                        pop     ax 
                                        pop     ds 
                                        pop     dx 
                                        popf 
                                        endm 
                                 
                                 
                                m_bname macro 
                                        local   a0,a1,a2,b1,b2 
                                        jmp     short a0 
                                b1      db      "------ buffer 1",0dh,0ah,"$" 
                                b2      db      "------ buffer 2",0dh,0ah,"$" 
                                a0:     pushf 
                                        push    dx 
                                        cmp     bx,offset dg:buf1 
                                        je      a1 
                                        mov     dx,offset code:b2 
                                        jmp     short a2 
                                a1:     mov     dx,offset code:b1 
                                a2:     push    ds 
                                        push    cs 
                                        pop     ds 
                                        push    ax 
                                        mov     ah,9h 
                                        int     21h 
                                        pop     ax 
                                        pop     ds 
                                        pop     dx 
                                        popf 
                                        endm 
                                 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-5
Debug Macros                                                

                                        page 
                                 
                                        .SALL 
                                        .LIST 
                                 
                                        subttl  General Definitions 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-6
General Definitions                                         

                                        page 
                                 
 = 000D                         CR      equ     0dh 
 = 000A                         LF      equ     0ah 
                                 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;       Offsets to buffer structure 
                                ;       For text comparations: 
                                 
 = 0000                         fname      equ  0               ;file name ptr 
 = 0002                         fname_len  equ  2               ;file name leng
				th 
 = 0004                         handle     equ  4               ;handle 
 = 0006                         curr       equ  6               ;current line p
				tr 
 = 0008                         lst_curr   equ  8               ;last current l
				ine ptr 
 = 000A                         fst_sinc   equ  10              ;first line tow
				ards a sinc ptr 
 = 000C                         fst_nosinc equ  12              ;first line out
				 of sinc ptr 
 = 000E                         dat_end    equ  14              ;ptr to last ch
				ar of the buffer 
 = 0010                         buf_end    equ  16              ;pointer to the
				 end of the buffer 
 = 0012                         buf        equ  18              ;pointer to the
				 buffer 
                                 
                                ;       For binary comparations: 
                                 
 = 0006                         by_read    equ  6               ;bytes read int
				o buffer 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                 
                                 
 0000                           code    segment word 
 0000                           code    ends 
                                 
 0000                           const   segment public word 
 0000                           const   ends 
                                 
 0000                           data    segment word 
 0000                           data    ends 
                                 
                                dg      group   code,const,data 
                                 
                                 
                                        subttl  Constants Area 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-7
Constants Area                                              

                                        page 
                                 
 0000                           const   segment public word 
                                 
 0000  4D 41 55 6C 6C 6F 61     make    db      "MAUlloa/Microsoft/V10" 
       2F 4D 69 63 72 6F 73     
       6F 66 74 2F 56 31 30     
                                
 0015  32                       rev     db      "2" 
                                 
                                ;----- CAREFULL WITH PRESERVING THE ORDER OF TH
				E TABLE ----- 
 = 0016                         opt_tbl equ     $                       ;option
				 table 
                                 
 0016  00                       flg_b   db      FALSE 
 0017  00                       flg_c   db      FALSE 
 0018  00                       flg_s   db      FALSE 
 0019  00                       flg_w   db      FALSE 
                                ;----------------------------------------------
				------------- 
                                 
 001A  00                       ib_first1 db    FALSE                   ;flags 
				used when comparing lines 
 001B  00                       ib_first2 db    FALSE                   ; while
				 in ignore white mode. 
                                 
 001C  0003                     m_num   dw      3                       ;lines 
				that have to match before 
                                                                        ; repor
				ting a match 
                                 
 001E  0000                     mtch_cntr dw    0                       ;matche
				s towards a sinc 
                                 
 0020  00                       mode    db      FALSE                   ;If fal
				se then trying to match a line 
                                                                        ; from 
				buf1 to lines in buf2. If true 
                                                                        ; then 
				viceversa. 
                                 
 0021  FF                       sinc    db      TRUE                    ;Sinc f
				lag, start IN SINC 
                                 
 0022  00                       bend    db      0                       ;binary
				 end of file flag, 0= none yet, 
                                                                        ; 1= fi
				le 1 ended, 2= file 2 ended 
                                 
 0023  00 00 00 00              base    dd      0                       ;base a
				ddress of files for binary 
                                                                        ; compa
				rations 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-8
Constants Area                                              

                                 
 0027  00                       bhead_flg db    false                   ;true i
				f heading for binary comp. 
                                                                        ; has b
				een printed already. 
                                 
                                ;----------------------------------------------
				------------- 
 = 0028                         bp_buf  equ     $                       ;binary
				 compare difference template 
                                 
 0028  0008[                    bp_buf1 db      8 dup(' ')              ;file a
				ddress 
            20                  
                         ]      
                                
 0030  0003[                            db      3 dup(' ') 
            20                  
                         ]      
                                
 0033  0002[                    bp_buf2 db      2 dup(' ')              ;byte o
				f file 1 
            20                  
                         ]      
                                
 0035  0003[                            db      3 dup(' ') 
            20                  
                         ]      
                                
 0038  0002[                    bp_buf3 db      2 dup(' ')              ;byte o
				f file 1 
            20                  
                         ]      
                                
 003A  0D 0A                            db      CR,LF 
                                 
 = 0014                         bp_buf_len equ  $ - bp_buf              ;length
				 of template 
                                ;----------------------------------------------
				------------- 
                                 
                                        EXTRN   vers_err:byte,opt_err:byte,opt_
				e:byte,crlf:byte,opt_err_len:byte 
                                        EXTRN   bhead_len:byte 
                                        EXTRN   found_err_pre:byte,found_err_pr
				e_len:byte 
                                        EXTRN   found_err_post:byte,found_err_p
				ost_len:byte 
                                        EXTRN   read_err_pre:byte,read_err_pre_
				len:byte 
                                        EXTRN   read_err_post:byte,read_err_pos
				t_len:byte 
                                        EXTRN   file_err:byte,file_err_len:byte
				 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-9
Constants Area                                              

                                        EXTRN   bf1ne:byte,bf1ne_len:byte,bf2ne
				:byte,bf2ne_len:byte,bhead:byte 
                                        EXTRN   int_err:byte,int_err_len:byte,d
				if_err:byte,dif_err_len:byte 
                                        EXTRN   args_err:byte,args_err_len:byte
				,fname_sep:byte,fname_sep_len:byte 
                                        EXTRN   diff_sep:byte,diff_sep_len:byte
				 
                                 
 003C                           const   ends 
                                 
                                 
                                 
                                        subttl  Data Area 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-10
Data Area                                                   

                                        page 
                                 
 0000                           data    segment word 
                                 
 0000  0080[                    com_buf db      128 dup(?)      ;command line b
				uffer 
            ??                  
                         ]      
                                
                                 
                                ;----- Buffer structures 
 0080  000B[                    buf1    dw      11 dup(?) 
            ????                
                         ]      
                                
 0096  000B[                    buf2    dw      11 dup(?) 
            ????                
                         ]      
                                
                                 
                                ; two extra for guard in case of need to insert
				 a CR,LF pair 
 00AC  1000[                    b1      db      buf_size dup(?) 
            ??                  
                         ]      
                                
 10AC  0002[                    end_b1  db      2 dup(?) 
            ??                  
                         ]      
                                
 10AE  1000[                    b2      db      buf_size dup(?) 
            ??                  
                         ]      
                                
 20AE  0002[                    end_b2  db      2 dup(?) 
            ??                  
                         ]      
                                
                                 
 20B0                           data    ends 
                                 
                                 
                                 
                                        subttl  MAIN Routine 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-11
MAIN Routine                                                

                                        page 
                                 
 0000                           code    segment 
                                assume  cs:dg,ds:nothing,es:nothing,ss:stack 
                                 
 0000                           start: 
 0000  EB 09                            jmp     short FCSTRT 
                                ;----------------------------------------------
				-------------------------; 
                                ;       Check version number 
                                 
 0002  56 65 72 73 20 31 2E     HEADER  DB      "Vers 1.00" 
       30 30                    
                                 
 000B                           FCSTRT: 
                                ;Code to print header 
                                ;       PUSH    DS 
                                ;       push    cs 
                                ;       pop     ds 
                                ;       MOV     DX,OFFSET DG:HEADER 
                                ;       mov     ah,std_con_string_output 
                                ;       int     21h 
                                ;       POP     DS 
                                 
 000B  B4 30                            mov     ah,get_version 
 000D  CD 21                            int     21h 
 000F  3C 02                            cmp     al,2 
 0011  7D 0C                            jge     vers_ok 
 0013  BA 0000 E                        mov     dx,offset dg:vers_err 
 0016  B4 09                            mov     ah,std_con_string_output 
 0018  CD 21                            int     21h 
 001A  06                               push    es                      ;bad ve
				rs, exit a la 1.x 
 001B  33 C0                            xor     ax,ax 
 001D  50                               push    ax 
                                 
 001E                           badvex  proc    far 
 001E  CB                               ret 
                                badvex  endp 
                                 
                                 
 001F                           vers_ok: 
 001F  0E                               push    cs 
 0020  07                               pop     es 
                                 
                                assume  es:dg 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;       Copy command line 
                                 
 0021  BE 0080                          mov     si,80h                  ;comman
				d line address 
 0024  FC                               cld 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-12
MAIN Routine                                                

 0025  AC                               lodsb                           ;get ch
				ar count 
 0026  8A C8                            mov     cl,al 
 0028  32 ED                            xor     ch,ch 
 002A  41                               inc     cx                      ;includ
				e the CR 
 002B  BF 0000 R                        mov     di,offset dg:com_buf 
 002E  FC                               cld 
 002F  F3/ A4                           rep     movsb 
                                 
 0031  0E                               push    cs 
 0032  1F                               pop     ds 
                                 
                                assume  ds:dg 
                                 
                                 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;       Initialize buffer structures 
                                 
 0033  BB 0080 R                        mov     bx,offset dg:buf1 
 0036  C7 47 12 00AC R                  mov     word ptr [bx].buf,offset dg:b1 
 003B  C7 47 10 10AC R                  mov     word ptr [bx].buf_end,offset dg
				:end_b1 
 0040  BB 0096 R                        mov     bx,offset dg:buf2 
 0043  C7 47 12 10AE R                  mov     word ptr [bx].buf,offset dg:b2 
 0048  C7 47 10 20AE R                  mov     word ptr [bx].buf_end,offset dg
				:end_b2 
                                 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;       Process options 
                                 
 004D  B4 37                            mov     ah,char_oper 
 004F  B0 00                            mov     al,0 
 0051  CD 21                            int     21h                     ;get sw
				itch character 
 0053  BE 0000 R                        mov     si,offset dg:com_buf 
                                 
 0056                           cont_opt: 
 0056  E8 0356 R                        call    kill_bl 
 0059  72 55                            jc      bad_args                ;argume
				nts missing 
 005B  3A C2                            cmp     al,dl                   ;switch
				 character? 
 005D  75 5B                            jne     get_file                ;no, pr
				ocess file names 
 005F  FC                               cld 
 0060  AC                               lodsb                           ;get op
				tion 
 0061  E8 034B R                        call    make_caps               ;capita
				lize option 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-13
MAIN Routine                                                

 0064  BB 0016 R                        mov     bx,offset dg:opt_tbl 
                                 
 0067  3C 42                            cmp     al,'B' 
 0069  74 2E                            je      b_opt 
 006B  3C 43                            cmp     al,'C' 
 006D  74 2F                            je      c_opt 
 006F  3C 53                            cmp     al,'S' 
 0071  74 30                            je      s_opt 
 0073  3C 57                            cmp     al,'W' 
 0075  74 31                            je      w_opt 
 0077  3C 31                            cmp     al,'1'                  ;a numb
				er option? 
 0079  72 0D                            jb      bad_opt 
 007B  3C 39                            cmp     al,'9' 
 007D  77 09                            ja      bad_opt 
 007F  24 0F                            and     al,0fh                  ;a numb
				er option, convert to binary 
 0081  32 E4                            xor     ah,ah                   ;zero h
				igh nibble 
 0083  A3 001C R                        mov     [m_num],ax 
 0086  EB CE                            jmp     short cont_opt 
                                 
 0088                           bad_opt:                                ;a bad 
				option: 
 0088  52                               push    dx                      ; save 
				switch character 
 0089  A2 0000 E                        mov     [opt_e],al              ; optio
				n in error 
 008C  BA 0000 E                        mov     dx,offset dg:opt_err 
 008F  8A 0E 0000 E                     mov     cl,opt_err_len 
 0093  E8 06A0 R                        call    prt_err                 ; print
				 error message 
 0096  5A                               pop     dx 
 0097  EB BD                            jmp     short cont_opt          ; proce
				ss rest of options 
                                 
 0099                           b_opt: 
 0099  BF 0000                          mov     di,0 
 009C  EB 0D                            jmp     short opt_dispatch 
                                 
 009E                           c_opt: 
 009E  BF 0001                          mov     di,1 
 00A1  EB 08                            jmp     short opt_dispatch 
                                 
 00A3                           s_opt: 
 00A3  BF 0002                          mov     di,2 
 00A6  EB 03                            jmp     short opt_dispatch 
                                 
 00A8                           w_opt: 
 00A8  BF 0003                          mov     di,3 
                                 
 00AB                           opt_dispatch: 
 00AB  C6 01 FF                         mov     byte ptr dg:[bx+di],TRUE       
				 ;set the corresponding flag 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-14
MAIN Routine                                                

 00AE  EB A6                            jmp     short cont_opt 
                                 
                                 
 00B0                           bad_args: 
 00B0  BA 0000 E                        mov     dx,offset dg:args_err 
 00B3  8A 0E 0000 E                     mov     cl,args_err_len 
 00B7  EB 6B 90                         jmp     an_err 
                                 
                                 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;       Get the file names 
                                 
 00BA                           get_file: 
 00BA  4E                               dec     si                      ;adjust
				 pointer 
 00BB  E8 0367 R                        call    find_nonb               ;find f
				irst non blank in com. buffer 
 00BE  72 F0                            jc      bad_args                ;file (
				or files) missing 
 00C0  C6 05 00                         mov     byte ptr [di],0         ;nul te
				rminate 
 00C3  8B D6                            mov     dx,si                   ;pointe
				r to file name 
 00C5  BB 0080 R                        mov     bx,offset dg:buf1 
 00C8  89 17                            mov     word ptr [bx].fname,dx         
				 ;save pointer to file name 
 00CA  89 4F 02                         mov     word ptr [bx].fname_len,cx     
				 ;file name length 
 00CD  B4 3D                            mov     ah,open 
 00CF  B0 00                            mov     al,0                    ;open f
				or reading 
 00D1  CD 21                            int     21h 
 00D3  72 29                            jc      bad_file 
 00D5  89 47 04                         mov     word ptr [bx].handle,ax        
				 ;save the handle 
                                 
 00D8  8B F7                            mov     si,di 
 00DA  46                               inc     si                      ;point 
				past the nul 
 00DB  E8 0356 R                        call    kill_bl                 ;find o
				ther file name 
 00DE  72 D0                            jc      bad_args                ;a CR f
				ound: file name missing 
 00E0  4E                               dec     si                      ;adjust
				 pointer 
 00E1  E8 0367 R                        call    find_nonb 
 00E4  C6 05 00                         mov     byte ptr [di],0         ;nul te
				rminate the file name 
 00E7  8B D6                            mov     dx,si 
 00E9  BB 0096 R                        mov     bx,offset dg:buf2 
 00EC  89 17                            mov     word ptr [bx].fname,dx         
				 ;save pointer to file name 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-15
MAIN Routine                                                

 00EE  89 4F 02                         mov     word ptr [bx].fname_len,cx     
				 ;file name length 
 00F1  B4 3D                            mov     ah,open 
 00F3  B0 00                            mov     al,0                    ;open f
				or reading 
 00F5  CD 21                            int     21h 
 00F7  72 05                            jc      bad_file 
 00F9  89 47 04                         mov     word ptr [bx].handle,ax        
				 ;save the handle 
 00FC  EB 2F                            jmp     short go_compare 
                                 
 00FE                           bad_file: 
 00FE  3D 0002                          cmp     ax,error_file_not_found 
 0101  74 09                            je      sj01 
 0103  BA 0000 E                        mov     dx,offset dg:int_err 
 0106  8A 0E 0000 E                     mov     cl,int_err_len 
 010A  EB 18                            jmp     short an_err 
 010C                           sj01: 
 010C  51                               push    cx                      ;save f
				ile name length 
 010D  BA 0000 E                        mov     dx,offset dg:found_err_pre 
 0110  8A 0E 0000 E                     mov     cl,found_err_pre_len 
 0114  E8 06A0 R                        call    prt_err 
 0117  59                               pop     cx 
 0118  8B D6                            mov     dx,si                   ;pointe
				r to file name length 
 011A  E8 06A0 R                        call    prt_err 
 011D  BA 0000 E                        mov     dx,offset dg:found_err_post 
 0120  8A 0E 0000 E                     mov     cl,found_err_post_len 
 0124                           an_err: 
 0124  E8 06A0 R                        call    prt_err 
 0127  B0 FF                            mov     al,-1                   ;return
				 an error code 
 0129  B4 4C                            mov     ah,exit 
 012B  CD 21                            int     21h 
                                 
                                 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;               CHECK COMPARE MODE 
                                 
 012D                           go_compare: 
 012D  80 3E 0016 R FF                  cmp     [flg_b],true            ;do we 
				do a binary comparation? 
 0132  74 03                            je      bin_compare 
 0134  E9 01D1 R                        jmp     txt_compare 
                                 
                                 
                                        subttl  Binary Compare Routine 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-16
Binary Compare Routine                                      

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;       COMPARE BUFFERS IN BINARY MODE 
                                 
 0137                           bin_compare: 
                                 
                                ;----- Fill in the buffers 
                                 
 0137  BB 0080 R                        mov     bx,offset dg:buf1       ;pointe
				r to buffer structure 
 013A  8B 57 12                         mov     dx,word ptr[bx].buf     ;pointe
				r to buffer 
 013D  8B F2                            mov     si,dx                   ;save f
				or latter comparation 
 013F  E8 05B5 R                        call    read_dat                ;read i
				nto buffer 
 0142  72 0F                            jc      bad_datj                ;an err
				or 
 0144  89 47 06                         mov     word ptr[bx].by_read,AX    ;sav
				e ammount read 
 0147  50                               push    ax                      ;save f
				or now 
                                 
 0148  BB 0096 R                        mov     bx,offset dg:buf2       ;pointe
				r to buffer structure 
 014B  8B 57 12                         mov     dx,word ptr[bx].buf     ;pointe
				r to buffer 
 014E  8B FA                            mov     di,dx                   ;save f
				or comparation 
 0150  E8 05B5 R                        call    read_dat                ;read i
				nto buffer 
 0153  72 72                    bad_datj: jc    bad_dat                 ;an err
				or 
 0155  89 47 06                         mov     word ptr[bx].by_read,AX    ;sav
				e ammount read 
                                 
 0158  59                               pop     cx                      ;restor
				e byte count of buffer1 
 0159  3B C1                            cmp     ax,cx                   ;compar
				e byte counts 
 015B  77 09                            ja      morein_b2 
 015D  72 0E                            jb      morein_b1 
 015F  0B C0                            or      ax,ax                   ;the sa
				me ammount, is it 0? 
 0161  75 11                            jne     go_bcomp                ;no,com
				pare 
 0163  E9 0345 R                        jmp     go_quit                 ;yes, a
				ll done.... 
                                 
 0166                           morein_b2: 
 0166  C6 06 0022 R 01                  mov     [bend],1                ;file 1
				 ended 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-17
Binary Compare Routine                                      

 016B  EB 07                            jmp     short go_bcomp 
                                 
 016D                           morein_b1: 
 016D  C6 06 0022 R 02                  mov     [bend],2                ;file 2
				 ended 
 0172  8B C8                            mov     cx,ax 
                                 
                                ;----- Compare data in buffers 
                                 
 0174                           go_bcomp: 
 0174  A1 0023 R                        mov     ax,word ptr [base]      ;load b
				ase addrs. to AX,BX pair 
 0177  8B 1E 0025 R                     mov     bx,word ptr [base+2] 
 017B  03 D9                            add     bx,cx                   ;add to
				 base num. of bytes to 
 017D  15 0000                          adc     ax,0                    ; compa
				re. 
 0180  A3 0023 R                        mov     word ptr [base],ax      ;save t
				otal 
 0183  89 1E 0025 R                     mov     word ptr [base+2],bx 
                                 
 0187                           next_bcomp: 
 0187  FC                               cld 
 0188  E3 17                            jcxz    end_check 
 018A  F3/ A6                           repz    cmpsb                   ;compar
				e both buffers 
 018C  74 13                            jz      end_check               ;all by
				tes match 
 018E  51                               push    cx                      ;save c
				ount so far 
 018F  50                               push    ax 
 0190  53                               push    bx 
 0191  41                               inc     cx 
 0192  2B D9                            sub     bx,cx                   ;get fi
				le address of bytes that 
 0194  1D 0000                          sbb     ax,0                    ; are d
				ifferent. 
 0197  E8 0387 R                        call    prt_bdif                ;print 
				difference 
 019A  5B                               pop     bx 
 019B  58                               pop     ax 
 019C  59                               pop     cx                      ;restor
				e on-going comparation count 
 019D  EB E8                            jmp     short next_bcomp 
                                 
 019F                           bnot_yet: 
 019F  EB 96                            jmp     bin_compare 
                                 
 01A1                           end_check: 
 01A1  80 3E 0022 R 00                  cmp     [bend],0                ;have a
				ny file ended yet? 
 01A6  74 F7                            je      bnot_yet                ;no, re
				ad in more data 
 01A8  80 3E 0022 R 01                  cmp     [bend],1                ;yes, w
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-18
Binary Compare Routine                                      

				as it file 1? 
 01AD  74 09                            je      bf1_ended               ;yes, d
				ata left in file 2 
 01AF  BA 0000 E                        mov     dx,offset dg:bf1ne 
 01B2  8A 0E 0000 E                     mov     cl,bf1ne_len 
 01B6  EB 07                            jmp     short bend_mes 
                                 
 01B8                           bf1_ended: 
 01B8  BA 0000 E                        mov     dx,offset dg:bf2ne 
 01BB  8A 0E 0000 E                     mov     cl,bf2ne_len 
                                 
 01BF                           bend_mes: 
 01BF  32 ED                            xor     ch,ch 
 01C1  E8 0696 R                        call    prout 
 01C4  E9 0345 R                        jmp     go_quit 
                                 
                                 
                                 
                                        subttl  Text Compare Routine 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-19
Text Compare Routine                                        

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;               Fill in the buffers 
                                 
 01C7                           bad_dat: 
 01C7  BA 0000 E                        mov     dx,offset dg:file_err 
 01CA  8A 0E 0000 E                     mov     cl,file_err_len 
 01CE  E9 0124 R                        jmp     an_err 
                                 
                                 
 01D1                           txt_compare: 
                                 
 01D1  BB 0080 R                        mov     bx,offset dg:buf1 
 01D4  8B 57 12                         mov     dx,word ptr [bx].buf 
 01D7  89 57 0C                         mov     word ptr [bx].fst_nosinc,dx 
 01DA  89 57 06                         mov     word ptr [bx].curr,dx 
                                 
 01DD  E8 055E R                        call    fill_buffer 
 01E0  72 E5                            jc      bad_dat 
                                 
 01E2  BB 0096 R                        mov     bx,offset dg:buf2 
 01E5  8B 57 12                         mov     dx,word ptr [bx].buf 
 01E8  89 57 0C                         mov     word ptr [bx].fst_nosinc,dx 
 01EB  89 57 06                         mov     word ptr [bx].curr,dx 
                                 
 01EE  E8 055E R                        call    fill_buffer 
 01F1  72 D4                            jc      bad_dat 
                                 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;       COMPARE BUFFERS IN TEXT MODE 
                                 
 01F3                           another_line: 
 01F3  E8 03F5 R                        call    go_match                ;try to
				 match both current lines 
 01F6  72 03                            jc      sj02                    ;a matc
				h 
 01F8  EB 4B 90                         jmp     no_match                ;no mat
				ch, continue.... 
 01FB                           sj02: 
 01FB  80 3E 0021 R FF                  cmp     byte ptr[sinc],true     ;are we
				 in SINC? 
 0200  74 25                            je      sj04 
 0202  A1 001E R                        mov     ax,[mtch_cntr] 
 0205  0B C0                            or      ax,ax                   ;first 
				line of a possible SINC? 
 0207  75 0C                            jnz     sj03 
 0209  BB 0080 R                        mov     bx,offset dg:buf1 
 020C  89 77 0A                         mov     word ptr [bx].fst_sinc,si      
				 ;yes, save curr line buffer 1 
 020F  BB 0096 R                        mov     bx,offset dg:buf2 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-20
Text Compare Routine                                        

 0212  89 7F 0A                         mov     word ptr [bx].fst_sinc,di      
				 ;save curr line buffer 2 
 0215                           sj03: 
 0215  40                               inc     ax                      ;increm
				ent match counter 
 0216  A3 001E R                        mov     [mtch_cntr],ax          ;save n
				umber of matches 
 0219  39 06 001C R                     cmp     m_num,ax                ;enough
				 lines matched for a SINC? 
 021D  75 08                            jne     sj04                    ;not ye
				t, match some more 
 021F  C6 06 0021 R FF                  mov     [sinc],true             ;yes, f
				lag we are now in sinc 
 0224  E8 060F R                        call    print_diff              ;print 
				mismatched lines 
                                 
                                 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;       Advance current line pointer in both bu
				ffers 
                                 
 0227                           sj04: 
 0227  BB 0080 R                        mov     bx,offset dg:buf1 
 022A  E8 04FE R                        call    adv_b 
 022D  73 03                            jnc     sj05 
 022F  E9 02C8 R                        jmp     no_more1 
 0232                           sj05: 
 0232  89 77 06                         mov     word ptr[bx].curr,si 
 0235  BB 0096 R                        mov     bx,offset dg:buf2 
 0238  E8 04FE R                        call    adv_b 
 023B  73 03                            jnc     sj051 
 023D  E9 02F7 R                        jmp     no_more2 
 0240                           sj051: 
 0240  89 77 06                         mov     word ptr[bx].curr,si 
 0243  EB AE                            jmp     another_line            ;contin
				ue matching 
                                 
                                 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;               Process a mismatch 
                                 
 0245                           no_match: 
 0245  80 3E 0021 R FF                  cmp     [sinc],true             ;are we
				 in SINC? 
 024A  75 17                            jne     sj06 
 024C  C6 06 0021 R 00                  mov     [sinc],false            ;not an
				y more.... 
 0251  BB 0080 R                        mov     bx,offset dg:buf1 
 0254  89 77 0C                         mov     word ptr [bx].fst_nosinc,si    
				 ;save current lines 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-21
Text Compare Routine                                        

 0257  89 77 08                         mov     word ptr [bx].lst_curr,si 
 025A  BB 0096 R                        mov     bx,offset dg:buf2 
 025D  89 7F 0C                         mov     word ptr [bx].fst_nosinc,di 
 0260  89 7F 08                         mov     word ptr [bx].lst_curr,di 
 0263                           sj06: 
 0263  C7 06 001E R 0000                mov     [mtch_cntr],0           ;reset 
				match counter 
 0269  80 3E 0020 R FF                  cmp     [mode],true 
 026E  74 2C                            je      sj09 
                                 
                                ;----- MODE A ----- 
 0270  BB 0096 R                        mov     bx,offset dg:buf2 
 0273  E8 04FE R                        call    adv_b                   ;get ne
				xt line in buffer (or file) 
 0276  72 06                            jc      sj08                    ;no mor
				e lines in buffer 
 0278                           sj07: 
 0278  89 77 06                         mov     word ptr [bx].curr,si 
 027B  E9 01F3 R                        jmp     another_line 
 027E                           sj08: 
 027E  C6 06 0020 R FF                  mov     [mode],true             ;change
				 mode 
 0283  8B 77 08                         mov     si,word ptr [bx].lst_curr 
 0286  89 77 06                         mov     word ptr [bx].curr,si 
 0289  BB 0080 R                        mov     bx,offset dg:buf1 
 028C  8B 77 08                         mov     si,word ptr [bx].lst_curr 
 028F  89 77 06                         mov     word ptr [bx].curr,si 
 0292  E8 04FE R                        call    adv_b                   ;get ne
				xt line 
 0295  72 31                            jc      no_more1                ;no mor
				e lines fit in buffer 1 
 0297  89 77 08                         mov     word ptr [bx].lst_curr,si 
 029A  EB 08                            jmp     short sj10 
                                 
                                ;----- MODE B ----- 
 029C                           sj09: 
 029C  BB 0080 R                        mov     bx,offset dg:buf1 
 029F  E8 04FE R                        call    adv_b                   ;get ne
				xt line in buffer (or file) 
 02A2  72 06                            jc      sj11                    ;no mor
				e lines in buffer 
 02A4                           sj10: 
 02A4  89 77 06                         mov     word ptr [bx].curr,si 
 02A7  E9 01F3 R                        jmp     another_line 
                                 
 02AA                           sj11: 
 02AA  C6 06 0020 R 00                  mov     [mode],false 
 02AF  8B 77 08                         mov     si,word ptr [bx].lst_curr 
 02B2  89 77 06                         mov     word ptr [bx].curr,si 
 02B5  BB 0096 R                        mov     bx,offset dg:buf2 
 02B8  8B 77 08                         mov     si,word ptr [bx].lst_curr 
 02BB  89 77 06                         mov     word ptr [bx].curr,si 
 02BE  E8 04FE R                        call    adv_b                   ;get ne
				xt line 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-22
Text Compare Routine                                        

 02C1  72 34                            jc      no_more2                ;no mor
				e lines fit in buffer 2 
 02C3  89 77 08                         mov     word ptr [bx].lst_curr,si 
 02C6  EB B0                            jmp     sj07 
                                 
                                 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;               Process end of files 
                                 
 02C8                           no_more1: 
 02C8  3D 0000                          cmp     ax,0                    ;end of
				 file reached? 
 02CB  74 03                            jz      xj1 
 02CD  EB 6C 90                         jmp     dif_files               ;no, di
				fference was too big 
 02D0                           xj1: 
 02D0  80 3E 0021 R FF                  cmp     [sinc],true             ;file1 
				ended, are we in SINC? 
 02D5  74 03                            je      xj3 
 02D7  EB 4D 90                         jmp     no_sinc 
 02DA                           xj3: 
 02DA  BB 0096 R                        mov     bx,offset dg:buf2 
 02DD  E8 04FE R                        call    adv_b                   ;advanc
				e current line in buf2 
 02E0  73 03                            jnc     xj5 
 02E2  EB 61 90                         jmp     go_quit                 ;file2 
				ended too, terminate prog. 
 02E5                           xj5: 
                                 
                                ;----- File 1 ended but NOT file 2 
 02E5  BB 0080 R                        mov     bx,offset dg:buf1 
 02E8  E8 0648 R                        call    print_head 
 02EB  BB 0096 R                        mov     bx,offset dg:buf2 
 02EE  E8 0648 R                        call    print_head 
 02F1  E8 0666 R                        call    print_all               ;print 
				the rest of file2 
 02F4  EB 4F 90                         jmp     go_quit 
                                 
                                 
 02F7                           no_more2: 
 02F7  3D 0000                          cmp     ax,0                    ;end of
				 file reached? 
 02FA  74 03                            jz      xj2 
 02FC  EB 3D 90                         jmp     dif_files               ;no, di
				fference was too big 
 02FF                           xj2: 
 02FF  80 3E 0021 R FF                  cmp     [sinc],true             ;file1 
				ended, are we in SINC? 
 0304  74 03                            je      xj4 
 0306  EB 1E 90                         jmp     no_sinc 
 0309                           xj4: 
 0309  BB 0080 R                        mov     bx,offset dg:buf1 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-23
Text Compare Routine                                        

 030C  E8 04FE R                        call    adv_b                   ;advanc
				e current line in buf2 
 030F  73 03                            jnc     xj6 
 0311  EB 32 90                         jmp     go_quit                 ;file2 
				ended too, terminate prog. 
 0314                           xj6: 
                                 
                                ;----- File 2 ended but NOT file 1 
 0314  BB 0080 R                        mov     bx,offset dg:buf1 
 0317  E8 0648 R                        call    print_head 
 031A  E8 0666 R                        call    print_all               ;print 
				the rest of file1 
 031D  BB 0096 R                        mov     bx,offset dg:buf2 
 0320  E8 0648 R                        call    print_head 
 0323  EB 20 90                         jmp     go_quit 
                                 
                                 
                                 
 0326                           no_sinc: 
 0326  BB 0080 R                        mov     bx,offset dg:buf1 
 0329  E8 0648 R                        call    print_head 
 032C  E8 0666 R                        call    print_all 
 032F  BB 0096 R                        mov     bx,offset dg:buf2 
 0332  E8 0648 R                        call    print_head 
 0335  E8 0666 R                        call    print_all 
 0338  EB 0B 90                         jmp     go_quit 
                                 
                                 
                                 
 033B                           dif_files: 
 033B  BA 0000 E                        mov     dx,offset dg:dif_err 
 033E  8A 0E 0000 E                     mov     cl,dif_err_len 
 0342  E9 0124 R                        jmp     an_err 
                                 
 0345                           go_quit: 
 0345  B0 00                            mov     al,0 
 0347  B4 4C                            mov     ah,exit 
 0349  CD 21                            int     21h 
                                 
                                 
                                        subttl  Subroutines: make caps 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-24
Subroutines: make caps                                      

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;       CAPIALIZES THE CHARACTER IN AL         
				                         ; 
                                ;                                              
				                         ; 
                                ;       entry:                                 
				                         ; 
                                ;               AL      has the character to Ca
				pitalize                 ; 
                                ;                                              
				                         ; 
                                ;       exit:                                  
				                         ; 
                                ;               AL      has the capitalized cha
				racter                   ; 
                                ;                                              
				                         ; 
                                ;       Called from MAIN and go_match          
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
 034B                           make_caps: 
 034B  3C 61                            cmp     al,'a' 
 034D  72 06                            jb      sa1 
 034F  3C 7A                            cmp     al,'z' 
 0351  7F 02                            jg      sa1 
 0353  24 DF                            and     al,0dfh 
 0355  C3                       sa1:    ret 
                                 
                                 
                                        subttl  Subroutines: kill_bl 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-25
Subroutines: kill_bl                                        

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;            Get rid of blanks in command line.
				                         ; 
                                ;                                              
				                         ; 
                                ; entry:                                       
				                         ; 
                                ;       SI      points to the first character o
				n the line to scan.      ; 
                                ;                                              
				                         ; 
                                ; exit:                                        
				                         ; 
                                ;       SI      points to the next char after t
				he first non-blank       ; 
                                ;                 char found.                  
				                         ; 
                                ;       Carry Set  if a CR found               
				                         ; 
                                ;                                              
				                         ; 
                                ; modifies:                                    
				                         ; 
                                ;       SI and AX                              
				                         ; 
                                ;                                              
				                         ; 
                                ;       Called from MAIN                       
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
 0356                           kill_bl: 
 0356  FC                               cld                             ;increm
				ent 
 0357  AC                       sb1:    lodsb                           ;get ri
				d of blanks 
 0358  3C 20                            cmp     al,' ' 
 035A  74 FB                            je      sb1 
 035C  3C 09                            cmp     al,9 
 035E  74 F7                            je      sb1 
 0360  3C 0D                            cmp     al,CR 
 0362  F8                               clc                             ;assume
				 not a CR 
 0363  75 01                            jne     sb2 
 0365  F9                               stc                             ;a CR f
				ound, set carry 
 0366  C3                       sb2:    ret 
                                 
                                 
                                        subttl  Subroutines: find_nonb 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-26
Subroutines: find_nonb                                      

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;       Find the first non-blank in a line     
				                         ; 
                                ;                                              
				                         ; 
                                ; entry:                                       
				                         ; 
                                ;       SI      points to the line buffer      
				                         ; 
                                ;                                              
				                         ; 
                                ; exit:                                        
				                         ; 
                                ;       DI      pointer to the first blank foun
				d (incl. CR)             ; 
                                ;       CX      character count of non-blanks  
				                         ; 
                                ;       Carry Set if a CR was found            
				                         ; 
                                ;                                              
				                         ; 
                                ; modifies:                                    
				                         ; 
                                ;       AX                                     
				                         ; 
                                ;                                              
				                         ; 
                                ;       Called from MAIN                       
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
 0367                           find_nonb: 
 0367  56                               push    si              ;save pointer 
 0368  33 C9                            xor     cx,cx           ;zero character
				 count 
 036A  FC                               cld 
 036B                           sc1: 
 036B  AC                               lodsb 
 036C  3C 20                            cmp     al,' ' 
 036E  74 0B                            je      sc2 
 0370  3C 09                            cmp     al,9 
 0372  74 07                            je      sc2 
 0374  3C 0D                            cmp     al,CR 
 0376  74 03                            je      sc2 
 0378  41                               inc     cx              ;inc character 
				count 
 0379  EB F0                            jmp     short sc1 
 037B                           sc2: 
 037B  4E                               dec     si 
 037C  8B FE                            mov     di,si 
 037E  5E                               pop     si 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-27
Subroutines: find_nonb                                      

 037F  3C 0D                            cmp     al,CR 
 0381  75 02                            jne     sc3 
 0383  F9                               stc 
 0384  C3                               ret 
 0385                           sc3: 
 0385  F8                               clc 
 0386  C3                               ret 
                                 
                                 
                                        subttl  Subroutines: prt_bdif 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-28
Subroutines: prt_bdif                                       

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;       Print a binary difference              
				                         ; 
                                ;                                              
				                         ; 
                                ; entry:                                       
				                         ; 
                                ;       AX,BX   file address of diference      
				                         ; 
                                ;       SI      pointer to one past byte in buf
				fer1                     ; 
                                ;       DI      pointer to one past byte in buf
				fer2                     ; 
                                ;                                              
				                         ; 
                                ; modifies:                                    
				                         ; 
                                ;       AX, DX and CX                          
				                         ; 
                                ;                                              
				                         ; 
                                ;       called from bin_compare                
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
 0387                           prt_bdif: 
 0387  80 3E 0027 R FF                  cmp     [bhead_flg],true        ;have w
				e peinted head yet? 
 038C  74 13                            je      bhead_ok 
 038E  C6 06 0027 R FF                  mov     [bhead_flg],true        ;no, se
				t flag 
 0393  50                               push    ax                      ;print 
				heading 
 0394  BA 0000 E                        mov     dx,offset dg:bhead 
 0397  8A 0E 0000 E                     mov     cl,bhead_len 
 039B  32 ED                            xor     ch,ch 
 039D  E8 0696 R                        call    prout 
 03A0  58                               pop     ax 
                                 
 03A1                           bhead_ok: 
 03A1  8B D7                            mov     dx,di                   ;conver
				 file address 
 03A3  BF 0028 R                        mov     di,offset dg:bp_buf1 
 03A6  50                               push    ax 
 03A7  8A C4                            mov     al,ah 
 03A9  E8 03DC R                        call    bin2hex 
 03AC  58                               pop     ax 
 03AD  E8 03DC R                        call    bin2hex 
 03B0  8A C7                            mov     al,bh 
 03B2  E8 03DC R                        call    bin2hex 
 03B5  8A C3                            mov     al,bl 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-29
Subroutines: prt_bdif                                       

 03B7  E8 03DC R                        call    bin2hex 
                                 
 03BA  BF 0033 R                        mov     di,offset dg:bp_buf2    ;conver
				t byte from file 1 
 03BD  8A 44 FF                         mov     al, byte ptr[si-1] 
 03C0  E8 03DC R                        call    bin2hex 
                                 
 03C3  BF 0038 R                        mov     di,offset dg:bp_buf3    ;conver
				t byte from file 2 
 03C6  56                               push    si 
 03C7  8B F2                            mov     si,dx 
 03C9  8A 44 FF                         mov     al, byte ptr[si-1] 
 03CC  5E                               pop     si 
 03CD  E8 03DC R                        call    bin2hex 
                                 
 03D0  8B FA                            mov     di,dx                   ;print 
				result 
 03D2  BA 0028 R                        mov     dx,offset dg:bp_buf 
 03D5  B9 0014                          mov     cx,bp_buf_len 
 03D8  E8 0696 R                        call    prout 
 03DB  C3                               ret 
                                 
                                 
                                        subttl  Subroutines: bin2hex 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-30
Subroutines: bin2hex                                        

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;               Binary to ASCII hex conversion 
				                         ; 
                                ;                                              
				                         ; 
                                ; entry:                                       
				                         ; 
                                ;       AL      byte to convert                
				                         ; 
                                ;       DI      pointer to were the two result 
				ASCII bytes should go    ; 
                                ;                                              
				                         ; 
                                ; exit:                                        
				                         ; 
                                ;       DI      points to one past were the las
				t result byte whent      ; 
                                ;                                              
				                         ; 
                                ; modifies:                                    
				                         ; 
                                ;       AH and CL                              
				                         ; 
                                ;                                              
				                         ; 
                                ;       Called from prt_bdif                   
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
 03DC                           bin2hex: 
 03DC  B1 04                            mov     cl,4 
 03DE  D3 C8                            ror     ax,cl           ;get the high n
				ibble 
 03E0  24 0F                            and     al,0fh          ;mask of high n
				ible 
 03E2  E8 03E9 R                        call    pt_hex 
 03E5  D3 C0                            rol     ax,cl           ;get the low ni
				bble 
 03E7  24 0F                            and     al,0fh          ;mask.... 
                                 
 03E9                           pt_hex: 
 03E9  3C 0A                            cmp     al,0ah          ;is it past an 
				A ? 
 03EB  73 04                            jae     pasta 
 03ED  04 30                            add     al,30h 
 03EF  EB 02                            jmp     short put_hex 
 03F1                           pasta: 
 03F1  04 37                            add     al,37h 
 03F3                           put_hex: 
 03F3  AA                               stosb                   ;place in buffe
				r 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-31
Subroutines: bin2hex                                        

 03F4  C3                               ret 
                                 
                                 
                                        subttl  Subroutines: go_match 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-32
Subroutines: go_match                                       

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;               Match current lines            
				                         ; 
                                ;                                              
				                         ; 
                                ; exit:                                        
				                         ; 
                                ;       Carry set if the match reset otherwise 
				                         ; 
                                ;       SI      Current line of buff1          
				                         ; 
                                ;       DI      Current line of buff2          
				                         ; 
                                ;                                              
				                         ; 
                                ;                                              
				                         ; 
                                ; modifies:                                    
				                         ; 
                                ;       AX,BX,CX,DX and BP                     
				                         ; 
                                ;                                              
				                         ; 
                                ;       Called from txt_compare                
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
 03F5                           go_match: 
 03F5  BB 0080 R                        mov     bx,offset dg:buf1 
 03F8  8B 77 06                         mov     si,word ptr[bx].curr 
 03FB  56                               push    si 
 03FC  8B EE                            mov     bp,si                   ;save l
				ine pointer 
 03FE  E8 04F2 R                        call    find_eol 
 0401  8B D1                            mov     dx,cx                   ;save l
				ength of line 
 0403  BB 0096 R                        mov     bx,offset dg:buf2 
 0406  8B 77 06                         mov     si,word ptr[bx].curr 
 0409  56                               push    si 
 040A  8B FE                            mov     di,si 
 040C  E8 04F2 R                        call    find_eol 
 040F  3B CA                            cmp     cx,dx                   ;compar
				e lengths 
 0411  75 0B                            jne     sd1                     ;they d
				o not match 
 0413  8B F5                            mov     si,bp                   ;restor
				e line pointer 
 0415  E3 18                            jcxz    sd4                     ;both l
				ength = 0, they match 
 0417  51                               push    cx                      ;save t
				he length 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-33
Subroutines: go_match                                       

 0418  FC                               cld 
 0419  F3/ A6                           repz    cmpsb                   ;compar
				e strings 
 041B  59                               pop     cx                      ;restor
				e the length 
 041C  74 11                            jz      sd4                     ;they m
				atch 
 041E                           sd1: 
 041E  80 3E 0019 R FF                  cmp     [flg_w],true            ;do we 
				ignore multiple whites? 
 0423  74 28                            je      ib_compare              ;yes, g
				o compare 
 0425  80 3E 0017 R FF                  cmp     [flg_c],true            ;do we 
				ignore case differences? 
 042A  74 07                            je      ic_compare              ;yes, g
				o compare 
 042C                           sd3: 
 042C  F8                               clc                             ;they d
				on't match 
 042D  EB 01                            jmp     short sd5 
 042F                           sd4: 
 042F  F9                               stc 
 0430                           sd5: 
 0430  5F                               pop     di                      ;curr2 
 0431  5E                               pop     si                      ;curr1 
 0432  C3                               ret 
                                 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-34
Subroutines: go_match                                       

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;       Compare ignoring case differences. 
                                 
 0433                           ic_compare: 
 0433  5F                               pop     di                      ;get po
				inter to lines 
 0434  5E                               pop     si 
 0435  56                               push    si                      ;re-sav
				e pointers 
 0436  57                               push    di 
 0437                           sd8: 
 0437  8A 04                            mov     al,byte ptr [si]        ;get ne
				xt char. of first line 
 0439  E8 034B R                        call    make_caps 
 043C  8A D8                            mov     bl,al                   ;save c
				apitalized char 
 043E  8A 05                            mov     al,byte ptr [di]        ;get ne
				xt chra. of second line 
 0440  E8 034B R                        call    make_caps 
 0443  3A C3                            cmp     al,bl 
 0445  75 E5                            jne     sd3                     ;they d
				o not match.... 
 0447  46                               inc     si                      ;advanc
				e pointers 
 0448  47                               inc     di 
 0449  E2 EC                            loop    sd8                     ;loop f
				or the line lengths 
 044B  EB E2                            jmp     short sd4               ;they m
				atch 
                                 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-35
Subroutines: go_match                                       

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;       Compare compressing whites and ignoring
				 case differences if 
                                ; desired too. 
                                 
 044D                           ib_compare: 
 044D  C6 06 001A R FF                  mov     [ib_first1],true        ;we sta
				rt by the first char in the 
 0452  C6 06 001B R FF                  mov     [ib_first2],true        ; in th
				e lines. 
 0457  5F                               pop     di                      ;get po
				inter to lines 
 0458  5E                               pop     si 
 0459  56                               push    si                      ;re-sav
				e pointers 
 045A  57                               push    di 
 045B                           sd9: 
 045B  8A 04                            mov     al,byte ptr [si]        ;get ne
				xt char. of first line 
 045D  E8 04E6 R                        call    isa_white               ;is it 
				a white? 
 0460  73 1E                            jnc     sd12                    ;no, co
				mpare.... 
 0462                           sd10: 
 0462  8A 44 01                         mov     al,byte ptr [si+1]      ;peek t
				o next, 
 0465  E8 04E6 R                        call    isa_white               ; it is
				 a white too? 
 0468  73 03                            jnc     sd11 
 046A  46                               inc     si                      ; yes, 
 046B  EB F5                            jmp     short sd10              ; compr
				ess all whites to a blank 
 046D                           sd11: 
 046D  80 3E 001A R FF                  cmp     [ib_first1],true        ;is thi
				s the first char. of the line? 
 0472  75 03                            jne     sd111                   ;no, it
				 stays a white 
 0474  46                               inc     si                      ;ignore
				 the white 
 0475  EB 09                            jmp     short sd12 
 0477                           sd111: 
 0477  3C 0D                            cmp     al,CR                   ;is thi
				s the last char. of the line 
 0479  75 03                            jne     sd112                   ;no, it
				 stays a white 
 047B  46                               inc     si                      ;yes, i
				gnore the whites 
 047C  EB 02                            jmp     short sd12 
 047E                           sd112: 
 047E  B0 20                            mov     al,' '                  ;no mor
				e whites found 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-36
Subroutines: go_match                                       

                                 
 0480                           sd12: 
 0480  80 3E 001A R FF                  cmp     [ib_first1],true        ;is thi
				s the first char. of the line? 
 0485  75 05                            jne     sd121                   ;no, co
				ntinue 
 0487  C6 06 001A R 00                  mov     [ib_first1],false       ;yes, r
				eset the flag 
 048C                           sd121: 
 048C  80 3E 0017 R FF                  cmp     [flg_c],true            ;do we 
				ignore case? 
 0491  75 03                            jne     sd122                   ;no,...
				. 
 0493  E8 034B R                        call    make_caps 
 0496                           sd122: 
 0496  8A D8                            mov     bl,al                   ;save c
				har 
 0498  8A 05                            mov     al,byte ptr [di]        ;get ne
				xt chra. of second line 
 049A  E8 04E6 R                        call    isa_white 
 049D  73 1E                            jnc     sd15 
 049F                           sd13: 
 049F  8A 45 01                         mov     al,byte ptr [di+1]      ;peek t
				o next as before 
 04A2  E8 04E6 R                        call    isa_white 
 04A5  73 03                            jnc     sd14 
 04A7  47                               inc     di 
 04A8  EB F5                            jmp     short sd13 
 04AA                           sd14: 
 04AA  80 3E 001B R FF                  cmp     [ib_first2],true        ;is thi
				s the first char. of the line? 
 04AF  75 03                            jne     sd141                   ;no, it
				 stays a white 
 04B1  47                               inc     di                      ;ignore
				 the white 
 04B2  EB 09                            jmp     short sd15 
 04B4                           sd141: 
 04B4  3C 0D                            cmp     al,CR                   ;is thi
				s the last char. of the line 
 04B6  75 03                            jne     sd142                   ;no, it
				 stays a white 
 04B8  46                               inc     si                      ;yes, i
				gnore the whites 
 04B9  EB 02                            jmp     short sd15 
 04BB                           sd142: 
 04BB  B0 20                            mov     al,' ' 
                                 
 04BD                           sd15: 
 04BD  80 3E 001B R FF                  cmp     [ib_first2],true        ;is thi
				s the first char. of the line? 
 04C2  75 05                            jne     sd151                   ;no, co
				ntinue 
 04C4  C6 06 001B R 00                  mov     [ib_first2],false       ;yes, r
				eset the flag 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-37
Subroutines: go_match                                       

 04C9                           sd151: 
 04C9  80 3E 0017 R FF                  cmp     [flg_c],true            ;do we 
				ignore case? 
 04CE  75 03                            jne     sd152                   ;no,...
				. 
 04D0  E8 034B R                        call    make_caps 
 04D3                           sd152: 
 04D3  3A C3                            cmp     al,bl 
 04D5  74 03                            je      sd153 
 04D7  E9 042C R                        jmp     sd3                     ;they d
				o not match.... 
 04DA                           sd153: 
 04DA  3C 0D                            cmp     al,CR                   ;have w
				e reached the end? 
 04DC  75 03                            jne     sd154                   ;no, co
				ntinue.... 
 04DE  E9 042F R                        jmp     sd4                     ;yes, t
				hey match 
 04E1                           sd154: 
 04E1  46                               inc     si                      ;no, ad
				vance pointers 
 04E2  47                               inc     di 
 04E3  E9 045B R                        jmp     sd9                     ;loop f
				or the line lengths 
                                 
                                 
 04E6                           isa_white: 
 04E6  3C 20                            cmp     al,' '                  ;is it 
				a space? 
 04E8  74 06                            je      sdx1 
 04EA  3C 09                            cmp     al,09h                  ;is it 
				a tab? 
 04EC  74 02                            je      sdx1 
 04EE  F8                               clc                             ;if not
				 a white return with carry clear 
 04EF  C3                               ret 
 04F0                           sdx1: 
 04F0  F9                               stc                             ;is a w
				hite return with carry set 
 04F1  C3                               ret 
                                 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-38
Subroutines: go_match                                       

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
 04F2                           find_eol: 
 04F2  33 C9                            xor     cx,cx                   ;zero c
				ount 
 04F4  FC                               cld 
 04F5                           sd6: 
 04F5  AC                               lodsb 
 04F6  3C 0D                            cmp     al,CR 
 04F8  74 03                            je      sd7 
 04FA  41                               inc     cx 
 04FB  EB F8                            jmp     short sd6 
 04FD                           sd7: 
 04FD  C3                               ret 
                                 
                                 
                                        subttl  Subroutines: adv_b 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-39
Subroutines: adv_b                                          

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;               Get the next line in the buffer
				                         ; 
                                ;                                              
				                         ; 
                                ;       It will attempt to get the next current
				 line from the buffer    ; 
                                ; if it fails, it will force a refill, and if s
				ome data is read in      ; 
                                ; then it will return the next current line.   
				                         ; 
                                ;                                              
				                         ; 
                                ; entry:                                       
				                         ; 
                                ;       BX      pointer to buffer structure    
				                         ; 
                                ;                                              
				                         ; 
                                ; exit:                                        
				                         ; 
                                ;       SI      pointer to next line  (if any) 
				                         ; 
                                ;       Carry set if no more lines available. I
				f carry set then:        ; 
                                ;       AX      End Code: 0 = end of file reach
				ed                       ; 
                                ;                         1 = no room in buffer
				 for a line              ; 
                                ;                                              
				                         ; 
                                ; modifies:                                    
				                         ; 
                                ;       CX,DX and DI                           
				                         ; 
                                ;                                              
				                         ; 
                                ;       Called from txt_compare                
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
 04FE                           adv_b: 
 04FE  E8 050E R                        call    get_nextl 
 0501  72 01                            jc      se1 
 0503  C3                               ret 
 0504                           se1: 
 0504  E8 0526 R                        call    refill 
 0507  73 01                            jnc     se0 
 0509  C3                               ret 
 050A                           se0: 
 050A  E8 050E R                        call    get_nextl 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-40
Subroutines: adv_b                                          

 050D  C3                               ret 
                                 
                                 
                                        subttl  Subroutines: get_nextl 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-41
Subroutines: get_nextl                                      

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;               Returns the next line in a buff
				er                       ; 
                                ;           (next from current or next from poi
				nter)                    ; 
                                ;                                              
				                         ; 
                                ; entry:                                       
				                         ; 
                                ;       BX      pointer to buffer structure    
				                         ; 
                                ;      (SI      pointer to line, if calling get
				_next)                   ; 
                                ;                                              
				                         ; 
                                ; exit:                                        
				                         ; 
                                ;       SI      pointer to next line           
				                         ; 
                                ;       Carry set if no more lines available   
				                         ; 
                                ;                                              
				                         ; 
                                ; modifies:                                    
				                         ; 
                                ;       DI and CX                              
				                         ; 
                                ;                                              
				                         ; 
                                ;       Called from adv_b and print_diff (in th
				e case of get_next)      ; 
                                ;----------------------------------------------
				-------------------------; 
 050E                           get_nextl: 
 050E  8B 77 06                         mov     si,word ptr [bx].curr 
 0511                           get_next: 
 0511  8B 4F 0E                         mov     cx,word ptr [bx].dat_end 
 0514  2B CE                            sub     cx,si 
 0516  8B FE                            mov     di,si 
 0518  B0 0A                            mov     al,LF 
 051A  FC                               cld 
 051B  F2/ AE                           repnz   scasb 
 051D  8B F7                            mov     si,di                   ;pointe
				r to next line 
 051F  75 02                            jnz     se2                     ;not fo
				und 
 0521  F8                               clc 
 0522  C3                               ret 
 0523                           se2: 
 0523  46                               inc     si                      ;point 
				past the LF 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-42
Subroutines: get_nextl                                      

 0524  F9                               stc 
 0525  C3                               ret 
                                 
                                 
                                        subttl  Subroutines: refill 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-43
Subroutines: refill                                         

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;               Refill a buffer                
				                         ; 
                                ;                                              
				                         ; 
                                ;       It will refill a buffer with data from 
				the corresponding        ; 
                                ; file. It will first recompact the buffer to m
				ake room for the new     ; 
                                ; data. If in SINC then it will move the curren
				t line to the top of     ; 
                                ; the buffer, and read the data from the end of
				 this line till the      ; 
                                ; end of the buffer.                           
				                         ; 
                                ;       If NOT in SINC then it will recompact t
				he buffer by moving      ; 
                                ; all lines between the first to go out of SINC
				 till the current line   ; 
                                ; to the top of the buffer, and then reading da
				ta after the current     ; 
                                ; line.                                        
				                         ; 
                                ;       When recompacting the buffer it relocat
				es all pointers to       ; 
                                ; point to the new locations of the respective 
				lines.                   ; 
                                ;       Some of the pointers may be pointing to
				 meaningless locations   ; 
                                ; before the relocation, and consecuently they 
				will be pointing to      ; 
                                ; even less meaningfull locations after relocat
				ion.                     ; 
                                ;       After reading the data it normalizes th
				e buffer to make sure    ; 
                                ; that no partially full lines are present at t
				he end of the buffer. If ; 
                                ; after recompacting and reading some character
				  it is found that the   ; 
                                ; characters read do not constitute a full line
				, then it will return    ; 
                                ; with an error code. It will also return with 
				an error code if it      ; 
                                ; attempts to read past the end of file.       
				                         ; 
                                ;                                              
				                         ; 
                                ; entry:                                       
				                         ; 
                                ;       BX      pointer to buffer structure    
				                         ; 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-44
Subroutines: refill                                         

                                ;                                              
				                         ; 
                                ; exit:                                        
				                         ; 
                                ;       Carry set if no chars read into the buf
				fer. If carry set then:  ; 
                                ;       AX      End Code: 0 = end of file reach
				ed                       ; 
                                ;                         1 = no room in the bu
				ffer for a line          ; 
                                ;                                              
				                         ; 
                                ; modifies:                                    
				                         ; 
                                ;       CX,DX,SI and DI                        
				                         ; 
                                ;                                              
				                         ; 
                                ;       Called from adv_b                      
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
 0526                           refill: 
                                 
                                ;----- Calculate ammount to move & pointer relo
				cation factor. 
                                 
 0526  80 3E 0021 R FF                  cmp     [sinc],true 
 052B  75 05                            jne     sf1 
 052D  8B 77 06                         mov     si,word ptr [bx].curr 
 0530  EB 03                            jmp     short sf2 
 0532                           sf1: 
 0532  8B 77 0C                         mov     si,word ptr [bx].fst_nosinc 
 0535                           sf2: 
 0535  8B 7F 12                         mov     di,word ptr [bx].buf 
 0538  8B 4F 0E                         mov     cx,word ptr [bx].dat_end 
                                 
 053B  8B D6                            mov     dx,si                   ;calcul
				ate pointer relocation factor 
 053D  2B D7                            sub     dx,di                   ;DX = f
				actor 
 053F  74 15                            jz      sf3                     ;no roo
				m in buffer 
 0541  2B CE                            sub     cx,si                   ;calcul
				ate ammount of data to move 
 0543  41                               inc     cx                      ;CX = a
				mmount 
                                 
                                ;----- Move data 
                                 
 0544  FC                               cld                             ;auto d
				ecrement 
 0545  F3/ A4                           rep     movsb 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-45
Subroutines: refill                                         

                                ;----- Relocate pointers 
                                 
 0547  29 57 06                         sub     word ptr [bx].curr,dx 
 054A  29 57 08                         sub     word ptr [bx].lst_curr,dx 
 054D  29 57 0A                         sub     word ptr [bx].fst_sinc,dx 
 0550  29 57 0C                         sub     word ptr [bx].fst_nosinc,dx 
 0553  29 57 0E                         sub     word ptr [bx].dat_end,dx 
                                 
 0556                           sf3: 
 0556  8B 57 0E                         mov     dx,word ptr [bx].dat_end 
 0559  42                               inc     dx                             
				 ;empty part starts here 
                                 
                                ;----- fill the buffer 
                                 
 055A  E8 055E R                        call    fill_buffer 
 055D  C3                               ret 
                                 
                                 
                                        subttl  Subroutines: fill_buffer 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-46
Subroutines: fill_buffer                                    

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;               Fill the data buffers          
				                         ; 
                                ;                                              
				                         ; 
                                ;       It will fill the buffer from the pointe
				r to the end of buffer   ; 
                                ; and normalize the buffer.                    
				                         ; 
                                ;                                              
				                         ; 
                                ; entry:                                       
				                         ; 
                                ;       BX      pointer to buffer structure    
				                         ; 
                                ;       DX      pointer to buffer (or part of b
				uffer)                   ; 
                                ;                                              
				                         ; 
                                ; exit:                                        
				                         ; 
                                ;       Carry set if no chars read into the buf
				fer. If carry set then:  ; 
                                ;       AX      End Code: 0 = end of file reach
				ed                       ; 
                                ;                         1 = no room in the bu
				ffer for a line          ; 
                                ;                                              
				                         ; 
                                ; modifies:                                    
				                         ; 
                                ;       AX,CX,DX and DI                        
				                         ; 
                                ;                                              
				                         ; 
                                ;       Called from txt_compare and refill     
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
 055E                           fill_buffer: 
 055E  53                               push    bx 
 055F  E8 05B5 R                        call    read_dat                ;get da
				ta 
 0562  72 2A                            jc      bad_read 
 0564  0B C0                            or      ax,ax                   ;zero c
				hars read? 
 0566  74 48                            jz      rd_past_eof 
 0568  E8 05C2 R                        call    nor_buf 
 056B  8B F9                            mov     di,cx                   ;save n
				ormalized char. count 
 056D  8B EA                            mov     bp,dx                   ;save d
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-47
Subroutines: fill_buffer                                    

				ata end for now 
                                 
                                ;----- seek for old partial line 
                                 
 056F  0B C0                            or      ax,ax                   ;is the
				 seek value = 0 ? 
 0571  74 0F                            jz      sg1                     ;yes, d
				o not seek 
 0573  8B D0                            mov     dx,ax 
 0575  F7 DA                            neg     dx 
 0577  B9 FFFF                          mov     cx,-1 
 057A  B0 01                            mov     al,1                    ;seek f
				rom current position 
 057C  B4 42                            mov     ah,lseek 
 057E  CD 21                            int     21h 
 0580  72 0C                            jc      bad_read                ;error 
				mesage (BX already in stack) 
                                 
 0582                           sg1: 
 0582  8B CF                            mov     cx,di                   ;restor
				e normalized char count. 
 0584  0B C9                            or      cx,cx                   ;char c
				ount = 0 due to normalization? 
 0586  74 23                            jz      no_room 
                                 
 0588  5B                               pop     bx 
 0589  89 6F 0E                         mov     word ptr [bx].dat_end,bp 
 058C  F8                               clc 
 058D  C3                               ret 
                                 
 058E                           bad_read: 
 058E  BA 0000 E                        mov     dx,offset dg:read_err_pre 
 0591  8A 0E 0000 E                     mov     cl,read_err_pre_len 
 0595  E8 06A0 R                        call    prt_err                 ;print 
				error message 
 0598  5B                               pop     bx 
 0599  8B 17                            mov     dx,word ptr[bx].fname 
 059B  8B 4F 02                         mov     cx,word ptr[bx].fname_len 
 059E  E8 06A0 R                        call    prt_err                 ;print 
				file name 
 05A1  BA 0000 E                        mov     dx,offset dg:read_err_post 
 05A4  8A 0E 0000 E                     mov     cl,read_err_post_len 
 05A8  E9 0124 R                        jmp     an_err 
                                 
 05AB                           no_room: 
 05AB  B8 0001                          mov     ax,1 
 05AE  EB 02                            jmp     short sg2 
                                 
 05B0                           rd_past_eof: 
 05B0  33 C0                            xor     ax,ax 
 05B2                           sg2: 
 05B2  5B                               pop     bx 
 05B3  F9                               stc 
 05B4  C3                               ret 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-48
Subroutines: fill_buffer                                    

                                 
                                 
                                        subttl  Subroutines: read_dat 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-49
Subroutines: read_dat                                       

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;                                              
				                         ; 
                                ; entry:                                       
				                         ; 
                                ;       DX      pointer to data area (buffer or
				 part of buffer)         ; 
                                ;                                              
				                         ; 
                                ; exit:                                        
				                         ; 
                                ;       AX      character count or error code (
				from DOS read)           ; 
                                ;       Carry set if error condition           
				                         ; 
                                ;                                              
				                         ; 
                                ; modifies:                                    
				                         ; 
                                ;       BX and CX                              
				                         ; 
                                ;                                              
				                         ; 
                                ;       Called from fill_buffer, print_all and 
				bin_compare              ; 
                                ;----------------------------------------------
				-------------------------; 
 05B5                           read_dat: 
 05B5  8B 4F 10                         mov     cx,word ptr [bx].buf_end 
 05B8  8B 5F 04                         mov     bx,word ptr [bx].handle 
 05BB  2B CA                            sub     cx,dx                   ;ammoun
				t to read to buff1 
 05BD  B4 3F                            mov     ah,read 
 05BF  CD 21                            int     21h 
 05C1  C3                               ret 
                                 
                                 
                                        subttl  Subroutines: nor_buf 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-50
Subroutines: nor_buf                                        

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;       Normalize buffers so they do not have p
				artially full            ; 
                                ; lines at the end. If character count is less 
				than the buffer size     ; 
                                ; then it checks that the last line is terminat
				ed by a CR,LF pair.      ; 
                                ; If it is not it inserts a CR,LF at the end. I
				t returns a seek value   ; 
                                ; for the buffer corresponding to the number of
				 characters in the       ; 
                                ; incomplete line at the end of the buffer (if 
				any). This can be used   ; 
                                ; to start reading from the beggining of the in
				complete line on next    ; 
                                ; time the buffer is loaded.                   
				                         ; 
                                ;                                              
				                         ; 
                                ; ENTRY:                                       
				                         ; 
                                ;       DX      buffer pointer                 
				                         ; 
                                ;       AX      character count read           
				                         ; 
                                ;       CX      character count requested      
				                         ; 
                                ;                                              
				                         ; 
                                ; EXIT:                                        
				                         ; 
                                ;       DX      pointer to last char in buffer 
				(normalized)             ; 
                                ;       CX      character count (normalized)   
				                         ; 
                                ;       AX      seek value                     
				                         ; 
                                ;                                              
				                         ; 
                                ; MODIFIES:                                    
				                         ; 
                                ;       DI                                     
				                         ; 
                                ;                                              
				                         ; 
                                ;       Called from fill_buffer                
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
 05C2                           nor_buf: 
 05C2  8B FA                            mov     di,dx 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-51
Subroutines: nor_buf                                        

 05C4  03 F8                            add     di,ax 
 05C6  4F                               dec     di                      ;points
				 to last char in buffer 
 05C7  3B C1                            cmp     ax,cx                   ;were a
				ll chars. requested read? 
 05C9  74 2F                            je      sm7                     ;yes, b
				uffer full 
 05CB  80 3D 1A                         cmp     byte ptr[di],1ah        ;termin
				ated with a ^Z ? 
 05CE  75 02                            jne     sm1 
 05D0  4F                               dec     di                      ;point 
				to previous character 
 05D1  48                               dec     ax                      ;decrem
				ent character count 
 05D2  80 3D 0A                 sm1:    cmp     byte ptr[di],lf         ;is las
				t char a LF? 
 05D5  74 1A                            je      sm6 
 05D7  80 3D 0D                         cmp     byte ptr[di],cr         ;is it 
				a CR then? 
 05DA  74 12                            je      sm5 
 05DC  05 0002                          add     ax,2                    ;two mo
				re chars in buffer 
 05DF  47                               inc     di 
 05E0  C6 05 0D                 sm2:    mov     byte ptr[di],cr 
 05E3  47                       sm3:    inc     di 
 05E4  C6 05 0A                         mov     byte ptr[di],lf 
 05E7  8B C8                    sm4:    mov     cx,ax                   ;new ch
				aracter count 
 05E9  8B D7                            mov     dx,di                   ;pointe
				r to last char 
 05EB  33 C0                            xor     ax,ax                   ;seek =
				 0 
 05ED  C3                               ret 
                                 
 05EE                           sm5: 
 05EE  40                               inc     ax                      ;one mo
				re char in buffer 
 05EF  EB F2                            jmp     short   sm3 
                                 
 05F1                           sm6: 
 05F1  80 7D FF 0D                      cmp     byte ptr[di-1],cr       ;is pre
				vious char a CR? 
 05F5  74 F0                            je      sm4 
 05F7  40                               inc     ax                      ;no, on
				e more char in buffer 
 05F8  EB E6                            jmp     short sm2 
                                 
 05FA                           sm7: 
 05FA  50                               push    ax                      ;save c
				har count 
 05FB  8B C8                            mov     cx,ax 
 05FD  B0 0A                            mov     al,LF 
 05FF  FD                               std 
 0600  F2/ AE                           repnz   scasb                   ;search
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-52
Subroutines: nor_buf                                        

				 for last LF 
 0602  58                               pop     ax                      ;restor
				e char count 
 0603  75 07                            jnz     bad_line                ;none f
				ound, line too big 
 0605  47                               inc     di                      ;point 
				to last LF 
 0606  8B D7                            mov     dx,di 
 0608  41                               inc     cx                      ;ammoun
				t of chars in buffer 
 0609  2B C1                            sub     ax,cx                   ;seek v
				alue 
 060B  C3                               ret 
                                 
 060C                           bad_line:                               ;full l
				ine not possible, return 
 060C  8B D7                            mov     dx,di                   ; with 
				AX=count, CX=0 and DX= 
 060E  C3                               ret                             ; old l
				ast char in buffer pointer. 
                                 
                                 
                                 
                                        subttl  Subroutines: print_diff 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-53
Subroutines: print_diff                                     

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;               print the difference between bu
				ffers                    ; 
                                ;                                              
				                         ; 
                                ;       It will print the mismatched lines. Fir
				st it prints a heading   ; 
                                ; with the first file name, then the lines that
				 differ from file 1,     ; 
                                ; then a heading with the second file name, and
				 then the lines that     ; 
                                ; differ in file 2 .                           
				                         ; 
                                ;       The lines that differ are considered to
				 start from fst_nosinc   ; 
                                ; till fst_sinc.                               
				                         ; 
                                ;                                              
				                         ; 
                                ;       Called from txt_compare                
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
 060F                           print_diff: 
 060F  BB 0080 R                        mov     bx,offset dg:buf1 
 0612  E8 0648 R                        call    print_head              ;print 
				heading for file 1 
 0615  8B 57 0C                         mov     dx,word ptr [bx].fst_nosinc 
 0618  8B 77 0A                         mov     si,word ptr [bx].fst_sinc 
 061B  E8 0511 R                        call    get_next                ;get po
				inter to next line 
 061E  8B CE                            mov     cx,si 
 0620  2B CA                            sub     cx,dx                   ;get ch
				aracter count 
 0622  E8 0696 R                        call    prout 
 0625  BB 0096 R                        mov     bx,offset dg:buf2 
 0628  E8 0648 R                        call    print_head              ;print 
				heading for file 1 
 062B  8B 57 0C                         mov     dx,word ptr [bx].fst_nosinc 
 062E  8B 77 0A                         mov     si,word ptr [bx].fst_sinc 
 0631  E8 0511 R                        call    get_next                ;get po
				inter to next line 
 0634  8B CE                            mov     cx,si 
 0636  2B CA                            sub     cx,dx                   ;get ch
				aracter count 
 0638  E8 0696 R                        call    prout 
 063B  BA 0000 E                        mov     dx,offset dg:diff_sep 
 063E  8A 0E 0000 E                     mov     cl,diff_sep_len 
 0642  32 ED                            xor     ch,ch 
 0644  E8 0696 R                        call    prout                   ;print 
				difference separator 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-54
Subroutines: print_diff                                     

 0647  C3                               ret 
                                 
                                 
                                        subttl  Subroutines: print_head 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-55
Subroutines: print_head                                     

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;               Print heading for difference   
				                         ; 
                                ;                                              
				                         ; 
                                ; entry:                                       
				                         ; 
                                ;       BX      pointer to buffer structure    
				                         ; 
                                ;                                              
				                         ; 
                                ; modifies:                                    
				                         ; 
                                ;       AX,CX and DX                           
				                         ; 
                                ;                                              
				                         ; 
                                ;       Called from txt_compare and print_diff 
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
 0648                           print_head: 
 0648  BA 0000 E                        mov     dx,offset dg:fname_sep 
 064B  8A 0E 0000 E                     mov     cl,fname_sep_len 
 064F  32 ED                            xor     ch,ch 
 0651  E8 0696 R                        call    prout 
 0654  8B 17                            mov     dx,word ptr [bx].fname 
 0656  8B 4F 02                         mov     cx,word ptr [bx].fname_len 
 0659  E8 0696 R                        call    prout 
 065C  BA 0000 E                        mov     dx,offset dg:CRLF 
 065F  B9 0002                          mov     cx,2 
 0662  E8 0696 R                        call    prout 
 0665  C3                               ret 
                                 
                                 
                                        subttl  Subroutines: print_all 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-56
Subroutines: print_all                                      

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;               Print the rest of a file       
				                         ; 
                                ;                                              
				                         ; 
                                ;       If in SINC it will print the file from 
				the fst_nosinc line      ; 
                                ; till the end of the file. If NOT in SINC then
				 it will print from      ; 
                                ; the current line of the buffer to the end of 
				the file.                ; 
                                ;                                              
				                         ; 
                                ; entry:                                       
				                         ; 
                                ;       BX      pointer to buffer structure    
				                         ; 
                                ;                                              
				                         ; 
                                ; modifies:                                    
				                         ; 
                                ;       AX,CX and DX                           
				                         ; 
                                ;                                              
				                         ; 
                                ;       Called from txt_compare                
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
 0666                           print_all: 
 0666  80 3E 0021 R FF                  cmp     [sinc],true             ;are we
				 in SINC? 
 066B  75 05                            jne     so1 
 066D  8B 57 06                         mov     dx,word ptr [bx].curr 
 0670  EB 03                            jmp     short so2 
 0672                           so1: 
 0672  8B 57 0C                         mov     dx,word ptr [bx].fst_nosinc 
 0675                           so2: 
 0675  8B 4F 0E                         mov     cx,word ptr [bx].dat_end 
 0678  41                               inc     cx 
                                 
 0679                           prt_again: 
 0679  2B CA                            sub     cx,dx                   ;ammoun
				t of data to write 
 067B  E8 0696 R                        call    prout                   ;write 
				it out 
                                 
                                ;----- Read more data to the buffer 
 067E  53                               push    bx                      ;save p
				ointer to buffer struct 
 067F  8B 57 12                         mov     dx,word ptr [bx].buf 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-57
Subroutines: print_all                                      

 0682  E8 05B5 R                        call    read_dat 
 0685  73 03                            jnc     so3 
 0687  E9 058E R                        jmp     bad_read                ;print 
				error (BX in stack) 
 068A                           so3: 
 068A  0B C0                            or      ax,ax                   ;zero c
				hars read? 
 068C  75 02                            jne     so4 
 068E  5B                               pop     bx                      ;all do
				ne writting 
 068F  C3                               ret 
 0690                           so4: 
 0690  5B                               pop     bx 
 0691  8B 4F 10                         mov     cx,word ptr [bx].buf_end 
 0694  EB E3                            jmp     short prt_again         ;print 
				next buffer full 
                                 
                                 
                                        subttl  Subroutines: prout and prt_err 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-58
Subroutines: prout and prt_err                              

                                        page 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;                                              
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
 0696                           prout: 
 0696  53                               push    bx 
 0697  BB 0001                          mov     bx,stdout 
 069A  B4 40                            mov     ah,write 
 069C  CD 21                            int     21h 
 069E  5B                               pop     bx 
 069F  C3                               ret 
                                 
                                 
                                ;----------------------------------------------
				-------------------------; 
                                ;                                              
				                         ; 
                                ;----------------------------------------------
				-------------------------; 
 06A0                           prt_err: 
 06A0  53                               push    bx 
 06A1  32 ED                            xor     ch,ch 
 06A3  E3 07                            jcxz    retpbx 
 06A5  BB 0002                          mov     bx,stderr 
 06A8  B4 40                            mov     ah,write 
 06AA  CD 21                            int     21h 
 06AC                           retpbx: 
 06AC  5B                               pop     bx 
 06AD  C3                               ret 
                                 
 06AE                           code    ends 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Page     1-59
Subroutines: prout and prt_err                              

                                        page 
                                 
                                 
 0000                           stack   segment stack 
                                 
 0000  0080[                            dw      128 dup(?) 
            ????                
                         ]      
                                
                                 
 0100                           stack   ends 
                                 
                                 
                                        end     start 

Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
M_BNAME  . . . . . . . . . . . .  	  20
M_DEBUG  . . . . . . . . . . . .  	  15
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Symbols-2
                                                             

  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Symbols-3
                                                             

  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Symbols-4
                                                             

  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016

Segments and Groups:

                N a m e         	Size	Align	Combine Class

DG . . . . . . . . . . . . . . .  	GROUP
  CODE . . . . . . . . . . . . .  	06AE	WORD	NONE	
  CONST  . . . . . . . . . . . .  	003C	WORD	PUBLIC	
  DATA . . . . . . . . . . . . .  	20B0	WORD	NONE	
STACK  . . . . . . . . . . . . .  	0100	PARA	STACK	

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Symbols-5
                                                             

ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ADV_B  . . . . . . . . . . . . .  	L NEAR	04FE	CODE
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Number	0000	
ANOTHER_LINE . . . . . . . . . .  	L NEAR	01F3	CODE
AN_ERR . . . . . . . . . . . . .  	L NEAR	0124	CODE
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ARGS_ERR . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
ARGS_ERR_LEN . . . . . . . . . .  	V BYTE 	0000	CONST	External
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	

B1 . . . . . . . . . . . . . . .  	L BYTE 	00AC	DATA	Length = 1000
B2 . . . . . . . . . . . . . . .  	L BYTE 	10AE	DATA	Length = 1000
BADVEX . . . . . . . . . . . . .  	F PROC	001E	CODE	Length = 0001
BAD_ARGS . . . . . . . . . . . .  	L NEAR	00B0	CODE
BAD_DAT  . . . . . . . . . . . .  	L NEAR	01C7	CODE
BAD_DATJ . . . . . . . . . . . .  	L NEAR	0153	CODE
BAD_FILE . . . . . . . . . . . .  	L NEAR	00FE	CODE
BAD_LINE . . . . . . . . . . . .  	L NEAR	060C	CODE
BAD_OPT  . . . . . . . . . . . .  	L NEAR	0088	CODE
BAD_READ . . . . . . . . . . . .  	L NEAR	058E	CODE
BASE . . . . . . . . . . . . . .  	L DWORD	0023	CONST
BEND . . . . . . . . . . . . . .  	L BYTE 	0022	CONST
BEND_MES . . . . . . . . . . . .  	L NEAR	01BF	CODE
BF1NE  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BF1NE_LEN  . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BF1_ENDED  . . . . . . . . . . .  	L NEAR	01B8	CODE
BF2NE  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BF2NE_LEN  . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BHEAD  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BHEAD_FLG  . . . . . . . . . . .  	L BYTE 	0027	CONST
BHEAD_LEN  . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BHEAD_OK . . . . . . . . . . . .  	L NEAR	03A1	CODE
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Symbols-6
                                                             

BIN2HEX  . . . . . . . . . . . .  	L NEAR	03DC	CODE
BIN_COMPARE  . . . . . . . . . .  	L NEAR	0137	CODE
BNOT_YET . . . . . . . . . . . .  	L NEAR	019F	CODE
BP_BUF . . . . . . . . . . . . .  	NEAR 	0028	CONST
BP_BUF1  . . . . . . . . . . . .  	L BYTE 	0028	CONST	Length = 0008
BP_BUF2  . . . . . . . . . . . .  	L BYTE 	0033	CONST	Length = 0002
BP_BUF3  . . . . . . . . . . . .  	L BYTE 	0038	CONST	Length = 0002
BP_BUF_LEN . . . . . . . . . . .  	Number	0014	
BUF  . . . . . . . . . . . . . .  	Number	0012	
BUF1 . . . . . . . . . . . . . .  	L WORD 	0080	DATA	Length = 000B
BUF2 . . . . . . . . . . . . . .  	L WORD 	0096	DATA	Length = 000B
BUFINSIZ . . . . . . . . . . . .  	Number	0010	
BUF_END  . . . . . . . . . . . .  	Number	0010	
BUF_SIZE . . . . . . . . . . . .  	Number	1000	
BY_READ  . . . . . . . . . . . .  	Number	0006	
B_OPT  . . . . . . . . . . . . .  	L NEAR	0099	CODE

CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
COM_BUF  . . . . . . . . . . . .  	L BYTE 	0000	DATA	Length = 0080
CONT_OPT . . . . . . . . . . . .  	L NEAR	0056	CODE
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CR . . . . . . . . . . . . . . .  	Number	000D	
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CRLF . . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURR . . . . . . . . . . . . . .  	Number	0006	
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	
C_OPT  . . . . . . . . . . . . .  	L NEAR	009E	CODE

DAT_END  . . . . . . . . . . . .  	Number	000E	
DEALLOC  . . . . . . . . . . . .  	Number	0049	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Symbols-7
                                                             

DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DIFF_SEP . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DIFF_SEP_LEN . . . . . . . . . .  	V BYTE 	0000	CONST	External
DIF_ERR  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DIF_ERR_LEN  . . . . . . . . . .  	V BYTE 	0000	CONST	External
DIF_FILES  . . . . . . . . . . .  	L NEAR	033B	CODE
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISK_RESET . . . . . . . . . . .  	Number	000D	
DOSVER . . . . . . . . . . . . .  	Number	00D3	
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

END_B1 . . . . . . . . . . . . .  	L BYTE 	10AC	DATA	Length = 0002
END_B2 . . . . . . . . . . . . .  	L BYTE 	20AE	DATA	Length = 0002
END_CHECK  . . . . . . . . . . .  	L NEAR	01A1	CODE
ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Symbols-8
                                                             

ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FALSE  . . . . . . . . . . . . .  	Number	0000	
FATPRI . . . . . . . . . . . . .  	Number	001E	
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FCSTRT . . . . . . . . . . . . .  	L NEAR	000B	CODE
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_ERR . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
FILE_ERR_LEN . . . . . . . . . .  	V BYTE 	0000	CONST	External
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILL_BUFFER  . . . . . . . . . .  	L NEAR	055E	CODE
FILPERPROC . . . . . . . . . . .  	Number	0014	
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_EOL . . . . . . . . . . . .  	L NEAR	04F2	CODE
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FIND_NONB  . . . . . . . . . . .  	L NEAR	0367	CODE
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Symbols-9
                                                             

FLG_B  . . . . . . . . . . . . .  	L BYTE 	0016	CONST
FLG_C  . . . . . . . . . . . . .  	L BYTE 	0017	CONST
FLG_S  . . . . . . . . . . . . .  	L BYTE 	0018	CONST
FLG_W  . . . . . . . . . . . . .  	L BYTE 	0019	CONST
FNAME  . . . . . . . . . . . . .  	Number	0000	
FNAME_LEN  . . . . . . . . . . .  	Number	0002	
FNAME_SEP  . . . . . . . . . . .  	V BYTE 	0000	CONST	External
FNAME_SEP_LEN  . . . . . . . . .  	V BYTE 	0000	CONST	External
FOUND_ERR_POST . . . . . . . . .  	V BYTE 	0000	CONST	External
FOUND_ERR_POST_LEN . . . . . . .  	V BYTE 	0000	CONST	External
FOUND_ERR_PRE  . . . . . . . . .  	V BYTE 	0000	CONST	External
FOUND_ERR_PRE_LEN  . . . . . . .  	V BYTE 	0000	CONST	External
FREEPRI  . . . . . . . . . . . .  	Number	0000	
FST_NOSINC . . . . . . . . . . .  	Number	000C	
FST_SINC . . . . . . . . . . . .  	Number	000A	

GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_FILE . . . . . . . . . . . .  	L NEAR	00BA	CODE
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_NEXT . . . . . . . . . . . .  	L NEAR	0511	CODE
GET_NEXTL  . . . . . . . . . . .  	L NEAR	050E	CODE
GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GO_BCOMP . . . . . . . . . . . .  	L NEAR	0174	CODE
GO_COMPARE . . . . . . . . . . .  	L NEAR	012D	CODE
GO_MATCH . . . . . . . . . . . .  	L NEAR	03F5	CODE
GO_QUIT  . . . . . . . . . . . .  	L NEAR	0345	CODE

HANDLE . . . . . . . . . . . . .  	Number	0004	
HEADER . . . . . . . . . . . . .  	L BYTE 	0002	CODE

IB_COMPARE . . . . . . . . . . .  	L NEAR	044D	CODE
IB_FIRST1  . . . . . . . . . . .  	L BYTE 	001A	CONST
IB_FIRST2  . . . . . . . . . . .  	L BYTE 	001B	CONST
IC_COMPARE . . . . . . . . . . .  	L NEAR	0433	CODE
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Symbols-10
                                                             

INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_ERR  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
INT_ERR_LEN  . . . . . . . . . .  	V BYTE 	0000	CONST	External
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
ISA_WHITE  . . . . . . . . . . .  	L NEAR	04E6	CODE

KEEP_PROCESS . . . . . . . . . .  	Number	0031	
KILL_BL  . . . . . . . . . . . .  	L NEAR	0356	CODE

LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LF . . . . . . . . . . . . . . .  	Number	000A	
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
LST_CURR . . . . . . . . . . . .  	Number	0008	

MAKE . . . . . . . . . . . . . .  	L BYTE 	0000	CONST
MAKE_CAPS  . . . . . . . . . . .  	L NEAR	034B	CODE
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MODE . . . . . . . . . . . . . .  	L BYTE 	0020	CONST
MOREIN_B1  . . . . . . . . . . .  	L NEAR	016D	CODE
MOREIN_B2  . . . . . . . . . . .  	L NEAR	0166	CODE
MTCH_CNTR  . . . . . . . . . . .  	L WORD 	001E	CONST
M_NUM  . . . . . . . . . . . . .  	L WORD 	001C	CONST

NEXT_BCOMP . . . . . . . . . . .  	L NEAR	0187	CODE
NOR_BUF  . . . . . . . . . . . .  	L NEAR	05C2	CODE
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		
NO_MATCH . . . . . . . . . . . .  	L NEAR	0245	CODE
NO_MORE1 . . . . . . . . . . . .  	L NEAR	02C8	CODE
NO_MORE2 . . . . . . . . . . . .  	L NEAR	02F7	CODE
NO_ROOM  . . . . . . . . . . . .  	L NEAR	05AB	CODE
NO_SINC  . . . . . . . . . . . .  	L NEAR	0326	CODE

OEM  . . . . . . . . . . . . . .  	Text  		
OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Symbols-11
                                                             

OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
OPT_DISPATCH . . . . . . . . . .  	L NEAR	00AB	CODE
OPT_E  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
OPT_ERR  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
OPT_ERR_LEN  . . . . . . . . . .  	V BYTE 	0000	CONST	External
OPT_TBL  . . . . . . . . . . . .  	NEAR 	0016	CONST

PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PASTA  . . . . . . . . . . . . .  	L NEAR	03F1	CODE
PRINT_ALL  . . . . . . . . . . .  	L NEAR	0666	CODE
PRINT_DIFF . . . . . . . . . . .  	L NEAR	060F	CODE
PRINT_HEAD . . . . . . . . . . .  	L NEAR	0648	CODE
PROUT  . . . . . . . . . . . . .  	L NEAR	0696	CODE
PRT_AGAIN  . . . . . . . . . . .  	L NEAR	0679	CODE
PRT_BDIF . . . . . . . . . . . .  	L NEAR	0387	CODE
PRT_ERR  . . . . . . . . . . . .  	L NEAR	06A0	CODE
PT_HEX . . . . . . . . . . . . .  	L NEAR	03E9	CODE
PUT_HEX  . . . . . . . . . . . .  	L NEAR	03F3	CODE

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
RD_PAST_EOF  . . . . . . . . . .  	L NEAR	05B0	CODE
READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_DAT . . . . . . . . . . . .  	L NEAR	05B5	CODE
READ_ERR_POST  . . . . . . . . .  	V BYTE 	0000	CONST	External
READ_ERR_POST_LEN  . . . . . . .  	V BYTE 	0000	CONST	External
READ_ERR_PRE . . . . . . . . . .  	V BYTE 	0000	CONST	External
READ_ERR_PRE_LEN . . . . . . . .  	V BYTE 	0000	CONST	External
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
REFILL . . . . . . . . . . . . .  	L NEAR	0526	CODE
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
RETPBX . . . . . . . . . . . . .  	L NEAR	06AC	CODE
REV  . . . . . . . . . . . . . .  	L BYTE 	0015	CONST
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Symbols-12
                                                             

RPRI . . . . . . . . . . . . . .  	Number	0006	

SA1  . . . . . . . . . . . . . .  	L NEAR	0355	CODE
SB1  . . . . . . . . . . . . . .  	L NEAR	0357	CODE
SB2  . . . . . . . . . . . . . .  	L NEAR	0366	CODE
SC1  . . . . . . . . . . . . . .  	L NEAR	036B	CODE
SC2  . . . . . . . . . . . . . .  	L NEAR	037B	CODE
SC3  . . . . . . . . . . . . . .  	L NEAR	0385	CODE
SD1  . . . . . . . . . . . . . .  	L NEAR	041E	CODE
SD10 . . . . . . . . . . . . . .  	L NEAR	0462	CODE
SD11 . . . . . . . . . . . . . .  	L NEAR	046D	CODE
SD111  . . . . . . . . . . . . .  	L NEAR	0477	CODE
SD112  . . . . . . . . . . . . .  	L NEAR	047E	CODE
SD12 . . . . . . . . . . . . . .  	L NEAR	0480	CODE
SD121  . . . . . . . . . . . . .  	L NEAR	048C	CODE
SD122  . . . . . . . . . . . . .  	L NEAR	0496	CODE
SD13 . . . . . . . . . . . . . .  	L NEAR	049F	CODE
SD14 . . . . . . . . . . . . . .  	L NEAR	04AA	CODE
SD141  . . . . . . . . . . . . .  	L NEAR	04B4	CODE
SD142  . . . . . . . . . . . . .  	L NEAR	04BB	CODE
SD15 . . . . . . . . . . . . . .  	L NEAR	04BD	CODE
SD151  . . . . . . . . . . . . .  	L NEAR	04C9	CODE
SD152  . . . . . . . . . . . . .  	L NEAR	04D3	CODE
SD153  . . . . . . . . . . . . .  	L NEAR	04DA	CODE
SD154  . . . . . . . . . . . . .  	L NEAR	04E1	CODE
SD3  . . . . . . . . . . . . . .  	L NEAR	042C	CODE
SD4  . . . . . . . . . . . . . .  	L NEAR	042F	CODE
SD5  . . . . . . . . . . . . . .  	L NEAR	0430	CODE
SD6  . . . . . . . . . . . . . .  	L NEAR	04F5	CODE
SD7  . . . . . . . . . . . . . .  	L NEAR	04FD	CODE
SD8  . . . . . . . . . . . . . .  	L NEAR	0437	CODE
SD9  . . . . . . . . . . . . . .  	L NEAR	045B	CODE
SDX1 . . . . . . . . . . . . . .  	L NEAR	04F0	CODE
SE0  . . . . . . . . . . . . . .  	L NEAR	050A	CODE
SE1  . . . . . . . . . . . . . .  	L NEAR	0504	CODE
SE2  . . . . . . . . . . . . . .  	L NEAR	0523	CODE
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF1  . . . . . . . . . . . . . .  	L NEAR	0532	CODE
SF2  . . . . . . . . . . . . . .  	L NEAR	0535	CODE
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Symbols-13
                                                             

SF3  . . . . . . . . . . . . . .  	L NEAR	0556	CODE
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SG1  . . . . . . . . . . . . . .  	L NEAR	0582	CODE
SG2  . . . . . . . . . . . . . .  	L NEAR	05B2	CODE
SINC . . . . . . . . . . . . . .  	L BYTE 	0021	CONST
SJ01 . . . . . . . . . . . . . .  	L NEAR	010C	CODE
SJ02 . . . . . . . . . . . . . .  	L NEAR	01FB	CODE
SJ03 . . . . . . . . . . . . . .  	L NEAR	0215	CODE
SJ04 . . . . . . . . . . . . . .  	L NEAR	0227	CODE
SJ05 . . . . . . . . . . . . . .  	L NEAR	0232	CODE
SJ051  . . . . . . . . . . . . .  	L NEAR	0240	CODE
SJ06 . . . . . . . . . . . . . .  	L NEAR	0263	CODE
SJ07 . . . . . . . . . . . . . .  	L NEAR	0278	CODE
SJ08 . . . . . . . . . . . . . .  	L NEAR	027E	CODE
SJ09 . . . . . . . . . . . . . .  	L NEAR	029C	CODE
SJ10 . . . . . . . . . . . . . .  	L NEAR	02A4	CODE
SJ11 . . . . . . . . . . . . . .  	L NEAR	02AA	CODE
SM1  . . . . . . . . . . . . . .  	L NEAR	05D2	CODE
SM2  . . . . . . . . . . . . . .  	L NEAR	05E0	CODE
SM3  . . . . . . . . . . . . . .  	L NEAR	05E3	CODE
SM4  . . . . . . . . . . . . . .  	L NEAR	05E7	CODE
SM5  . . . . . . . . . . . . . .  	L NEAR	05EE	CODE
SM6  . . . . . . . . . . . . . .  	L NEAR	05F1	CODE
SM7  . . . . . . . . . . . . . .  	L NEAR	05FA	CODE
SO1  . . . . . . . . . . . . . .  	L NEAR	0672	CODE
SO2  . . . . . . . . . . . . . .  	L NEAR	0675	CODE
SO3  . . . . . . . . . . . . . .  	L NEAR	068A	CODE
SO4  . . . . . . . . . . . . . .  	L NEAR	0690	CODE
START  . . . . . . . . . . . . .  	L NEAR	0000	CODE
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
S_OPT  . . . . . . . . . . . . .  	L NEAR	00A3	CODE

TRUE . . . . . . . . . . . . . .  	Number	00FF	
TXT_COMPARE  . . . . . . . . . .  	L NEAR	01D1	CODE

UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
USERIDOPER . . . . . . . . . . .  	Number	005E	

Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 15:19:17
File Compare Routine for MSDOS 2.0                          Symbols-14
                                                             

VER  . . . . . . . . . . . . . .  	Text  		
VERS_ERR . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
VERS_OK  . . . . . . . . . . . .  	L NEAR	001F	CODE

WAIT . . . . . . . . . . . . . .  	Number	004D	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
W_OPT  . . . . . . . . . . . . .  	L NEAR	00A8	CODE

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	
XJ1  . . . . . . . . . . . . . .  	L NEAR	02D0	CODE
XJ2  . . . . . . . . . . . . . .  	L NEAR	02FF	CODE
XJ3  . . . . . . . . . . . . . .  	L NEAR	02DA	CODE
XJ4  . . . . . . . . . . . . . .  	L NEAR	0309	CODE
XJ5  . . . . . . . . . . . . . .  	L NEAR	02E5	CODE
XJ6  . . . . . . . . . . . . . .  	L NEAR	0314	CODE


   2953 Source  Lines
   3015 Total   Lines
    701 Symbols

  16070 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
