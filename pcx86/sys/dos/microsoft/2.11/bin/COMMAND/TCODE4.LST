Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-1
                                                            

                                TITLE   PART4 - COMMAND Transient routines. 
                                 
                             C          INCLUDE COMSW.ASM 
                             C  ; Use the following booleans to set assembly fl
				ags 
 = 0000                      C  FALSE   EQU     0 
 = FFFF                      C  TRUE    EQU     NOT FALSE 
                             C   
                             C  ENDIF 
                             C   
 =                           C  IBMVER  EQU     IBM  	; Switch to build IBM ver
				sion of Command 
 = FFFF                      C  MSVER   EQU     NOT IBM ; Switch to build MS-DO
				S version of Command 
                             C   
 =                           C  HIGHMEM EQU     FALSE   ; Run resident part abo
				ve transient (high memory) 
 =                           C  KANJI   EQU     FALSE   ; Support for dual byte
				 Microsoft KANJI standard 
 =                           C  IBMJAPAN        EQU     FALSE   ;MUST BE TRUE (
				along with IBM and KANJI) 
                                 
                                 
                                .list 
                                .cref 
                                 
                             C          INCLUDE COMEQU.ASM 
                             C  ;************************************* 
                             C  ; COMMAND EQUs which are not switch dependant 
                             C   
                             C  IFDEF   IBM 
                             C          INCLUDE IFEQU.ASM 
                             C  ;************************************* 
                             C  ; COMMAND EQUs which are switch dependant 
                             C   
                             C  ENDIF 
                             C   
                             C  ENDIF 
                             C   
                             C   
 = 003E                      C  SYM     EQU     ">" 
                             C   
 = 0017                      C  LINPERPAG       EQU     23 
 = 0001                      C  NORMPERLIN      EQU     1 
 = 0005                      C  WIDEPERLIN      EQU     5 
 = 0080                      C  COMBUFLEN       EQU     128     ; Length of com
				mmand buffer 
                             C   
 = 003A                      C  DRVCHAR         EQU     ":" 
                             C   
 = 005C                      C  FCB     EQU     5CH 
                             C   
                             C  VARSTRUC        STRUC 
 0000  ??                    C  ISDIR   DB      ? 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-2
DEVICE TABLE AND SRH DEFINITION                             

 0001  ??                    C  SIZ     DB      ? 
 0002  ????                  C  TTAIL   DW      ? 
 0004  ??                    C  INFO    DB      ? 
 0005  0054[                 C  BUF     DB      DIRSTRLEN + 20 DUP (?) 
            ??               C  
                         ]   C  
                             C  
 0059                        C  VARSTRUC        ENDS 
                             C   
 = 0001                      C  WSWITCH EQU     1               ; Wide display 
				during DIR 
 = 0002                      C  PSWITCH EQU     2               ; Pause (or Pag
				e) mode during DIR 
 = 0004                      C  ASWITCH EQU     4               ; ASCII mode du
				ring COPY 
 = 0008                      C  BSWITCH EQU     8               ; Binary mode d
				uring COPY 
 = 0010                      C  VSWITCH EQU     10H             ; Verify switch
				 
 = 8000                      C  GOTSWITCH EQU   8000H           ; Meta switch s
				et if switch character encountered 
                                 
                                 
                                 
 0000                           DATARES SEGMENT PUBLIC 
                                        EXTRN   RESTDIR:BYTE 
 0000                           DATARES ENDS 
                                 
 0000                           TRANDATA        SEGMENT PUBLIC 
                                        EXTRN   BADDRV:BYTE,BADSWT:BYTE 
                                        EXTRN   BADDAT:BYTE,NEWDAT:BYTE,BADTIM:
				BYTE 
                                        EXTRN   DMES:BYTE,CURDAT_PRE:BYTE,CURDA
				T_MID:BYTE,CURDAT_POST:BYTE 
                                        EXTRN   RENERR:BYTE,VERMES_PRE:BYTE,VER
				MES_POST:BYTE 
                                        EXTRN   DIRHEAD_PRE:BYTE,DIRHEAD_POST:B
				YTE 
                                        EXTRN   ACRLF:BYTE,BADARGS:BYTE,NOTFND:
				BYTE 
                                        EXTRN   NEWTIM:BYTE,BADCD:BYTE,BADMKD:B
				YTE,CLSSTRING:BYTE 
                                        EXTRN   CURTIM_PRE:BYTE,CURTIM_POST:BYT
				E,PauseMes:BYTE 
                                        EXTRN   BADRMD:BYTE 
 0000                           TRANDATA        ENDS 
                                 
 0000                           TRANSPACE       SEGMENT PUBLIC 
                                        EXTRN   COMBUF:BYTE,DIRCHAR:BYTE,USERDI
				R1:BYTE 
                                        EXTRN   BYTCNT:WORD,CURDRV:BYTE,COMSW:W
				ORD,ARGTS:WORD 
                                        EXTRN   LINCNT:BYTE,LINLEN:BYTE,FILECNT
				:WORD,CHARBUF:BYTE 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-3
DEVICE TABLE AND SRH DEFINITION                             

                                        EXTRN   DIRBUF:BYTE,BITS:WORD,PATHPOS:W
				ORD 
                                        EXTRN   DESTISDIR:BYTE,DESTTAIL:WORD,DE
				STINFO:BYTE,FULLSCR:WORD 
                                        EXTRN   INTERNATVARS:BYTE,RESSEG:WORD,T
				PA:WORD 
 0000                           TRANSPACE       ENDS 
                                 
                                 
 0000                           TRANCODE        SEGMENT PUBLIC BYTE 
                                ASSUME  CS:TRANGROUP,DS:NOTHING,ES:NOTHING,SS:N
				OTHING 
                                 
                                        EXTRN   NOTEST2:NEAR,PRINTVOL:NEAR,Prin
				t_Date:NEAR 
                                        EXTRN   CERROR:NEAR,SWITCH:NEAR,PWD:NEA
				R,SETREST:NEAR,MESTRAN:NEAR 
                                        EXTRN   NOTFNDERR:NEAR,CHKCNT:NEAR,GETK
				EYSTROKE:NEAR 
                                        EXTRN   SETPATH:NEAR,PATHCRUNCH:NEAR,PR
				INT:NEAR,ZPRINT:NEAR 
                                        EXTRN   DISPSIZE:NEAR,OUT:NEAR,OUT2:NEA
				R,ERROR_PRINT:NEAR 
                                        EXTRN   SCANOFF:NEAR,OUTBYTE:NEAR,GETNU
				M:NEAR,ERROR_OUTPUT:NEAR 
                                 
                                 
                                        PUBLIC  PRINT_TIME,CATALOG 
                                        PUBLIC  BADCDERR,PRINT_VERSION,CLS,SAVU
				DIR,SAVUDIR1 
                                        PUBLIC  TYPEFIL,CRENAME,$RMDIR 
                                        PUBLIC  CTIME,$CHDIR,ONESPC,DATINIT 
                                        PUBLIC  $MKDIR,VERSION,RESTUDIR1 
                                        PUBLIC  RESTUDIR,CRLF2,ERASE 
                                        PUBLIC  volume,date,P_date,PAUSE 
                                 
                                 
 0000                           CATALOG: 
 0000  E8 02CA R                        CALL    OKVOLARG 
 0003  B0 3F                            MOV     AL,"?"                  ; *.* i
				s default file spec. 
 0005  BF 005D                          MOV     DI,5DH 
 0008  B9 000B                          MOV     CX,11 
 000B  F3/ AA                           REP     STOSB 
 000D  BE 0081                          MOV     SI,81H 
 0010  E8 0000 E                        CALL    SWITCH 
 0013  BF 005C                          MOV     DI,FCB 
 0016  B8 290D                          MOV     AX,(PARSE_FILE_DESCRIPTOR SHL 8
				) OR 0DH          ; Parse with default name and
				 extension 
 0019  CD 21                            INT     int_command 
                                 
                                ; Begin by processing any switches that may hav
				e been specified. 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-4
DEVICE TABLE AND SRH DEFINITION                             

                                ; BITS will contain any information about switc
				hes that was 
                                ; found when the command line was parsed. 
                                 
 001B                           SETSWT: 
 001B  2E: A1 0000 E                    MOV     AX,[COMSW]              ; Get s
				witches from command 
 001F  2E: 0B 06 0000 E                 OR      AX,[ARGTS]              ; OR in
				 switches from all of tail 
 0024  2E: A3 0000 E                    MOV     [BITS],AX 
 0028  2E: C6 06 0000 E 17              MOV     BYTE PTR[FULLSCR],LINPERPAG 
 002E  A8 01                            TEST    AL,1                    ; Look 
				for W switch 
 0030  B0 01                            MOV     AL,NORMPERLIN 
 0032  74 02                            JZ      DIR 
 0034  B0 05                            MOV     AL,WIDEPERLIN 
 0036                           DIR: 
 0036  2E: A2 0000 E                    MOV     [LINLEN],AL             ; Set n
				umber of entries per line 
 003A  2E: A2 0000 E                    MOV     [LINCNT],AL 
 003E  2E: C7 06 0000 E 0000            MOV     [FILECNT],0     ; Keep track of
				 how many files found 
 0045  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:DIRBUF     
				 ; Set Disk transfer address 
 0048  B4 1A                            MOV     AH,SET_DMA 
 004A  CD 21                            INT     int_command 
 004C  E8 0000 E                        CALL    PATHCRUNCH                     
				 ; Get where we're going 
 004F  9C                               PUSHF 
 0050  73 0B                            JNC     NOTEST 
 0052  2E: 80 3E 0000 E 00              CMP     [DESTISDIR],0           ; No CH
				DIRs worked 
 0058  74 03                            JZ      NOTEST                  ; see i
				f they should have 
 005A  E9 01F1 R                        JMP     BADCDERR 
                                 
 005D                           NOTEST: 
 005D  BE 005C                          MOV     SI,FCB 
 0060  BF 0000 E                        MOV     DI,OFFSET TRANGROUP:DIRBUF 
 0063  8B D7                            MOV     DX,DI 
 0065  B9 000C                          MOV     CX,12 
 0068  F3/ A4                           REP     MOVSB 
 006A  B4 0F                            MOV     AH,FCB_OPEN 
 006C  CD 21                            INT     int_command 
 006E  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:DIRHEAD_PRE
				 ; Print "Directory of" 
 0071  50                               PUSH    AX                             
				 ; save return code 
 0072  E8 0000 E                        CALL    PRINT 
 0075  E8 0000 E                        CALL    PWD                            
				 ; print the path 
 0078  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:DIRHEAD_POS
				T 
 007B  E8 0000 E                        CALL    PRINT 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-5
DEVICE TABLE AND SRH DEFINITION                             

 007E  58                               POP     AX 
 007F  0A C0                            OR      AL,AL 
 0081  75 0B                            JNZ     OKDODIR                        
				 ; Go ahead and dir if open fail 
 0083  2E: F6 06 0018 E 80              TEST    [DIRBUF+fcb_DEVID],devid_device
				 
 0089  74 03                            JZ      OKDODIR 
 008B  E9 0000 E                        JMP     NOTFNDERR                      
				 ; Can't DIR a device 
 008E                           OKDODIR: 
 008E  B4 11                            MOV     AH,DIR_SEARCH_FIRST 
 0090  C6 06 0055 FF                    MOV     BYTE PTR DS:[FCB-7],0FFH 
 0095  C6 06 005B 10                    MOV     BYTE PTR DS:[FCB-1],010H 
 009A  9D                               POPF 
 009B  72 27                            JC      SHOWDIR                        
				 ; Current dir 
 009D  74 19                            JZ      DOFIRST                        
				 ; FCB is *.* 
 009F  B0 3F                            MOV     AL,"?" 
 00A1  BF 005D                          MOV     DI,5DH 
 00A4  B9 000B                          MOV     CX,11 
 00A7  F3/ AA                           REP     STOSB           ; Remake defaul
				t FCB 
 00A9  2E: 8B 36 0000 E                 MOV     SI,[DESTTAIL] 
 00AE  BF 005C                          MOV     DI,FCB 
 00B1  B8 290E                          MOV     AX,(PARSE_FILE_DESCRIPTOR SHL 8
				) OR 0EH  ; Parse with default drive, name and 
				extension 
 00B4  CD 21                            INT     int_command 
 00B6  B4 11                            MOV     AH,DIR_SEARCH_FIRST 
 00B8                           DOFIRST: 
 00B8  BA 0055                          MOV     DX,FCB-7 
 00BB  CD 21                            INT     int_command 
 00BD  50                               PUSH    AX 
 00BE  E8 029B R                        CALL    RESTUDIR 
 00C1  58                               POP     AX 
 00C2  EB 05                            JMP     SHORT DIRSTART 
                                 
 00C4                           SHOWDIR: 
 00C4  BA 0055                          MOV     DX,FCB-7        ; DX -> Unopene
				d FCB 
 00C7  CD 21                            INT     int_command             ; Searc
				h for a file to match FCB 
 00C9                           DIRSTART: 
 00C9  FE C0                            INC     AL              ; FF = file not
				 found 
 00CB  75 06                            JNZ     AGAIN           ; Either an err
				or or we are finished 
 00CD  E9 0000 E                        JMP     CHKCNT 
 00D0                           NEXENTJ: 
 00D0  E9 0158 R                        JMP    NEXENT 
 00D3                           AGAIN: 
 00D3  2E: FF 06 0000 E                 INC     [FILECNT]       ; Keep track of
				 how many we find 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-6
DEVICE TABLE AND SRH DEFINITION                             

 00D8  BE 0008 E                        MOV     SI,OFFSET TRANGROUP:DIRBUF+8   
				 ; SI -> information returned by sys call 
 00DB  E8 0197 R                        CALL    SHONAME 
 00DE  2E: F6 06 0000 E 01              TEST    BYTE PTR[BITS],WSWITCH  ; W swi
				tch set? 
 00E4  75 EA                            JNZ     NEXENTJ         ; If so, no siz
				e, date, or time 
 00E6  BE 0013 E                        MOV     SI,OFFSET TRANGROUP:DIRBUF+8+di
				r_attr 
 00E9  F6 04 10                         TEST    BYTE PTR [SI],attr_directory 
 00EC  74 08                            JZ      FILEENT 
 00EE  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:DMES 
 00F1  E8 0000 E                        CALL    PRINT 
 00F4  EB 03                            JMP     SHORT NOFSIZ 
 00F6                           FILEENT: 
 00F6  E8 0000 E                        CALL    DISPSIZE        ; Print size of
				 file 
 00F9                           NOFSIZ: 
 00F9  2E: A1 0020 E                    MOV     AX,WORD PTR [DIRBUF+8+dir_date]
				  ; Get date 
 00FD  0B C0                            OR      AX,AX 
 00FF  74 57                            JZ      NEXENT          ; Skip if no da
				te 
 0101  BF 0000 E                        MOV     DI,OFFSET TRANGROUP:CHARBUF 
 0104  50                               PUSH    AX 
 0105  B8 2020                          MOV     AX,"  " 
 0108  AB                               STOSW 
 0109  58                               POP     AX 
 010A  8B D8                            MOV     BX,AX 
 010C  25 001F                          AND     AX,1FH          ; get day 
 010F  8A D0                            MOV     DL,AL 
 0111  8B C3                            MOV     AX,BX 
 0113  B1 05                            MOV     CL,5 
 0115  D3 E8                            SHR     AX,CL           ; Align month 
 0117  24 0F                            AND     AL,0FH          ; Get month 
 0119  8A F0                            MOV     DH,AL 
 011B  8A CF                            MOV     CL,BH 
 011D  D0 E9                            SHR     CL,1            ; Align year 
 011F  32 ED                            XOR     CH,CH 
 0121  83 C1 50                         ADD     CX,80           ; Relative 1980
				 
 0124  80 F9 64                         CMP     CL,100 
 0127  72 03                            JB      MILLENIUM 
 0129  80 E9 64                         SUB     CL,100 
 012C                           MILLENIUM: 
 012C  E8 0426 R                        CALL    DATE_CXDX 
 012F  2E: 8B 0E 001E E                 MOV     CX,WORD PTR[DIRBUF+8+dir_time] 
				 ; Get time 
 0134  E3 19                            JCXZ    PRBUF           ; Time field pr
				esent? 
 0136  B8 2020                          MOV     AX,"  " 
 0139  AB                               STOSW 
 013A  D1 E9                            SHR     CX,1 
 013C  D1 E9                            SHR     CX,1 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-7
DEVICE TABLE AND SRH DEFINITION                             

 013E  D1 E9                            SHR     CX,1 
 0140  D0 E9                            SHR     CL,1 
 0142  D0 E9                            SHR     CL,1            ; Hours in CH, 
				minutes in CL 
 0144  2E: 8A 1E 0011 E                 MOV     BL,[INTERNATVARS.Time_24] 
 0149  80 CB 80                         OR      BL,80H          ; Tell P_TIME c
				alled from DIR 
 014C  E8 0595 R                        CALL    P_TIME          ; Don't care ab
				out DX, never used with DIR 
 014F                           PRBUF: 
 014F  33 C0                            XOR     AX,AX 
 0151  AA                               STOSB 
 0152  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:CHARBUF 
 0155  E8 0000 E                        CALL    ZPRINT 
 0158                           NEXENT: 
 0158  2E: FE 0E 0000 E                 DEC     [LINCNT] 
 015D  75 31                            JNZ     SAMLIN 
 015F                           NEXLIN: 
 015F  2E: A0 0000 E                    MOV     AL,[LINLEN] 
 0163  2E: A2 0000 E                    MOV     [LINCNT],AL 
 0167  E8 01B8 R                        CALL    CRLF2 
 016A  2E: F6 06 0000 E 02              TEST    BYTE PTR[BITS],PSWITCH  ; P swi
				tch present? 
 0170  74 19                            JZ      SCROLL          ; If not, just 
				continue 
 0172  2E: FE 0E 0000 E                 DEC     BYTE PTR[FULLSCR] 
 0177  75 12                            JNZ     SCROLL 
 0179  2E: C6 06 0000 E 17              MOV     BYTE PTR[FULLSCR],LINPERPAG 
 017F  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:PAUSEMES 
 0182  E8 0000 E                        CALL    PRINT 
 0185  E8 0000 E                        CALL    GetKeystroke 
 0188  E8 01B8 R                        CALL    CRLF2 
 018B                           SCROLL: 
 018B  B4 12                            MOV     AH,DIR_SEARCH_NEXT 
 018D  E9 00C4 R                        JMP     SHOWDIR 
                                 
 0190                           SAMLIN: 
 0190  B0 09                            MOV     AL,9            ; Output a tab 
 0192  E8 0000 E                        CALL    OUT 
 0195  EB F4                            JMP     SHORT SCROLL 
                                 
 0197                           SHONAME: 
 0197  BF 0000 E                        MOV     DI,OFFSET TRANGROUP:CHARBUF 
 019A  B9 0008                          MOV     CX,8 
 019D  F3/ A4                           REP     MOVSB 
 019F  B0 20                            MOV     AL," " 
 01A1  AA                               STOSB 
 01A2  B9 0003                          MOV     CX,3 
 01A5  F3/ A4                           REP     MOVSB 
 01A7  33 C0                            XOR     AX,AX 
 01A9  AA                               STOSB 
 01AA  52                               PUSH    DX 
 01AB  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:CHARBUF 
 01AE  E8 0000 E                        CALL    ZPRINT 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-8
DEVICE TABLE AND SRH DEFINITION                             

 01B1  5A                               POP     DX 
                                        return 
 01B2                         1 ??0000:
 01B2  C3                     1  RET
                                 
 01B3                           ONESPC: 
 01B3  B0 20                            MOV     AL," " 
 01B5  E9 0000 E                        JMP     OUT 
                                 
 01B8                           CRLF2: 
 01B8  52                               PUSH    DX 
 01B9  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:ACRLF 
 01BC                           PR: 
 01BC  1E                               PUSH    DS 
 01BD  0E                               PUSH    CS 
 01BE  1F                               POP     DS 
 01BF  E8 0000 E                        CALL    PRINT 
 01C2  1F                               POP     DS 
 01C3  5A                               POP     DX 
                                        return 
 01C4                         1 ??0001:
 01C4  C3                     1  RET
                                 
 01C5                           PAUSE: 
 01C5  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:PAUSEMES 
 01C8  E8 0000 E                        CALL    ERROR_PRINT 
 01CB  E8 0000 E                        CALL    GetKeystroke 
 01CE  E8 01B8 R                        CALL    CRLF2 
                                        return 
 01D1                         1 ??0002:
 01D1  C3                     1  RET
                                 
 01D2                           ERASE: 
 01D2  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:BADARGS 
 01D5  BE 0080                          MOV     SI,80H 
 01D8  AC                               LODSB 
 01D9  0A C0                            OR      AL,AL 
 01DB  74 17                            JZ      ERRJ2 
 01DD  E8 0000 E                        CALL    SCANOFF 
 01E0  3C 0D                            CMP     AL,13           ; RETURN KEY? 
 01E2  74 10                            JZ      ERRJ2           ; IF SO NO PARA
				METERS SPECIFIED 
                                 
 01E4                           ERA1: 
 01E4  E8 0000 E                        CALL    PATHCRUNCH 
 01E7  73 0E                            JNC     NOTEST2J 
 01E9  2E: 80 3E 0000 E 00              CMP     [DESTISDIR],0           ; No CH
				DIRs worked 
 01EF  74 06                            JZ      NOTEST2J                ; see i
				f they should have 
 01F1                           BADCDERR: 
 01F1  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:BADCD 
 01F4                           ERRJ2: 
 01F4  E9 0000 E                        JMP     CERROR 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-9
DEVICE TABLE AND SRH DEFINITION                             

                                 
 01F7                           NOTEST2J: 
 01F7  E9 0000 E                        JMP     NOTEST2 
                                 
 01FA                           CRENAME: 
 01FA  E8 0000 E                        CALL    PATHCRUNCH 
 01FD  73 0A                            JNC     NOTEST3 
 01FF  2E: 80 3E 0000 E 00              CMP     [DESTISDIR],0           ; No CH
				DIRs worked 
 0205  74 02                            JZ      NOTEST3                 ; see i
				f they should have 
 0207  EB E8                            JMP     BADCDERR 
                                 
 0209                           NOTEST3: 
 0209  2E: 8B 36 0000 E                 MOV     SI,[PATHPOS] 
 020E  BF 006C                          MOV     DI,FCB+10H 
 0211  E8 0000 E                        CALL    SCANOFF 
 0214  B8 2901                          MOV     AX,(PARSE_FILE_DESCRIPTOR SHL 8
				) OR 01H 
 0217  CD 21                            INT     int_command 
 0219  80 3E 006D 20                    CMP     BYTE PTR DS:[FCB+10H+1]," "  ; 
				Check if parameter exists 
 021E  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:BADARGS 
 0221  74 13                            JZ      ERRJ            ; Error if miss
				ing parameter 
 0223  B4 17                            MOV     AH,FCB_RENAME 
 0225  BA 005C                          MOV     DX,FCB 
 0228  CD 21                            INT     int_command 
 022A  50                               PUSH    AX 
 022B  E8 029B R                        CALL    RESTUDIR 
 022E  58                               POP     AX 
 022F  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:RENERR 
 0232  FE C0                            INC     AL 
                                        retnz 
 0234  75 9B                  2  ??0003: jnz ret_l
 0236                           ERRJ: 
 0236  E9 0000 E                        JMP     CERROR 
                                 
                                ASSUME  DS:TRANGROUP,ES:TRANGROUP 
 0239                           TYPEFIL: 
 0239  BE 0081                          mov     si,81H 
 023C  E8 0000 E                        call    SCANOFF         ; Skip to first
				 non-delim 
 023F  3C 0D                            cmp     al,0DH 
 0241  75 03                            jnz     GOTTARG 
 0243  E9 03A1 R                        jmp     NOARGERR        ; No args 
 0246                           GOTTARG: 
 0246  E8 0000 E                        CALL    SETPATH 
 0249  B8 3D00                          MOV     AX,OPEN SHL 8 
 024C  CD 21                            INT     int_command 
 024E  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:NOTFND 
 0251  72 E3                            JC      ERRJ 
 0253  8B D8                            MOV     BX,AX           ; Handle 
 0255  8E 1E 0000 E                     MOV     DS,[TPA] 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-10
DEVICE TABLE AND SRH DEFINITION                             

 0259  33 D2                            XOR     DX,DX 
                                ASSUME  DS:NOTHING 
 025B                           TYPELP: 
 025B  26: 8B 0E 0000 E                 MOV     CX,[BYTCNT] 
 0260  B4 3F                            MOV     AH,READ 
 0262  CD 21                            INT     int_command 
 0264  8B C8                            MOV     CX,AX 
 0266  E3 3F                            JCXZ    RET56 
 0268  53                               PUSH    BX 
 0269  BB 0001                          MOV     BX,1 
 026C  B4 40                            MOV     AH,WRITE 
 026E  CD 21                            INT     int_command 
 0270  5B                               POP     BX 
 0271  72 0A                            JC      ERROR_OUTPUTJ 
 0273  3B C1                            CMP     AX,CX 
 0275  74 E4                            JZ      TYPELP 
 0277  49                               DEC     CX 
 0278  3B C1                            CMP     AX,CX 
                                        retz                            ; One l
				ess byte OK (^Z) 
 027A  75 01                  3  jnz ??0007
 027C                         4 ??0008:
 027C  C3                     4  RET
 027D                         3  ??0007:
 027D                           ERROR_OUTPUTJ: 
 027D  BB 0001                          MOV     BX,1 
 0280  B8 4400                          MOV     AX,IOCTL SHL 8 
 0283  CD 21                            INT     int_command 
 0285  F6 C2 80                         TEST    DL,devid_ISDEV 
                                        retnz                           ; If de
				vice, no error message 
 0288  75 F2                  2  ??0009: jnz ret_l
 028A  E9 0000 E                        JMP     ERROR_OUTPUT 
                                 
 028D                           RESTUDIR1: 
 028D  1E                               PUSH    DS 
 028E  26: 8E 1E 0000 E                 MOV     DS,[RESSEG] 
                                ASSUME  DS:RESGROUP 
 0293  80 3E 0000 E 00                  CMP     [RESTDIR],0 
 0298  1F                               POP     DS 
                                ASSUME  DS:TRANGROUP 
                                        retz 
 0299  74 E1                  2  ??000B: jz ret_l
 029B                           RESTUDIR: 
 029B  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:USERDIR1 
 029E  B4 3B                            MOV     AH,CHDIR 
 02A0  CD 21                            INT     int_command             ; Resto
				re users DIR 
 02A2  32 C0                            XOR     AL,AL 
 02A4  E8 0000 E                        CALL    SETREST 
 02A7                           RET56: 
                                        return 
 02A7                         1 ??000D:
 02A7  C3                     1  RET
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-11
DEVICE TABLE AND SRH DEFINITION                             

                                 
                                 
 02A8                           VOLUME: 
 02A8  BE 0081                          mov     si,81H 
 02AB  E8 0000 E                        call    SCANOFF         ; Skip to first
				 non-delim 
 02AE  80 3E 005C 00                    CMP     BYTE PTR DS:[FCB],0     ;Defaul
				t drive? 
 02B3  74 0B                            JZ      CHECKNOARG              ;Yes 
 02B5  46                               INC     SI 
 02B6  46                               INC     SI      ;Skip over d: 
 02B7  8B DE                            MOV     BX,SI 
 02B9  E8 0000 E                        CALL    SCANOFF 
 02BC  3B DE                            CMP     BX,SI 
 02BE  75 0A                            JNZ     OKVOLARG        ; If we skipped
				 some delims at this point, OK 
 02C0                           CHECKNOARG: 
 02C0  3C 0D                            cmp     al,0DH 
 02C2  74 06                            JZ      OKVOLARG 
 02C4                           BADVOLARG: 
 02C4  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:BADDRV 
 02C7  E9 0000 E                        JMP     CERROR 
                                 
 02CA                           OKVOLARG: 
 02CA  E8 01B8 R                        CALL    CRLF2 
 02CD  1E                               PUSH    DS 
 02CE  07                               POP     ES 
 02CF  BF 0055                          MOV     DI,FCB-7        ; Set up extend
				ed FCB 
 02D2  B8 FFFF                          MOV     AX,-1 
 02D5  AA                               STOSB 
 02D6  33 C0                            XOR     AX,AX 
 02D8  AB                               STOSW 
 02D9  AB                               STOSW 
 02DA  AA                               STOSB 
 02DB  B0 08                            MOV     AL,8            ; Look for volu
				me label 
 02DD  AA                               STOSB 
 02DE  47                               INC     DI              ; Skip drive by
				te 
 02DF  B9 000B                          MOV     CX,11 
 02E2  B0 3F                            MOV     AL,'?' 
 02E4  F3/ AA                           REP     STOSB 
 02E6  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:DIRBUF 
 02E9  B4 1A                            MOV     AH,SET_DMA 
 02EB  CD 21                            INT     int_command 
 02ED  BA 0055                          MOV     DX,FCB-7 
 02F0  B4 11                            MOV     AH,DIR_SEARCH_FIRST 
 02F2  CD 21                            INT     int_command 
 02F4  E9 0000 E                        JMP     PRINTVOL 
                                 
 02F7                           VERSION: 
 02F7  E8 01B8 R                        CALL    CRLF2 
 02FA  E8 0300 R                        CALL    PRINT_VERSION 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-12
DEVICE TABLE AND SRH DEFINITION                             

 02FD  E9 01B8 R                        JMP     CRLF2 
                                 
 0300                           PRINT_VERSION: 
 0300  BF 0000 E                        MOV     DI,OFFSET TRANGROUP:CHARBUF 
 0303  BE 0000 E                        MOV     SI,OFFSET TRANGROUP:VERMES_PRE 
 0306  E8 0000 E                        CALL    MESTRAN 
 0309  B4 30                            MOV     AH,GET_VERSION 
 030B  CD 21                            INT     int_command 
 030D  50                               PUSH    AX 
 030E  32 E4                            XOR     AH,AH 
 0310  B1 0A                            MOV     CL,10 
 0312  F6 F1                            DIV     CL 
 0314  B1 04                            MOV     CL,4 
 0316  D2 E0                            SHL     AL,CL 
 0318  0A C4                            OR      AL,AH 
 031A  B9 1110                          MOV     CX,1110H 
 031D  8A D0                            MOV     DL,AL 
 031F  E8 0000 E                        CALL    OUTBYTE 
 0322  B0 2E                            MOV     AL,'.' 
 0324  AA                               STOSB 
 0325  58                               POP     AX 
 0326  8A C4                            MOV     AL,AH 
 0328  32 E4                            XOR     AH,AH 
 032A  B1 0A                            MOV     CL,10 
 032C  F6 F1                            DIV     CL 
 032E  B1 04                            MOV     CL,4 
 0330  D2 E0                            SHL     AL,CL 
 0332  0A C4                            OR      AL,AH 
 0334  B9 1010                          MOV     CX,1010H 
 0337  8A D0                            MOV     DL,AL 
 0339  E8 0000 E                        CALL    OUTBYTE 
 033C  BE 0000 E                        MOV     SI,OFFSET TRANGROUP:VERMES_POST
				 
 033F  E8 0000 E                        CALL    MESTRAN 
 0342  33 C0                            XOR     AX,AX 
 0344  AA                               STOSB 
 0345  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:CHARBUF 
 0348  E9 0000 E                        JMP     ZPRINT 
                                 
                                ASSUME  DS:TRANGROUP 
                                 
 034B                           CLS: 
                                        ENDIF 
                                 
 034B  BE 0000 E                        MOV     SI,OFFSET TRANGROUP:CLSSTRING 
 034E  AC                               LODSB 
 034F  8A C8                            MOV     CL,AL 
 0351  32 ED                            XOR     CH,CH 
 0353  B4 06                            MOV     AH,RAW_CON_IO 
 0355                           CLRLOOP: 
 0355  AC                               LODSB 
 0356  8A D0                            MOV     DL,AL 
 0358  CD 21                            INT     int_command 
 035A  E2 F9                            LOOP    CLRLOOP 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-13
DEVICE TABLE AND SRH DEFINITION                             

                                        return 
 035C                         1 ??000E:
 035C  C3                     1  RET
                                 
 035D                           $CHDIR: 
 035D  A1 0000 E                        MOV     AX,[COMSW] 
 0360  0B 06 0000 E                     OR      AX,[ARGTS] 
 0364  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:BADSWT 
 0367  75 35                            JNZ     CERRORJ3 
 0369  BE 0081                          mov     si,81H 
 036C  E8 0000 E                        call    SCANOFF         ; Skip to first
				 non-delim 
 036F  3C 0D                            cmp     al,0DH 
 0371  74 07                            jz      PWDJ            ; No args 
 0373  46                               inc     si              ; Skip first ch
				ar 
 0374  AD                               lodsw 
 0375  3D 0D3A                          cmp     ax,(0DH SHL 8) OR ':'   ; d:<CR
				> ? 
 0378  75 03                            jnz     REALCD          ; no 
 037A                           PWDJ: 
 037A  E9 0000 E                        jmp     PWD             ; Drive only sp
				ecified 
 037D                           REALCD: 
 037D  E8 0000 E                        CALL    SETPATH 
 0380  F6 06 0000 E 02                  TEST    [DESTINFO],2 
 0385  75 06                            JNZ     BADCDERRJ 
 0387  B4 3B                            MOV     AH,CHDIR 
 0389  CD 21                            INT     int_command 
                                        retnc 
 038B  73 CF                  2  ??000F: jnc ret_l
 038D                           BADCDERRJ: 
 038D  E9 01F1 R                        JMP  BADCDERR 
                                 
 0390                           $MKDIR: 
 0390  E8 03A6 R                        CALL    SETRMMK 
 0393  75 06                            JNZ     BADMDERR 
 0395  B4 39                            MOV     AH,MKDIR 
 0397  CD 21                            INT     int_command 
                                        retnc 
 0399  73 C1                  2  ??0011: jnc ret_l
 039B                           BADMDERR: 
 039B  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:BADMKD 
 039E                           CERRORJ3: 
 039E  E9 0000 E                        JMP    CERROR 
                                 
 03A1                           NOARGERR: 
 03A1  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:BADARGS 
 03A4  EB F8                            JMP     SHORT CERRORJ3 
                                 
 03A6                           SETRMMK: 
 03A6  BE 0081                          mov     si,81H 
 03A9  E8 0000 E                        call    SCANOFF         ; Skip to first
				 non-delim 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-14
DEVICE TABLE AND SRH DEFINITION                             

 03AC  3C 0D                            cmp     al,0DH 
 03AE  74 F1                            jz      NOARGERR        ; No args 
 03B0  A1 0000 E                        MOV     AX,[COMSW] 
 03B3  0B 06 0000 E                     OR      AX,[ARGTS] 
 03B7  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:BADSWT 
 03BA  75 E2                            JNZ     CERRORJ3 
 03BC  E8 0000 E                        CALL    SETPATH 
 03BF  F6 06 0000 E 02                  TEST    [DESTINFO],2 
                                        return 
 03C4                         1 ??0013:
 03C4  C3                     1  RET
                                 
 03C5                           $RMDIR: 
 03C5  E8 03A6 R                        CALL    SETRMMK 
 03C8  75 06                            JNZ     BADRDERR 
 03CA  B4 3A                            MOV     AH,RMDIR 
 03CC  CD 21                            INT     int_command 
                                        retnc 
 03CE  73 F4                  2  ??0014: jnc ret_l
 03D0                           BADRDERR: 
 03D0  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:BADRMD 
 03D3  E9 0000 E                        JMP     CERROR 
                                 
 03D6                           SAVUDIR: 
                                ; DL is drive number A=1 
 03D6  BF 0000 E                        MOV     DI,OFFSET TRANGROUP:USERDIR1 
 03D9                           SAVUDIR1: 
 03D9  8A C2                            MOV     AL,DL 
 03DB  04 40                            ADD     AL,'@' 
 03DD  3C 40                            CMP     AL,'@' 
 03DF  75 06                            JNZ     GOTUDRV 
 03E1  02 06 0000 E                     ADD     AL,[CURDRV] 
 03E5  FE C0                            INC     AL                 ; A = 1 
 03E7                           GOTUDRV: 
 03E7  AA                               STOSB 
 03E8  8A 26 0000 E                     MOV     AH,[DIRCHAR] 
 03EC  B0 3A                            MOV     AL,DRVCHAR 
 03EE  AB                               STOSW 
 03EF  06                               PUSH    ES 
 03F0  1F                               POP     DS 
                                ASSUME  DS:NOTHING 
 03F1  8B F7                            MOV     SI,DI 
 03F3  B4 47                            MOV     AH,CURRENT_DIR      ; Get the D
				irectory Text 
 03F5  CD 21                            INT     int_command 
                                        retc 
 03F7  72 CB                  2  ??0016: jc ret_l
 03F9  0E                               PUSH    CS 
 03FA  1F                               POP     DS 
                                ASSUME  DS:TRANGROUP 
                                        return 
 03FB                         1 ??0018:
 03FB  C3                     1  RET
                                 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-15
DEVICE TABLE AND SRH DEFINITION                             

                                ASSUME  DS:TRANGROUP,ES:TRANGROUP 
                                 
                                ; Date and time are set during initialization a
				nd use 
                                ; this routines since they need to do a long re
				turn 
                                 
 03FC                           DATINIT PROC    FAR 
 03FC  06                               PUSH    ES 
 03FD  1E                               PUSH    DS              ; Going to use 
				the previous stack 
 03FE  8C C8                            MOV     AX,CS           ; Set up the ap
				propriate segment registers 
 0400  8E C0                            MOV     ES,AX 
 0402  8E D8                            MOV     DS,AX 
 0404  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:INTERNATVAR
				S        ;Set up internat vars 
 0407  B8 3800                          MOV     AX,INTERNATIONAL SHL 8 
 040A  CD 21                            INT     21H 
 040C  C7 06 0081 000D                  MOV     WORD PTR DS:[81H],13    ; Want 
				to prompt for date during initialization 
 0412  C6 06 0000 E 80                  MOV     [COMBUF],COMBUFLEN      ; Init 
				COMBUF 
 0417  C7 06 0001 E 0D01                MOV     WORD PTR [COMBUF+1],0D01H 
 041D  E8 048C R                        CALL    DATE 
 0420  E8 0566 R                        CALL    CTIME 
 0423  1F                               POP     DS 
 0424  07                               POP     ES 
 0425  CB                               RET 
                                DATINIT ENDP 
                                 
                                ; DATE - Gets and sets the time 
                                 
 0426                           DATE_CXDX: 
 0426  8B D9                            MOV     BX,CX 
 0428                           P_DATE: 
 0428  8B C3                            MOV     AX,BX 
 042A  8B CA                            MOV     CX,DX 
 042C  B2 64                            MOV     DL,100 
 042E  F6 F2                            DIV     DL 
 0430  86 C4                            XCHG    AL,AH 
 0432  92                               XCHG    AX,DX 
 0433  B7 10                            MOV     BH,"0"-" "      ; Enable leadin
				g zero suppression 
 0435  A1 0000 E                        MOV     AX,WORD PTR [INTERNATVARS.Date_
				tim_format] 
 0438  0B C0                            OR      AX,AX 
 043A  74 15                            JZ      USPDAT 
 043C  48                               DEC     AX 
 043D  74 22                            JZ      EUPDAT 
 043F  B7 00                            MOV     BH,0            ; Disable leadi
				ng zero suppression 
 0441  E8 047D R                        CALL    P_YR 
 0444  E8 0472 R                        CALL    P_DSEP 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-16
DEVICE TABLE AND SRH DEFINITION                             

 0447  E8 046C R                        CALL    P_MON 
 044A  E8 0472 R                        CALL    P_DSEP 
 044D  E8 0477 R                        CALL    P_DAY 
                                        return 
 0450                         1 ??0019:
 0450  C3                     1  RET
                                 
 0451                           USPDAT: 
 0451  E8 046C R                        CALL    P_MON 
 0454  E8 0472 R                        CALL    P_DSEP 
 0457  E8 0477 R                        CALL    P_DAY 
 045A                           PLST: 
 045A  E8 0472 R                        CALL    P_DSEP 
 045D  E8 047D R                        CALL    P_YR 
                                        return 
 0460                         1 ??001A:
 0460  C3                     1  RET
                                 
 0461                           EUPDAT: 
 0461  E8 0477 R                        CALL    P_DAY 
 0464  E8 0472 R                        CALL    P_DSEP 
 0467  E8 046C R                        CALL    P_MON 
 046A  EB EE                            JMP     PLST 
                                 
 046C                           P_MON: 
 046C  8A C5                            MOV     AL,CH 
 046E  E8 0000 E                        CALL    OUT2 
                                        return 
 0471                         1 ??001B:
 0471  C3                     1  RET
                                 
 0472                           P_DSEP: 
 0472  A0 000B E                        MOV     AL,BYTE PTR [INTERNATVARS.Date_
				sep] 
 0475  AA                               STOSB 
                                        return 
 0476                         1 ??001C:
 0476  C3                     1  RET
                                 
 0477                           P_DAY: 
 0477  8A C1                            MOV     AL,CL 
 0479  E8 0000 E                        CALL    OUT2 
                                        return 
 047C                         1 ??001D:
 047C  C3                     1  RET
                                 
 047D                           P_YR: 
 047D  8A C6                            MOV     AL,DH 
 047F  0A C0                            OR      AL,AL 
 0481  74 03                            JZ      TWODIGYR        ; Two instead o
				f 4 digit year 
 0483  E8 0000 E                        CALL    OUT2 
 0486                           TWODIGYR: 
 0486  8A C2                            MOV     AL,DL 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-17
DEVICE TABLE AND SRH DEFINITION                             

 0488  E8 0000 E                        CALL    OUT2 
                                        return 
 048B                         1 ??001E:
 048B  C3                     1  RET
                                 
 048C                           DATE: 
 048C  BE 0081                          MOV     SI,81H          ; Accepting arg
				ument for date inline 
 048F  E8 0000 E                        CALL    SCANOFF 
 0492  3C 0D                            CMP     AL,13 
 0494  74 03                            JZ      PRMTDAT 
 0496  EB 28 90                         JMP     COMDAT 
                                 
 0499                           PRMTDAT: 
 0499  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:CURDAT_PRE 
 049C  E8 0000 E                        CALL    PRINT           ; Print "Curren
				t date is " 
 049F  E8 0000 E                        CALL    PRINT_DATE 
 04A2  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:CURDAT_POST
				 
 04A5  E8 0000 E                        CALL    PRINT 
 04A8                           GETDAT: 
 04A8  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:NEWDAT 
 04AB  E8 0000 E                        CALL    ERROR_PRINT     ; Print "Enter 
				new date: " 
 04AE  B4 0A                            MOV     AH,STD_CON_STRING_INPUT 
 04B0  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:COMBUF 
 04B3  CD 21                            INT     int_command             ; Get i
				nput line 
 04B5  E8 01B8 R                        CALL    CRLF2 
 04B8  BE 0002 E                        MOV     SI,OFFSET TRANGROUP:COMBUF+2 
 04BB  80 3C 0D                         CMP     BYTE PTR[SI],13 ; Check if new 
				date entered 
                                        retz 
 04BE  74 CB                  2  ??001F: jz ret_l
 04C0                           COMDAT: 
 04C0  A1 0000 E                        MOV     AX,WORD PTR [INTERNATVARS.Date_
				tim_format] 
 04C3  0B C0                            OR      AX,AX 
 04C5  74 2A                            JZ      USSDAT 
 04C7  48                               DEC     AX 
 04C8  74 40                            JZ      EUSDAT 
 04CA  E8 0527 R                        CALL    GET_YR 
 04CD  72 2A                            JC      DATERRJ 
 04CF  E8 0557 R                        CALL    GET_DSEP 
 04D2  72 25                            JC      DATERRJ 
 04D4  E8 0519 R                        CALL    GET_MON 
 04D7  72 20                            JC      DATERRJ 
 04D9  E8 0557 R                        CALL    GET_DSEP 
 04DC  72 1B                            JC      DATERRJ 
 04DE  E8 0521 R                        CALL    GET_DAY 
 04E1                           DAT_SET: 
 04E1  72 6B                            JC      DATERR 
 04E3  AC                               LODSB 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-18
DEVICE TABLE AND SRH DEFINITION                             

 04E4  3C 0D                            CMP     AL,13 
 04E6  75 66                            JNZ     DATERR 
 04E8  B4 2B                            MOV     AH,SET_DATE 
 04EA  CD 21                            INT     int_command 
 04EC  0A C0                            OR      AL,AL 
 04EE  75 5E                            JNZ     DATERR 
                                        return 
 04F0                         1 ??0021:
 04F0  C3                     1  RET
                                 
 04F1                           USSDAT: 
 04F1  E8 0519 R                        CALL    GET_MON 
 04F4  72 58                            JC      DATERR 
 04F6  E8 0557 R                        CALL    GET_DSEP 
 04F9                           DATERRJ: 
 04F9  72 53                            JC      DATERR 
 04FB  E8 0521 R                        CALL    GET_DAY 
 04FE                           TGET: 
 04FE  72 4E                            JC      DATERR 
 0500  E8 0557 R                        CALL    GET_DSEP 
 0503  72 49                            JC      DATERR 
 0505  E8 0527 R                        CALL    GET_YR 
 0508  EB D7                            JMP     DAT_SET 
                                 
 050A                           EUSDAT: 
 050A  E8 0521 R                        CALL    GET_DAY 
 050D  72 3F                            JC      DATERR 
 050F  E8 0557 R                        CALL    GET_DSEP 
 0512  72 3A                            JC      DATERR 
 0514  E8 0519 R                        CALL    GET_MON 
 0517  EB E5                            JMP     TGET 
                                 
 0519                           GET_MON: 
 0519  E8 0000 E                        CALL    GETNUM          ; Get one or tw
				o digit number 
                                        retc 
 051C  72 D2                  2  ??0022: jc ret_l
 051E  8A F4                            MOV     DH,AH           ; Put in positi
				on 
                                        return 
 0520                         1 ??0024:
 0520  C3                     1  RET
                                 
 0521                           GET_DAY: 
 0521  E8 0000 E                        CALL    GETNUM 
 0524  8A D4                            MOV     DL,AH           ; Put in positi
				on 
                                        return 
 0526                         1 ??0025:
 0526  C3                     1  RET
                                 
 0527                           GET_YR: 
 0527  E8 0000 E                        CALL    GETNUM 
                                        retc 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-19
DEVICE TABLE AND SRH DEFINITION                             

 052A  72 FA                  2  ??0026: jc ret_l
 052C  B9 076C                          MOV     CX,1900 
 052F  E8 0557 R                        CALL    GET_DSEP 
 0532  9C                               PUSHF 
 0533  4E                               DEC     SI 
 0534  9D                               POPF 
 0535  74 10                            JZ      BIAS 
 0537  80 3C 0D                         CMP     BYTE PTR[SI],13 
 053A  74 0B                            JZ      BIAS 
 053C  B0 64                            MOV     AL,100 
 053E  F6 E4                            MUL     AH 
 0540  8B C8                            MOV     CX,AX 
 0542  E8 0000 E                        CALL    GETNUM 
                                        retc 
 0545  72 DF                  2  ??0028: jc ret_l
 0547                           BIAS: 
 0547  8A C4                            MOV     AL,AH 
 0549  B4 00                            MOV     AH,0 
 054B  03 C8                            ADD     CX,AX 
                                 
                                        ENDIF 
                                        return 
 054D                         1 ??002A:
 054D  C3                     1  RET
                                 
 054E                           DATERR: 
 054E  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:BADDAT 
 0551  E8 0000 E                        CALL    PRINT 
 0554  E9 04A8 R                        JMP     GETDAT 
                                 
 0557                           GET_DSEP: 
 0557  AC                               LODSB 
 0558  3C 2F                            CMP     AL,'/' 
                                        retz 
 055A  74 F1                  2  ??002B: jz ret_l
 055C  3C 2E                            CMP     AL,'.' 
                                        retz 
 055E  74 ED                  2  ??002D: jz ret_l
 0560  3C 2D                            CMP     AL,'-' 
                                        retz 
 0562  74 E9                  2  ??002F: jz ret_l
 0564  F9                               STC 
                                        return 
 0565                         1 ??0031:
 0565  C3                     1  RET
                                 
                                ; TIME gets and sets the time 
                                 
 0566                           CTIME: 
 0566  BE 0081                          MOV     SI,81H                  ; Accep
				ting argument for time inline 
 0569  E8 0000 E                        CALL    SCANOFF 
 056C  3C 0D                            CMP     AL,13 
 056E  74 74                            JZ      PRMTTIM 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-20
DEVICE TABLE AND SRH DEFINITION                             

 0570  BB 2E3A                          MOV     BX,".:" 
 0573  E8 0654 R                        CALL    INLINE 
 0576  E9 05FE R                        JMP     COMTIM 
                                 
 0579                           PRINT_TIME: 
 0579  B4 2C                            MOV     AH,GET_TIME 
 057B  CD 21                            INT     int_command              ; Get 
				time in CX:DX 
 057D  57                               PUSH    DI 
 057E  06                               PUSH    ES 
 057F  0E                               PUSH    CS 
 0580  07                               POP     ES 
 0581  BF 0000 E                        MOV     DI,OFFSET TRANGROUP:CHARBUF 
 0584  B3 01                            MOV     BL,1            ; Always 24 hou
				r time 
 0586  E8 0595 R                        CALL    P_TIME 
 0589  33 C0                            XOR     AX,AX 
 058B  AA                               STOSB 
 058C  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:CHARBUF 
 058F  E8 0000 E                        CALL    ZPRINT 
 0592  07                               POP     ES 
 0593  5F                               POP     DI 
                                        return 
 0594                         1 ??0032:
 0594  C3                     1  RET
                                 
 0595                           P_TIME: 
 0595  8A C5                            MOV     AL,CH 
 0597  F6 C3 7F                         TEST    BL,07FH         ; Ignore high b
				it 
 059A  75 12                            JNZ     T24             ; 24 hr time? 
 059C  B7 61                            MOV     BH,"a"          ; Assume A.M. 
 059E  3C 0C                            CMP     AL,12           ; In the aftern
				oon? 
 05A0  72 06                            JB      MORN 
 05A2  B7 70                            MOV     BH,"p" 
 05A4  74 02                            JE      MORN 
 05A6  2C 0C                            SUB     AL,12           ; Keep it to 12
				 hours or less 
 05A8                           MORN: 
 05A8  0A C0                            OR      AL,AL           ; Before 1 am? 
 05AA  75 02                            JNZ     T24 
 05AC  B0 0C                            MOV     AL,12 
 05AE                           T24: 
 05AE  53                               PUSH    BX 
 05AF  B7 10                            MOV     BH,"0"-" "      ; Enable leadin
				g zero suppression 
 05B1  E8 0000 E                        CALL    OUT2 
 05B4  E8 05DF R                        CALL    P_TSEP 
 05B7  8A C1                            MOV     AL,CL 
 05B9  E8 0000 E                        CALL    OUT2 
 05BC  5B                               POP     BX 
 05BD  53                               PUSH    BX 
 05BE  F6 C3 80                         TEST    BL,80H 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-21
DEVICE TABLE AND SRH DEFINITION                             

 05C1  75 12                            JNZ     PAP             ; If from DIR, 
				go directly to am pm 
 05C3  B7 00                            MOV     BH,0            ; Disable leadi
				ng zero suppression 
 05C5  E8 05DF R                        CALL    P_TSEP 
 05C8  8A C6                            MOV     AL,DH 
 05CA  E8 0000 E                        CALL    OUT2 
                                        IF NOT IBMJAPAN 
 05CD  B0 2E                            MOV     AL,"." 
 05CF  AA                               STOSB 
 05D0  8A C2                            MOV     AL,DL 
 05D2  E8 0000 E                        CALL    OUT2 
                                        ENDIF 
 05D5                           PAP: 
 05D5  5B                               POP     BX 
 05D6  F6 C3 7F                         TEST    BL,07FH         ; Ignore high b
				it 
                                        retnz                   ; 24 hour time,
				 no am pm 
 05D9  75 B9                  2  ??0033: jnz ret_l
 05DB  8A C7                            MOV     AL,BH 
 05DD  AA                               STOSB                   ; Store 'a' or 
				'p' 
                                        return 
 05DE                         1 ??0035:
 05DE  C3                     1  RET
                                 
 05DF                           P_TSEP: 
 05DF  A0 000D E                        MOV     AL,[INTERNATVARS.Time_sep] 
 05E2  AA                               STOSB 
                                        return 
 05E3                         1 ??0036:
 05E3  C3                     1  RET
                                 
                                 
 05E4                           PRMTTIM: 
 05E4  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:CURTIM_PRE 
 05E7  E8 0000 E                        CALL    PRINT           ; Print "Curren
				t time is " 
 05EA  E8 0579 R                        CALL    PRINT_TIME 
 05ED  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:CURTIM_POST
				 
 05F0  E8 0000 E                        CALL    PRINT 
 05F3                           GETTIM: 
 05F3  33 C9                            XOR     CX,CX           ; Initialize ho
				urs and minutes to zero 
 05F5  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:NEWTIM 
 05F8  BB 2E3A                          MOV     BX,".:" 
 05FB  E8 063F R                        CALL    GETBUF 
 05FE                           COMTIM: 
                                        retz                    ; If no time pr
				esent, don't change it 
 05FE  74 E3                  2  ??0037: jz ret_l
 0600  72 35                            JC      TIMERR 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-22
DEVICE TABLE AND SRH DEFINITION                             

 0602  8B CA                            MOV     CX,DX 
 0604  33 D2                            XOR     DX,DX 
 0606  AC                               LODSB 
 0607  3C 0D                            CMP     AL,13 
 0609  74 24                            JZ      SAVTIM 
 060B  3A C3                            CMP     AL,BL 
 060D  74 04                            JZ      GOTSEC 
 060F  3A C7                            CMP     AL,BH 
 0611  75 24                            JNZ     TIMERR 
 0613                           GOTSEC: 
 0613  E8 0000 E                        CALL    GETNUM 
 0616  72 1F                            JC      TIMERR 
 0618  8A F4                            MOV     DH,AH           ; Position seco
				nds 
 061A  AC                               LODSB 
 061B  3C 0D                            CMP     AL,13 
 061D  74 10                            JZ      SAVTIM 
 061F  3C 2E                            CMP     AL,"." 
 0621  75 14                            JNZ     TIMERR 
 0623  E8 0000 E                        CALL    GETNUM 
 0626  72 0F                            JC      TIMERR 
 0628  8A D4                            MOV     DL,AH 
 062A  AC                               LODSB 
 062B  3C 0D                            CMP     AL,13 
 062D  75 08                            JNZ     TIMERR 
 062F                           SAVTIM: 
 062F  B4 2D                            MOV     AH,SET_TIME 
 0631  CD 21                            INT     int_command 
 0633  0A C0                            OR      AL,AL 
                                        retz                    ; Error in time
				? 
 0635  74 AC                  2  ??0039: jz ret_l
 0637                           TIMERR: 
 0637  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:BADTIM 
 063A  E8 0000 E                        CALL    PRINT           ; Print error m
				essage 
 063D  EB B4                            JMP     GETTIM          ; Try again 
                                 
 063F                           GETBUF: 
 063F  E8 0000 E                        CALL    ERROR_PRINT     ; Print "Enter 
				new time: " 
 0642  B4 0A                            MOV     AH,STD_CON_STRING_INPUT 
 0644  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:COMBUF 
 0647  CD 21                            INT     int_command             ; Get i
				nput line 
 0649  E8 01B8 R                        CALL    CRLF2 
 064C  BE 0002 E                        MOV     SI,OFFSET TRANGROUP:COMBUF+2 
 064F  80 3C 0D                         CMP     BYTE PTR[SI],13 ; Check if new 
				time entered 
                                        retz 
 0652  74 8F                  2  ??003B: jz ret_l
 0654                           INLINE: 
 0654  E8 0000 E                        CALL    GETNUM          ; Get one or tw
				o digit number 
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Page     1-23
DEVICE TABLE AND SRH DEFINITION                             

                                        retc 
 0657  72 8A                  2  ??003D: jc ret_l
 0659  8A F4                            MOV     DH,AH           ; Put in positi
				on 
 065B  AC                               LODSB 
 065C  3A C3                            CMP     AL,BL 
 065E  74 09                            JZ      NEXT 
 0660  3A C7                            CMP     AL,BH 
 0662  74 05                            JZ      NEXT 
 0664  4E                               DEC     SI              ; Clears zero f
				lag 
 0665  F8                               CLC 
 0666  B2 00                            MOV     DL,0 
                                        return                  ; Time may have
				 only an hour specified 
 0668                         1 ??003F:
 0668  C3                     1  RET
                                 
 0669                           NEXT: 
 0669  E8 0000 E                        CALL    GETNUM 
 066C  8A D4                            MOV     DL,AH           ; Put in positi
				on 
                                        return 
 066E                         1 ??0040:
 066E  C3                     1  RET
                                 
                                 
 066F                           TRANCODE        ENDS 
                                                END 

Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Symbols-4
                                                             

SRHEAD . . . . . . . . . . . . .  	000D	0005
  REQLEN . . . . . . . . . . . .  	0000
  REQUNIT  . . . . . . . . . . .  	0001
  REQFUNC  . . . . . . . . . . .  	0002
  REQSTAT  . . . . . . . . . . .  	0003
SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYSDEV . . . . . . . . . . . . .  	0012	0005
  SDEVNEXT . . . . . . . . . . .  	0000
  SDEVATT  . . . . . . . . . . .  	0004
  SDEVSTRAT  . . . . . . . . . .  	0006
  SDEVINT  . . . . . . . . . . .  	0008
  SDEVNAME . . . . . . . . . . .  	000A
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016
VARSTRUC . . . . . . . . . . . .  	0059	0005
  ISDIR  . . . . . . . . . . . .  	0000
  SIZ  . . . . . . . . . . . . .  	0001
  TTAIL  . . . . . . . . . . . .  	0002
  INFO . . . . . . . . . . . . .  	0004
  BUF  . . . . . . . . . . . . .  	0005
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Symbols-5
                                                             

Segments and Groups:

                N a m e         	Size	Align	Combine Class

EGROUP . . . . . . . . . . . . .  	GROUP
  ZEXEC_CODE . . . . . . . . . .  	0000	PARA	PUBLIC	
  ZEXEC_DATA . . . . . . . . . .  	0000	PARA	PUBLIC	
RESGROUP . . . . . . . . . . . .  	GROUP
  CODERES  . . . . . . . . . . .  	0000	PARA	PUBLIC	
  DATARES  . . . . . . . . . . .  	0000	PARA	PUBLIC	
  ENVIRONMENT  . . . . . . . . .  	0000	PARA	PUBLIC	
  INIT . . . . . . . . . . . . .  	0000	PARA	PUBLIC	
  TAIL . . . . . . . . . . . . .  	0000	PARA	PUBLIC	
TRANGROUP  . . . . . . . . . . .  	GROUP
  TRANCODE . . . . . . . . . . .  	066F	BYTE	PUBLIC	
  TRANDATA . . . . . . . . . . .  	0000	PARA	PUBLIC	
  TRANSPACE  . . . . . . . . . .  	0000	PARA	PUBLIC	
  TRANTAIL . . . . . . . . . . .  	0000	PARA	PUBLIC	

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ACRLF  . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
AGAIN  . . . . . . . . . . . . .  	L NEAR	00D3	TRANCODE
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Number	0000	
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ARGTS  . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ASWITCH  . . . . . . . . . . . .  	Number	0004	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Symbols-6
                                                             

ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	

BADARGS  . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
BADCD  . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
BADCDERR . . . . . . . . . . . .  	L NEAR	01F1	TRANCODE	Global
BADCDERRJ  . . . . . . . . . . .  	L NEAR	038D	TRANCODE
BADDAT . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
BADDRV . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
BADMDERR . . . . . . . . . . . .  	L NEAR	039B	TRANCODE
BADMKD . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
BADRDERR . . . . . . . . . . . .  	L NEAR	03D0	TRANCODE
BADRMD . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
BADSWT . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
BADTIM . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
BADVOLARG  . . . . . . . . . . .  	L NEAR	02C4	TRANCODE
BIAS . . . . . . . . . . . . . .  	L NEAR	0547	TRANCODE
BITS . . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
BSWITCH  . . . . . . . . . . . .  	Number	0008	
BUFINSIZ . . . . . . . . . . . .  	Number	0010	
BYTCNT . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External

CATALOG  . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	Global
CERROR . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
CERRORJ3 . . . . . . . . . . . .  	L NEAR	039E	TRANCODE
CHARBUF  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHECKNOARG . . . . . . . . . . .  	L NEAR	02C0	TRANCODE
CHKCNT . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
CLRLOOP  . . . . . . . . . . . .  	L NEAR	0355	TRANCODE
CLS  . . . . . . . . . . . . . .  	L NEAR	034B	TRANCODE	Global
CLSSTRING  . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
COMBUF . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
COMBUFLEN  . . . . . . . . . . .  	Number	0080	
COMDAT . . . . . . . . . . . . .  	L NEAR	04C0	TRANCODE
COMSW  . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
COMTIM . . . . . . . . . . . . .  	L NEAR	05FE	TRANCODE
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Symbols-7
                                                             

CRENAME  . . . . . . . . . . . .  	L NEAR	01FA	TRANCODE	Global
CRLF2  . . . . . . . . . . . . .  	L NEAR	01B8	TRANCODE	Global
CTIME  . . . . . . . . . . . . .  	L NEAR	0566	TRANCODE	Global
CURDAT_MID . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
CURDAT_POST  . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
CURDAT_PRE . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURDRV . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
CURTIM_POST  . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
CURTIM_PRE . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DATE . . . . . . . . . . . . . .  	L NEAR	048C	TRANCODE	Global
DATERR . . . . . . . . . . . . .  	L NEAR	054E	TRANCODE
DATERRJ  . . . . . . . . . . . .  	L NEAR	04F9	TRANCODE
DATE_CXDX  . . . . . . . . . . .  	L NEAR	0426	TRANCODE
DATINIT  . . . . . . . . . . . .  	F PROC	03FC	TRANCODE	Global	Length = 002A
DAT_SET  . . . . . . . . . . . .  	L NEAR	04E1	TRANCODE
DBPBHL . . . . . . . . . . . . .  	Number	0016	
DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DESTINFO . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTISDIR  . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTTAIL . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
DEVBPB . . . . . . . . . . . . .  	Number	0002	
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DEVIFL . . . . . . . . . . . . .  	Number	0007	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Symbols-8
                                                             

DEVINIT  . . . . . . . . . . . .  	Number	0000	
DEVIOCTL . . . . . . . . . . . .  	Number	4000	
DEVIST . . . . . . . . . . . . .  	Number	0006	
DEVMDCH  . . . . . . . . . . . .  	Number	0001	
DEVOFL . . . . . . . . . . . . .  	Number	000B	
DEVOST . . . . . . . . . . . . .  	Number	000A	
DEVRD  . . . . . . . . . . . . .  	Number	0004	
DEVRDIOCTL . . . . . . . . . . .  	Number	0003	
DEVRDND  . . . . . . . . . . . .  	Number	0005	
DEVTYP . . . . . . . . . . . . .  	Number	8000	
DEVWRIOCTL . . . . . . . . . . .  	Number	000C	
DEVWRT . . . . . . . . . . . . .  	Number	0008	
DEVWRTV  . . . . . . . . . . . .  	Number	0009	
DFLSHL . . . . . . . . . . . . .  	Number	000F	
DINITHL  . . . . . . . . . . . .  	Number	001A	
DIR  . . . . . . . . . . . . . .  	L NEAR	0036	TRANCODE
DIRBUF . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DIRCHAR  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DIRHEAD_POST . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
DIRHEAD_PRE  . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTART . . . . . . . . . . . .  	L NEAR	00C9	TRANCODE
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISK_RESET . . . . . . . . . . .  	Number	000D	
DISPSIZE . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
DMEDHL . . . . . . . . . . . . .  	Number	000F	
DMES . . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
DOFIRST  . . . . . . . . . . . .  	L NEAR	00B8	TRANCODE
DOSVER . . . . . . . . . . . . .  	Number	00D3	
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DRDNDHL  . . . . . . . . . . . .  	Number	000E	
DRDWRHL  . . . . . . . . . . . .  	Number	0016	
DRVCHAR  . . . . . . . . . . . .  	Number	003A	
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DSTATHL  . . . . . . . . . . . .  	Number	000D	
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ERA1 . . . . . . . . . . . . . .  	L NEAR	01E4	TRANCODE
ERASE  . . . . . . . . . . . . .  	L NEAR	01D2	TRANCODE	Global
ERRJ . . . . . . . . . . . . . .  	L NEAR	0236	TRANCODE
ERRJ2  . . . . . . . . . . . . .  	L NEAR	01F4	TRANCODE
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Symbols-9
                                                             

ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_OUTPUT . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
ERROR_OUTPUTJ  . . . . . . . . .  	L NEAR	027D	TRANCODE
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_PRINT  . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
EUPDAT . . . . . . . . . . . . .  	L NEAR	0461	TRANCODE
EUSDAT . . . . . . . . . . . . .  	L NEAR	050A	TRANCODE
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FALSE  . . . . . . . . . . . . .  	Number	0000	
FATPRI . . . . . . . . . . . . .  	Number	001E	
FCB  . . . . . . . . . . . . . .  	Number	005C	
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILECNT  . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
FILEENT  . . . . . . . . . . . .  	L NEAR	00F6	TRANCODE
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Symbols-10
                                                             

FILPERPROC . . . . . . . . . . .  	Number	0014	
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FREEPRI  . . . . . . . . . . . .  	Number	0000	
FULLSCR  . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External

GETBUF . . . . . . . . . . . . .  	L NEAR	063F	TRANCODE
GETDAT . . . . . . . . . . . . .  	L NEAR	04A8	TRANCODE
GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GETKEYSTROKE . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
GETNUM . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
GETTIM . . . . . . . . . . . . .  	L NEAR	05F3	TRANCODE
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DAY  . . . . . . . . . . . .  	L NEAR	0521	TRANCODE
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_DSEP . . . . . . . . . . . .  	L NEAR	0557	TRANCODE
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_MON  . . . . . . . . . . . .  	L NEAR	0519	TRANCODE
GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GET_YR . . . . . . . . . . . . .  	L NEAR	0527	TRANCODE
GOTSEC . . . . . . . . . . . . .  	L NEAR	0613	TRANCODE
GOTSWITCH  . . . . . . . . . . .  	Number	8000	
GOTTARG  . . . . . . . . . . . .  	L NEAR	0246	TRANCODE
GOTUDRV  . . . . . . . . . . . .  	L NEAR	03E7	TRANCODE

HIGHMEM  . . . . . . . . . . . .  	Alias	 FALSE		

IBM  . . . . . . . . . . . . . .  	Alias	 FALSE		
IBMJAPAN . . . . . . . . . . . .  	Alias	 FALSE		
IBMVER . . . . . . . . . . . . .  	Alias	 IBM		
INLINE . . . . . . . . . . . . .  	L NEAR	0654	TRANCODE
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNATVARS . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Symbols-11
                                                             

INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
ISCIN  . . . . . . . . . . . . .  	Number	0001	
ISCLOCK  . . . . . . . . . . . .  	Number	0008	
ISCOUT . . . . . . . . . . . . .  	Number	0002	
ISFATBYDEV . . . . . . . . . . .  	Number	2000	
ISIBM  . . . . . . . . . . . . .  	Number	0010	
ISNULL . . . . . . . . . . . . .  	Number	0004	

KANJI  . . . . . . . . . . . . .  	Alias	 FALSE		
KEEP_PROCESS . . . . . . . . . .  	Number	0031	

LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LINCNT . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
LINLEN . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
LINPERPAG  . . . . . . . . . . .  	Number	0017	
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MESTRAN  . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
MILLENIUM  . . . . . . . . . . .  	L NEAR	012C	TRANCODE
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MORN . . . . . . . . . . . . . .  	L NEAR	05A8	TRANCODE
MSVER  . . . . . . . . . . . . .  	Number	FFFF	

NEWDAT . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
NEWTIM . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
NEXENT . . . . . . . . . . . . .  	L NEAR	0158	TRANCODE
NEXENTJ  . . . . . . . . . . . .  	L NEAR	00D0	TRANCODE
NEXLIN . . . . . . . . . . . . .  	L NEAR	015F	TRANCODE
NEXT . . . . . . . . . . . . . .  	L NEAR	0669	TRANCODE
NOARGERR . . . . . . . . . . . .  	L NEAR	03A1	TRANCODE
NOFSIZ . . . . . . . . . . . . .  	L NEAR	00F9	TRANCODE
NORMPERLIN . . . . . . . . . . .  	Number	0001	
NOTEST . . . . . . . . . . . . .  	L NEAR	005D	TRANCODE
NOTEST2  . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Symbols-12
                                                             

NOTEST2J . . . . . . . . . . . .  	L NEAR	01F7	TRANCODE
NOTEST3  . . . . . . . . . . . .  	L NEAR	0209	TRANCODE
NOTFND . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
NOTFNDERR  . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		

OEM  . . . . . . . . . . . . . .  	Text  		
OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OKDODIR  . . . . . . . . . . . .  	L NEAR	008E	TRANCODE
OKVOLARG . . . . . . . . . . . .  	L NEAR	02CA	TRANCODE
ONESPC . . . . . . . . . . . . .  	L NEAR	01B3	TRANCODE	Global
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
OUT  . . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
OUT2 . . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
OUTBYTE  . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External

PAP  . . . . . . . . . . . . . .  	L NEAR	05D5	TRANCODE
PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PATHCRUNCH . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
PATHPOS  . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
PAUSE  . . . . . . . . . . . . .  	L NEAR	01C5	TRANCODE	Global
PAUSEMES . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
PLST . . . . . . . . . . . . . .  	L NEAR	045A	TRANCODE
PR . . . . . . . . . . . . . . .  	L NEAR	01BC	TRANCODE
PRBUF  . . . . . . . . . . . . .  	L NEAR	014F	TRANCODE
PRINT  . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
PRINTVOL . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
PRINT_DATE . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
PRINT_TIME . . . . . . . . . . .  	L NEAR	0579	TRANCODE	Global
PRINT_VERSION  . . . . . . . . .  	L NEAR	0300	TRANCODE	Global
PRMTDAT  . . . . . . . . . . . .  	L NEAR	0499	TRANCODE
PRMTTIM  . . . . . . . . . . . .  	L NEAR	05E4	TRANCODE
PSWITCH  . . . . . . . . . . . .  	Number	0002	
PWD  . . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
PWDJ . . . . . . . . . . . . . .  	L NEAR	037A	TRANCODE
P_DATE . . . . . . . . . . . . .  	L NEAR	0428	TRANCODE	Global
P_DAY  . . . . . . . . . . . . .  	L NEAR	0477	TRANCODE
P_DSEP . . . . . . . . . . . . .  	L NEAR	0472	TRANCODE
P_MON  . . . . . . . . . . . . .  	L NEAR	046C	TRANCODE
P_TIME . . . . . . . . . . . . .  	L NEAR	0595	TRANCODE
P_TSEP . . . . . . . . . . . . .  	L NEAR	05DF	TRANCODE
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Symbols-13
                                                             

P_YR . . . . . . . . . . . . . .  	L NEAR	047D	TRANCODE

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
REALCD . . . . . . . . . . . . .  	L NEAR	037D	TRANCODE
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
RENERR . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
RESSEG . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
RESTDIR  . . . . . . . . . . . .  	V BYTE 	0000	DATARES	External
RESTUDIR . . . . . . . . . . . .  	L NEAR	029B	TRANCODE	Global
RESTUDIR1  . . . . . . . . . . .  	L NEAR	028D	TRANCODE	Global
RET56  . . . . . . . . . . . . .  	L NEAR	02A7	TRANCODE
RET_C  . . . . . . . . . . . . .  	NEAR 	0657	TRANCODE
RET_L  . . . . . . . . . . . . .  	NEAR 	066E	TRANCODE
RET_NC . . . . . . . . . . . . .  	NEAR 	03CE	TRANCODE
RET_NZ . . . . . . . . . . . . .  	NEAR 	05D9	TRANCODE
RET_Z  . . . . . . . . . . . . .  	NEAR 	0652	TRANCODE
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
RPRI . . . . . . . . . . . . . .  	Number	0006	

SAMLIN . . . . . . . . . . . . .  	L NEAR	0190	TRANCODE
SAVTIM . . . . . . . . . . . . .  	L NEAR	062F	TRANCODE
SAVUDIR  . . . . . . . . . . . .  	L NEAR	03D6	TRANCODE	Global
SAVUDIR1 . . . . . . . . . . . .  	L NEAR	03D9	TRANCODE	Global
SCANOFF  . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SCROLL . . . . . . . . . . . . .  	L NEAR	018B	TRANCODE
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SETPATH  . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SETREST  . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SETRMMK  . . . . . . . . . . . .  	L NEAR	03A6	TRANCODE
SETSWT . . . . . . . . . . . . .  	L NEAR	001B	TRANCODE
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Symbols-14
                                                             

SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SHONAME  . . . . . . . . . . . .  	L NEAR	0197	TRANCODE
SHOWDIR  . . . . . . . . . . . .  	L NEAR	00C4	TRANCODE
STBUI  . . . . . . . . . . . . .  	Number	0200	
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDON  . . . . . . . . . . . . .  	Number	0100	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
STECODE  . . . . . . . . . . . .  	Number	00FF	
STERR  . . . . . . . . . . . . .  	Number	8000	
SWITCH . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SYM  . . . . . . . . . . . . . .  	Number	003E	

T24  . . . . . . . . . . . . . .  	L NEAR	05AE	TRANCODE
TGET . . . . . . . . . . . . . .  	L NEAR	04FE	TRANCODE
TIMERR . . . . . . . . . . . . .  	L NEAR	0637	TRANCODE
TPA  . . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
TRUE . . . . . . . . . . . . . .  	Number	FFFF	
TWODIGYR . . . . . . . . . . . .  	L NEAR	0486	TRANCODE
TYPEFIL  . . . . . . . . . . . .  	L NEAR	0239	TRANCODE	Global
TYPELP . . . . . . . . . . . . .  	L NEAR	025B	TRANCODE

UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
USERDIR1 . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
USERIDOPER . . . . . . . . . . .  	Number	005E	
USPDAT . . . . . . . . . . . . .  	L NEAR	0451	TRANCODE
USSDAT . . . . . . . . . . . . .  	L NEAR	04F1	TRANCODE

VER  . . . . . . . . . . . . . .  	Text  		
VERMES_POST  . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
VERMES_PRE . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
VERSION  . . . . . . . . . . . .  	L NEAR	02F7	TRANCODE	Global
VOLUME . . . . . . . . . . . . .  	L NEAR	02A8	TRANCODE	Global
VSWITCH  . . . . . . . . . . . .  	Number	0010	

WAIT . . . . . . . . . . . . . .  	Number	004D	
WIDEPERLIN . . . . . . . . . . .  	Number	0005	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRECODE  . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Symbols-15
                                                             

WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
WSWITCH  . . . . . . . . . . . .  	Number	0001	

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	

ZPRINT . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External

$CHDIR . . . . . . . . . . . . .  	L NEAR	035D	TRANCODE	Global
$MKDIR . . . . . . . . . . . . .  	L NEAR	0390	TRANCODE	Global
$RMDIR . . . . . . . . . . . . .  	L NEAR	03C5	TRANCODE	Global
??0000 . . . . . . . . . . . . .  	L NEAR	01B2	TRANCODE
??0001 . . . . . . . . . . . . .  	L NEAR	01C4	TRANCODE
??0002 . . . . . . . . . . . . .  	L NEAR	01D1	TRANCODE
??0003 . . . . . . . . . . . . .  	L NEAR	0234	TRANCODE
??0007 . . . . . . . . . . . . .  	L NEAR	027D	TRANCODE
??0008 . . . . . . . . . . . . .  	L NEAR	027C	TRANCODE
??0009 . . . . . . . . . . . . .  	L NEAR	0288	TRANCODE
??000B . . . . . . . . . . . . .  	L NEAR	0299	TRANCODE
??000D . . . . . . . . . . . . .  	L NEAR	02A7	TRANCODE
??000E . . . . . . . . . . . . .  	L NEAR	035C	TRANCODE
??000F . . . . . . . . . . . . .  	L NEAR	038B	TRANCODE
??0011 . . . . . . . . . . . . .  	L NEAR	0399	TRANCODE
??0013 . . . . . . . . . . . . .  	L NEAR	03C4	TRANCODE
??0014 . . . . . . . . . . . . .  	L NEAR	03CE	TRANCODE
??0016 . . . . . . . . . . . . .  	L NEAR	03F7	TRANCODE
??0018 . . . . . . . . . . . . .  	L NEAR	03FB	TRANCODE
??0019 . . . . . . . . . . . . .  	L NEAR	0450	TRANCODE
??001A . . . . . . . . . . . . .  	L NEAR	0460	TRANCODE
??001B . . . . . . . . . . . . .  	L NEAR	0471	TRANCODE
??001C . . . . . . . . . . . . .  	L NEAR	0476	TRANCODE
??001D . . . . . . . . . . . . .  	L NEAR	047C	TRANCODE
??001E . . . . . . . . . . . . .  	L NEAR	048B	TRANCODE
??001F . . . . . . . . . . . . .  	L NEAR	04BE	TRANCODE
??0021 . . . . . . . . . . . . .  	L NEAR	04F0	TRANCODE
??0022 . . . . . . . . . . . . .  	L NEAR	051C	TRANCODE
??0024 . . . . . . . . . . . . .  	L NEAR	0520	TRANCODE
??0025 . . . . . . . . . . . . .  	L NEAR	0526	TRANCODE
??0026 . . . . . . . . . . . . .  	L NEAR	052A	TRANCODE
??0028 . . . . . . . . . . . . .  	L NEAR	0545	TRANCODE
??002A . . . . . . . . . . . . .  	L NEAR	054D	TRANCODE
??002B . . . . . . . . . . . . .  	L NEAR	055A	TRANCODE
??002D . . . . . . . . . . . . .  	L NEAR	055E	TRANCODE
??002F . . . . . . . . . . . . .  	L NEAR	0562	TRANCODE
??0031 . . . . . . . . . . . . .  	L NEAR	0565	TRANCODE
??0032 . . . . . . . . . . . . .  	L NEAR	0594	TRANCODE
??0033 . . . . . . . . . . . . .  	L NEAR	05D9	TRANCODE
??0035 . . . . . . . . . . . . .  	L NEAR	05DE	TRANCODE
??0036 . . . . . . . . . . . . .  	L NEAR	05E3	TRANCODE
??0037 . . . . . . . . . . . . .  	L NEAR	05FE	TRANCODE
??0039 . . . . . . . . . . . . .  	L NEAR	0635	TRANCODE
??003B . . . . . . . . . . . . .  	L NEAR	0652	TRANCODE
Microsoft (R) Macro Assembler  Version 4.00                 11/21/18 14:50:17
PART4 - COMMAND Transient routines.                         Symbols-16
                                                             

??003D . . . . . . . . . . . . .  	L NEAR	0657	TRANCODE
??003F . . . . . . . . . . . . .  	L NEAR	0668	TRANCODE
??0040 . . . . . . . . . . . . .  	L NEAR	066E	TRANCODE


   2436 Source  Lines
   3027 Total   Lines
    789 Symbols

  12576 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
